
uartApp.elf:     file format elf32-littlenios2
uartApp.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800230

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x000109e4 memsz 0x000109e4 flags r-x
    LOAD off    0x00011a04 vaddr 0x00810a04 paddr 0x008125b4 align 2**12
         filesz 0x00001bb0 memsz 0x00001bb0 flags rw-
    LOAD off    0x00014164 vaddr 0x00814164 paddr 0x00814164 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000104a0  00800230  00800230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000334  008106d0  008106d0  000116d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bb0  00810a04  008125b4  00011a04  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00814164  00814164  00014164  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  008142c4  008142c4  000135b4  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  01020000  01020000  000135b4  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  000135b4  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000fd0  00000000  00000000  000135d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00026707  00000000  00000000  000145a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009cb7  00000000  00000000  0003acaf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000c1f0  00000000  00000000  00044966  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000023b4  00000000  00000000  00050b58  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003be3  00000000  00000000  00052f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017c27  00000000  00000000  00056aef  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  0006e718  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001978  00000000  00000000  0006e758  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00073542  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000a  00000000  00000000  00073545  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0007354f  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00073550  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00073551  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00073555  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  00073559  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  0007355d  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  00073566  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  0007356f  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000b  00000000  00000000  00073578  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000002b  00000000  00000000  00073583  2**0
                  CONTENTS, READONLY
 30 .jdi          00005041  00000000  00000000  000735ae  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     0004a5f4  00000000  00000000  000785ef  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800230 l    d  .text	00000000 .text
008106d0 l    d  .rodata	00000000 .rodata
00810a04 l    d  .rwdata	00000000 .rwdata
00814164 l    d  .bss	00000000 .bss
008142c4 l    d  .sdram	00000000 .sdram
01020000 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../uartApp_bsp//obj/HAL/src/crt0.o
00800268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
00810a04 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0081074a l     O .rodata	00000010 zeroes.4404
00802958 l     F .text	000000bc __sbprintf
0081075a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00802b68 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
008046c0 l     F .text	00000008 __fp_unlock
008046d4 l     F .text	0000019c __sinit.part.1
00804870 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
00810e48 l     O .rwdata	00000020 lc_ctype_charset
00810e28 l     O .rwdata	00000020 lc_message_charset
00810e68 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00810788 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
00807a64 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00807f34 l     F .text	000000fc __sprint_r.part.0
008108ac l     O .rodata	00000010 zeroes.4349
00809570 l     F .text	000000bc __sbprintf
008108bc l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d5b8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080d6cc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080d6f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080d7ec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080d8d4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080d9c0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080db9c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
008125a4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0080de40 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080df7c l     F .text	00000034 alt_dev_reg
00811450 l     O .rwdata	00001060 jtag_uart
008124b0 l     O .rwdata	000000c4 uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080e278 l     F .text	0000020c altera_avalon_jtag_uart_irq
0080e484 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_init.c
0080ec78 l     F .text	0000009c altera_avalon_uart_irq
0080ed14 l     F .text	000000e4 altera_avalon_uart_rxirq
0080edf8 l     F .text	00000148 altera_avalon_uart_txirq
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
0080ef94 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
0080f1ac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080f638 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080fa98 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080fbf8 l     F .text	0000003c alt_get_errno
0080fc34 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00814198 g     O .bss	00000004 alt_instruction_exception_handler
00807388 g     F .text	00000074 _mprec_log10
00807474 g     F .text	0000008c __any_on
00809b24 g     F .text	00000054 _isatty_r
00810794 g     O .rodata	00000028 __mprec_tinytens
0080dad8 g     F .text	0000007c alt_main
0080046c g     F .text	000000c0 _puts_r
008141c4 g     O .bss	00000100 alt_irq
00809b78 g     F .text	00000060 _lseek_r
008125b4 g       *ABS*	00000000 __flash_rwdata_start
0080bf90 g     F .text	00000088 .hidden __eqdf2
008142c4 g       *ABS*	00000000 __alt_heap_start
00800430 g     F .text	0000003c printf
00809d90 g     F .text	0000009c _wcrtomb_r
00807df4 g     F .text	0000005c __sseek
00804a20 g     F .text	00000010 __sinit
00809c38 g     F .text	00000140 __swbuf_r
008054f4 g     F .text	0000007c _setlocale_r
00804878 g     F .text	00000078 __sfmoreglue
0080db78 g     F .text	00000024 __malloc_unlock
008061c4 g     F .text	0000015c memmove
00804a08 g     F .text	00000018 _cleanup
00806448 g     F .text	000000a8 _Balloc
0080c018 g     F .text	000000dc .hidden __gtdf2
00810020 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000000c __reset
00800020 g       *ABS*	00000000 __flash_exceptions_start
00809ac8 g     F .text	0000005c _fstat_r
0081417c g     O .bss	00000004 errno
008005b4 g     F .text	00000014 __srget
00807d70 g     F .text	00000008 __seofread
00814184 g     O .bss	00000004 alt_argv
0081a574 g       *ABS*	00000000 _gp
0080de10 g     F .text	00000030 usleep
008112d0 g     O .rwdata	00000180 alt_fd_list
00800308 g     F .text	00000070 _getc_r
00800378 g     F .text	00000088 getc
00810044 g     F .text	00000090 alt_find_dev
0080607c g     F .text	00000148 memcpy
008046c8 g     F .text	0000000c _cleanup_r
0080d3d0 g     F .text	000000dc .hidden __floatsidf
0080fb7c g     F .text	0000007c alt_io_redirect
0080c0f4 g     F .text	000000f4 .hidden __ltdf2
008106d0 g       *ABS*	00000000 __DTOR_END__
0080052c g     F .text	00000014 puts
008102a0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00807c54 g     F .text	00000074 __fpclassifyd
008072e4 g     F .text	000000a4 __ratio
00809554 g     F .text	0000001c __vfiprintf_internal
0080e67c g     F .text	0000021c altera_avalon_jtag_uart_read
00800400 g     F .text	00000030 _printf_r
0080ac30 g     F .text	00000064 .hidden __udivsi3
0080d828 g     F .text	000000ac isatty
008107e4 g     O .rodata	000000c8 __mprec_tens
00805570 g     F .text	0000000c __locale_charset
00814178 g     O .bss	00000004 __malloc_top_pad
0081257c g     O .rwdata	00000004 __mb_cur_max
008055a0 g     F .text	0000000c _localeconv_r
0080687c g     F .text	0000003c __i2b
00804ea4 g     F .text	000004c8 __sfvwrite_r
00807cc8 g     F .text	00000054 _sbrk_r
00809bd8 g     F .text	00000060 _read_r
0081259c g     O .rwdata	00000004 alt_max_fd
008097bc g     F .text	000000f0 _fclose_r
00804690 g     F .text	00000030 fflush
00814174 g     O .bss	00000004 __malloc_max_sbrked_mem
0080ad14 g     F .text	000008ac .hidden __adddf3
0080708c g     F .text	0000010c __b2d
0080a574 g     F .text	000005c4 .hidden __umoddi3
0080d9fc g     F .text	000000dc lseek
00812574 g     O .rwdata	00000004 _global_impure_ptr
00807500 g     F .text	00000564 _realloc_r
008142c4 g       *ABS*	00000000 __bss_end
0080f9a8 g     F .text	000000f0 alt_iic_isr_register
0080ff18 g     F .text	00000108 alt_tick
00809f78 g     F .text	000005fc .hidden __udivdi3
00809a24 g     F .text	00000024 _fputwc_r
008107bc g     O .rodata	00000028 __mprec_bigtens
00806660 g     F .text	00000104 __s2b
0080d4ac g     F .text	000000a8 .hidden __floatunsidf
00806dcc g     F .text	00000060 __mcmp
0080ebcc g     F .text	000000ac altera_avalon_uart_init
00804a40 g     F .text	00000018 __fp_lock_all
0080f95c g     F .text	0000004c alt_ic_irq_enabled
0080fe7c g     F .text	0000009c alt_alarm_stop
0081418c g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000d4 alt_irq_handler
008112a8 g     O .rwdata	00000028 alt_dev_null
0080f618 g     F .text	00000020 alt_dcache_flush_all
00806764 g     F .text	00000068 __hi0bits
0080d350 g     F .text	00000080 .hidden __fixdfsi
008125b4 g       *ABS*	00000000 __ram_rwdata_end
00812594 g     O .rwdata	00000008 alt_dev_list
0080de7c g     F .text	00000100 write
00810a04 g       *ABS*	00000000 __ram_rodata_end
0080d734 g     F .text	000000b8 fstat
0080c0f4 g     F .text	000000f4 .hidden __ledf2
00806b44 g     F .text	00000140 __pow5mult
00808048 g     F .text	0000150c ___vfiprintf_internal_r
0081416c g     O .bss	00000004 __nlocale_changed
0080ac94 g     F .text	00000058 .hidden __umodsi3
008142c4 g       *ABS*	00000000 end
0080f1e8 g     F .text	000001ac altera_avalon_uart_write
0080e1b8 g     F .text	000000c0 altera_avalon_jtag_uart_init
008001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
008106d0 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080eb1c g     F .text	00000060 altera_avalon_uart_write_fd
0080d554 g     F .text	00000064 .hidden __clzsi2
0080eb7c g     F .text	00000050 altera_avalon_uart_close_fd
0080e898 g     F .text	00000224 altera_avalon_jtag_uart_write
00804a30 g     F .text	00000004 __sfp_lock_acquire
00805f98 g     F .text	000000e4 memchr
00800660 g     F .text	000022dc ___vfprintf_internal_r
00804b94 g     F .text	00000310 _free_r
0080557c g     F .text	00000010 __locale_mb_cur_max
0081051c g     F .text	00000180 __call_exitprocs
00800540 g     F .text	00000074 __srget_r
00814168 g     O .bss	00000004 __mlocale_changed
00812580 g     O .rwdata	00000004 __malloc_sbrk_base
00800230 g     F .text	0000003c _start
00814190 g     O .bss	00000004 _alt_tick_rate
00806c84 g     F .text	00000148 __lshift
00814194 g     O .bss	00000004 _alt_nticks
0080dbd8 g     F .text	00000104 read
0080dfe8 g     F .text	0000006c alt_sys_init
00810404 g     F .text	00000118 __register_exitproc
008068b8 g     F .text	0000028c __multiply
0080e524 g     F .text	00000068 altera_avalon_jtag_uart_close
0080acec g     F .text	00000028 .hidden __mulsi3
00810a04 g       *ABS*	00000000 __ram_rwdata_start
008106d0 g       *ABS*	00000000 __ram_rodata_start
0081419c g     O .bss	00000028 __malloc_current_mallinfo
00807198 g     F .text	0000014c __d2b
0080e054 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
008101dc g     F .text	000000c4 alt_get_fd
0080f4c0 g     F .text	00000158 alt_busy_sleep
0080968c g     F .text	00000054 _close_r
00810388 g     F .text	0000007c memcmp
0080e114 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
008142c4 g       *ABS*	00000000 __alt_stack_base
0080e164 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00802a14 g     F .text	00000154 __swsetup_r
0080b5c0 g     F .text	000009d0 .hidden __divdf3
008048f0 g     F .text	00000118 __sfp
008073fc g     F .text	00000078 __copybits
00810ea0 g     O .rwdata	00000408 __malloc_av_
00804a3c g     F .text	00000004 __sinit_lock_release
0080c1e8 g     F .text	0000086c .hidden __muldf3
00807d1c g     F .text	00000054 __sread
008100d4 g     F .text	00000108 alt_find_file
0080f674 g     F .text	000000a4 alt_dev_llist_insert
0080db54 g     F .text	00000024 __malloc_lock
0080dd60 g     F .text	000000b0 sbrk
00804634 g     F .text	0000005c _fflush_r
008096e0 g     F .text	000000dc _calloc_r
00814164 g       *ABS*	00000000 __bss_start
00806320 g     F .text	00000128 memset
0080026c g     F .text	0000009c main
00814188 g     O .bss	00000004 alt_envp
00814170 g     O .bss	00000004 __malloc_max_total_mem
0080e0b4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00809d78 g     F .text	00000018 __swbuf
00807e50 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
008098ac g     F .text	00000014 fclose
00802d90 g     F .text	00001688 _dtoa_r
0080578c g     F .text	0000080c _malloc_r
00809eec g     F .text	00000030 __ascii_wctomb
008125a0 g     O .rwdata	00000004 alt_errno
0080536c g     F .text	000000c4 _fwalk
0080ab38 g     F .text	00000084 .hidden __divsi3
00804a70 g     F .text	00000124 _malloc_trim_r
008106d0 g       *ABS*	00000000 __CTOR_END__
00807e58 g     F .text	000000dc strcmp
008106d0 g       *ABS*	00000000 __flash_rodata_start
008106d0 g       *ABS*	00000000 __DTOR_LIST__
0080bf90 g     F .text	00000088 .hidden __nedf2
0080dfb0 g     F .text	00000038 alt_irq_init
0080dcdc g     F .text	00000084 alt_release_fd
008108cc g     O .rodata	00000100 .hidden __clz_tab
00814164 g     O .bss	00000004 _PathLocale
0081033c g     F .text	00000014 atexit
0080962c g     F .text	00000060 _write_r
008055ac g     F .text	00000018 setlocale
00812578 g     O .rwdata	00000004 _impure_ptr
00814180 g     O .bss	00000004 alt_argc
00804418 g     F .text	0000021c __sflush_r
0080f778 g     F .text	00000060 _do_dtors
00805598 g     F .text	00000008 __locale_cjk_lang
00807a80 g     F .text	000001d4 __srefill_r
00800020 g       .exceptions	00000000 alt_irq_entry
00807028 g     F .text	00000064 __ulp
00804a58 g     F .text	00000018 __fp_unlock_all
0081258c g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
008055c4 g     F .text	0000000c localeconv
01020000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0080f7f8 g     F .text	00000050 alt_ic_isr_register
008125b4 g       *ABS*	00000000 _edata
0080eabc g     F .text	00000060 altera_avalon_uart_read_fd
008142c4 g       *ABS*	00000000 _end
008098c0 g     F .text	00000164 __fputwc
00800230 g       *ABS*	00000000 __ram_exceptions_end
0080e58c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0080f8d0 g     F .text	0000008c alt_ic_irq_disable
00807d78 g     F .text	0000007c __swrite
00812584 g     O .rwdata	00000004 __malloc_trim_threshold
0080558c g     F .text	0000000c __locale_msgcharset
00810350 g     F .text	00000038 exit
00805430 g     F .text	000000c4 _fwalk_reent
00806e2c g     F .text	000001fc __mdiff
0080abbc g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00804a34 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
0080ef40 g     F .text	00000054 altera_avalon_uart_close
0081069c g     F .text	00000034 _exit
0080f394 g     F .text	0000012c alt_alarm_start
008055d0 g     F .text	000001bc __smakebuf_r
008005c8 g     F .text	00000098 strlen
0080fd20 g     F .text	0000015c open
0080c018 g     F .text	000000dc .hidden __gedf2
00812588 g     O .rwdata	00000004 __wctomb
00808030 g     F .text	00000018 __sprint_r
0080f7d8 g     F .text	00000020 alt_icache_flush_all
008125a8 g     O .rwdata	00000004 alt_priority_mask
0080f848 g     F .text	00000088 alt_ic_irq_enable
0080293c g     F .text	0000001c __vfprintf_internal
0080efd0 g     F .text	000001dc altera_avalon_uart_read
00809f1c g     F .text	0000005c _wctomb_r
0080ca54 g     F .text	000008fc .hidden __subdf3
008067cc g     F .text	000000b0 __lo0bits
008125ac g     O .rwdata	00000008 alt_alarm_list
0080f718 g     F .text	00000060 _do_ctors
00809e2c g     F .text	000000c0 wcrtomb
0080d5f4 g     F .text	000000d8 close
0080d93c g     F .text	00000084 alt_load
00809a48 g     F .text	00000080 fputwc
00804a38 g     F .text	00000004 __sinit_lock_acquire
00806518 g     F .text	00000148 __multadd
008064f0 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800000:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800004:	08408c14 	ori	at,at,560
    jmp r1
  800008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001426 	beq	r2,zero,80018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	00802074 	movhi	r2,129
  800140:	10907104 	addi	r2,r2,16836
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	00802074 	movhi	r2,129
  800158:	10907104 	addi	r2,r2,16836
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	1105883a 	add	r2,r2,r4
  800168:	10800104 	addi	r2,r2,4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80017c:	0005313a 	rdctl	r2,ipending
  800180:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800184:	e0bfff17 	ldw	r2,-4(fp)
  800188:	00000706 	br	8001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80018c:	e0bffc17 	ldw	r2,-16(fp)
  800190:	1085883a 	add	r2,r2,r2
  800194:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800198:	e0bffd17 	ldw	r2,-12(fp)
  80019c:	10800044 	addi	r2,r2,1
  8001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a4:	003fe106 	br	80012c <__alt_mem_onchip_memory2+0xff7e012c>

    active = alt_irq_pending ();
  8001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001ac:	e0bffb17 	ldw	r2,-20(fp)
  8001b0:	103fdb1e 	bne	r2,zero,800120 <__alt_mem_onchip_memory2+0xff7e0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b4:	0001883a 	nop
}
  8001b8:	0001883a 	nop
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  8001e4:	00bfffc4 	movi	r2,-1
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
  8001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  8001f0:	d0a70917 	ldw	r2,-25564(gp)
  8001f4:	10000726 	beq	r2,zero,800214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  8001f8:	d0a70917 	ldw	r2,-25564(gp)
  8001fc:	e0fffd17 	ldw	r3,-12(fp)
  800200:	e1bffe17 	ldw	r6,-8(fp)
  800204:	e17fff17 	ldw	r5,-4(fp)
  800208:	1809883a 	mov	r4,r3
  80020c:	103ee83a 	callr	r2
  800210:	00000206 	br	80021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  800218:	0005883a 	mov	r2,zero
}
  80021c:	e037883a 	mov	sp,fp
  800220:	dfc00117 	ldw	ra,4(sp)
  800224:	df000017 	ldw	fp,0(sp)
  800228:	dec00204 	addi	sp,sp,8
  80022c:	f800283a 	ret

Disassembly of section .text:

00800230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800230:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800238:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  80023c:	d6a95d14 	ori	gp,gp,42356
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800240:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800244:	10905914 	ori	r2,r2,16740

    movhi r3, %hi(__bss_end)
  800248:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  80024c:	18d0b114 	ori	r3,r3,17092

    beq r2, r3, 1f
  800250:	10c00326 	beq	r2,r3,800260 <_start+0x30>

0:
    stw zero, (r2)
  800254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  80025c:	10fffd36 	bltu	r2,r3,800254 <__alt_mem_onchip_memory2+0xff7e0254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800260:	080d93c0 	call	80d93c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800264:	080dad80 	call	80dad8 <alt_main>

00800268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800268:	003fff06 	br	800268 <__alt_mem_onchip_memory2+0xff7e0268>

0080026c <main>:
#include "system.h"
#include "io.h"

#define SWITCHES_BASE    SWITCH_BASE
#define LEDS_BASE        LED_BASE
int main() {
  80026c:	defffd04 	addi	sp,sp,-12
  800270:	dfc00215 	stw	ra,8(sp)
  800274:	df000115 	stw	fp,4(sp)
  800278:	df000104 	addi	fp,sp,4
    char previous_switch_state = 0;
  80027c:	e03fff05 	stb	zero,-4(fp)
    char current_switch_state;
    char uart_char;

    printf("Hello from Nios II!\n");
  800280:	01002074 	movhi	r4,129
  800284:	2101b404 	addi	r4,r4,1744
  800288:	080052c0 	call	80052c <puts>

    while (1) {
        // Đọc trạng thái của các công tắc
        current_switch_state = IORD(SWITCHES_BASE, 0);
  80028c:	00804134 	movhi	r2,260
  800290:	10840c04 	addi	r2,r2,4144
  800294:	10800037 	ldwio	r2,0(r2)
  800298:	e0bfff45 	stb	r2,-3(fp)

        // Kiểm tra xem có sự thay đổi từ trạng thái trước đó không
        if (current_switch_state != previous_switch_state) {
  80029c:	e0ffff47 	ldb	r3,-3(fp)
  8002a0:	e0bfff07 	ldb	r2,-4(fp)
  8002a4:	18801426 	beq	r3,r2,8002f8 <main+0x8c>
            // Ghi trạng thái của công tắc lên thanh LED
            IOWR(LEDS_BASE, 0, current_switch_state);
  8002a8:	e0ffff47 	ldb	r3,-3(fp)
  8002ac:	00804134 	movhi	r2,260
  8002b0:	10840804 	addi	r2,r2,4128
  8002b4:	10c00035 	stwio	r3,0(r2)

            // Gửi dữ liệu qua UART
            printf("Switch state changed: %x\n", current_switch_state);
  8002b8:	e0bfff47 	ldb	r2,-3(fp)
  8002bc:	100b883a 	mov	r5,r2
  8002c0:	01002074 	movhi	r4,129
  8002c4:	2101b904 	addi	r4,r4,1764
  8002c8:	08004300 	call	800430 <printf>

            // Đọc một ký tự từ UART
            uart_char = getchar();
  8002cc:	d0a00117 	ldw	r2,-32764(gp)
  8002d0:	10800117 	ldw	r2,4(r2)
  8002d4:	1009883a 	mov	r4,r2
  8002d8:	08003780 	call	800378 <getc>
  8002dc:	e0bfff85 	stb	r2,-2(fp)

            // Hiển thị ký tự trên thanh LED
            IOWR(LEDS_BASE, 0, uart_char);
  8002e0:	e0ffff87 	ldb	r3,-2(fp)
  8002e4:	00804134 	movhi	r2,260
  8002e8:	10840804 	addi	r2,r2,4128
  8002ec:	10c00035 	stwio	r3,0(r2)

            // Cập nhật trạng thái trước đó
            previous_switch_state = current_switch_state;
  8002f0:	e0bfff43 	ldbu	r2,-3(fp)
  8002f4:	e0bfff05 	stb	r2,-4(fp)
        }

        // Ngủ một khoảng thời gian ngắn để tránh việc đọc liên tục
        usleep(100000);
  8002f8:	010000b4 	movhi	r4,2
  8002fc:	2121a804 	addi	r4,r4,-31072
  800300:	080de100 	call	80de10 <usleep>
    }
  800304:	003fe106 	br	80028c <__alt_mem_onchip_memory2+0xff7e028c>

00800308 <_getc_r>:
  800308:	defffd04 	addi	sp,sp,-12
  80030c:	dc000115 	stw	r16,4(sp)
  800310:	dfc00215 	stw	ra,8(sp)
  800314:	2021883a 	mov	r16,r4
  800318:	20000226 	beq	r4,zero,800324 <_getc_r+0x1c>
  80031c:	20800e17 	ldw	r2,56(r4)
  800320:	10000c26 	beq	r2,zero,800354 <_getc_r+0x4c>
  800324:	28800117 	ldw	r2,4(r5)
  800328:	10bfffc4 	addi	r2,r2,-1
  80032c:	28800115 	stw	r2,4(r5)
  800330:	10000c16 	blt	r2,zero,800364 <_getc_r+0x5c>
  800334:	28800017 	ldw	r2,0(r5)
  800338:	10c00044 	addi	r3,r2,1
  80033c:	28c00015 	stw	r3,0(r5)
  800340:	10800003 	ldbu	r2,0(r2)
  800344:	dfc00217 	ldw	ra,8(sp)
  800348:	dc000117 	ldw	r16,4(sp)
  80034c:	dec00304 	addi	sp,sp,12
  800350:	f800283a 	ret
  800354:	d9400015 	stw	r5,0(sp)
  800358:	0804a200 	call	804a20 <__sinit>
  80035c:	d9400017 	ldw	r5,0(sp)
  800360:	003ff006 	br	800324 <__alt_mem_onchip_memory2+0xff7e0324>
  800364:	8009883a 	mov	r4,r16
  800368:	dfc00217 	ldw	ra,8(sp)
  80036c:	dc000117 	ldw	r16,4(sp)
  800370:	dec00304 	addi	sp,sp,12
  800374:	08005401 	jmpi	800540 <__srget_r>

00800378 <getc>:
  800378:	00802074 	movhi	r2,129
  80037c:	defffd04 	addi	sp,sp,-12
  800380:	10895e04 	addi	r2,r2,9592
  800384:	dc400115 	stw	r17,4(sp)
  800388:	14400017 	ldw	r17,0(r2)
  80038c:	dc000015 	stw	r16,0(sp)
  800390:	dfc00215 	stw	ra,8(sp)
  800394:	2021883a 	mov	r16,r4
  800398:	88000226 	beq	r17,zero,8003a4 <getc+0x2c>
  80039c:	88800e17 	ldw	r2,56(r17)
  8003a0:	10000d26 	beq	r2,zero,8003d8 <getc+0x60>
  8003a4:	80800117 	ldw	r2,4(r16)
  8003a8:	10bfffc4 	addi	r2,r2,-1
  8003ac:	80800115 	stw	r2,4(r16)
  8003b0:	10000c16 	blt	r2,zero,8003e4 <getc+0x6c>
  8003b4:	80800017 	ldw	r2,0(r16)
  8003b8:	10c00044 	addi	r3,r2,1
  8003bc:	80c00015 	stw	r3,0(r16)
  8003c0:	10800003 	ldbu	r2,0(r2)
  8003c4:	dfc00217 	ldw	ra,8(sp)
  8003c8:	dc400117 	ldw	r17,4(sp)
  8003cc:	dc000017 	ldw	r16,0(sp)
  8003d0:	dec00304 	addi	sp,sp,12
  8003d4:	f800283a 	ret
  8003d8:	8809883a 	mov	r4,r17
  8003dc:	0804a200 	call	804a20 <__sinit>
  8003e0:	003ff006 	br	8003a4 <__alt_mem_onchip_memory2+0xff7e03a4>
  8003e4:	800b883a 	mov	r5,r16
  8003e8:	8809883a 	mov	r4,r17
  8003ec:	dfc00217 	ldw	ra,8(sp)
  8003f0:	dc400117 	ldw	r17,4(sp)
  8003f4:	dc000017 	ldw	r16,0(sp)
  8003f8:	dec00304 	addi	sp,sp,12
  8003fc:	08005401 	jmpi	800540 <__srget_r>

00800400 <_printf_r>:
  800400:	defffd04 	addi	sp,sp,-12
  800404:	2805883a 	mov	r2,r5
  800408:	dfc00015 	stw	ra,0(sp)
  80040c:	d9800115 	stw	r6,4(sp)
  800410:	d9c00215 	stw	r7,8(sp)
  800414:	21400217 	ldw	r5,8(r4)
  800418:	d9c00104 	addi	r7,sp,4
  80041c:	100d883a 	mov	r6,r2
  800420:	08006600 	call	800660 <___vfprintf_internal_r>
  800424:	dfc00017 	ldw	ra,0(sp)
  800428:	dec00304 	addi	sp,sp,12
  80042c:	f800283a 	ret

00800430 <printf>:
  800430:	defffc04 	addi	sp,sp,-16
  800434:	dfc00015 	stw	ra,0(sp)
  800438:	d9400115 	stw	r5,4(sp)
  80043c:	d9800215 	stw	r6,8(sp)
  800440:	d9c00315 	stw	r7,12(sp)
  800444:	00802074 	movhi	r2,129
  800448:	10895e04 	addi	r2,r2,9592
  80044c:	10800017 	ldw	r2,0(r2)
  800450:	200b883a 	mov	r5,r4
  800454:	d9800104 	addi	r6,sp,4
  800458:	11000217 	ldw	r4,8(r2)
  80045c:	080293c0 	call	80293c <__vfprintf_internal>
  800460:	dfc00017 	ldw	ra,0(sp)
  800464:	dec00404 	addi	sp,sp,16
  800468:	f800283a 	ret

0080046c <_puts_r>:
  80046c:	defff604 	addi	sp,sp,-40
  800470:	dc000715 	stw	r16,28(sp)
  800474:	2021883a 	mov	r16,r4
  800478:	2809883a 	mov	r4,r5
  80047c:	dc400815 	stw	r17,32(sp)
  800480:	dfc00915 	stw	ra,36(sp)
  800484:	2823883a 	mov	r17,r5
  800488:	08005c80 	call	8005c8 <strlen>
  80048c:	10c00044 	addi	r3,r2,1
  800490:	d8800115 	stw	r2,4(sp)
  800494:	00802074 	movhi	r2,129
  800498:	1081c104 	addi	r2,r2,1796
  80049c:	d8800215 	stw	r2,8(sp)
  8004a0:	00800044 	movi	r2,1
  8004a4:	d8800315 	stw	r2,12(sp)
  8004a8:	00800084 	movi	r2,2
  8004ac:	dc400015 	stw	r17,0(sp)
  8004b0:	d8c00615 	stw	r3,24(sp)
  8004b4:	dec00415 	stw	sp,16(sp)
  8004b8:	d8800515 	stw	r2,20(sp)
  8004bc:	80000226 	beq	r16,zero,8004c8 <_puts_r+0x5c>
  8004c0:	80800e17 	ldw	r2,56(r16)
  8004c4:	10001426 	beq	r2,zero,800518 <_puts_r+0xac>
  8004c8:	81400217 	ldw	r5,8(r16)
  8004cc:	2880030b 	ldhu	r2,12(r5)
  8004d0:	10c8000c 	andi	r3,r2,8192
  8004d4:	1800061e 	bne	r3,zero,8004f0 <_puts_r+0x84>
  8004d8:	29001917 	ldw	r4,100(r5)
  8004dc:	00f7ffc4 	movi	r3,-8193
  8004e0:	10880014 	ori	r2,r2,8192
  8004e4:	20c6703a 	and	r3,r4,r3
  8004e8:	2880030d 	sth	r2,12(r5)
  8004ec:	28c01915 	stw	r3,100(r5)
  8004f0:	d9800404 	addi	r6,sp,16
  8004f4:	8009883a 	mov	r4,r16
  8004f8:	0804ea40 	call	804ea4 <__sfvwrite_r>
  8004fc:	1000091e 	bne	r2,zero,800524 <_puts_r+0xb8>
  800500:	00800284 	movi	r2,10
  800504:	dfc00917 	ldw	ra,36(sp)
  800508:	dc400817 	ldw	r17,32(sp)
  80050c:	dc000717 	ldw	r16,28(sp)
  800510:	dec00a04 	addi	sp,sp,40
  800514:	f800283a 	ret
  800518:	8009883a 	mov	r4,r16
  80051c:	0804a200 	call	804a20 <__sinit>
  800520:	003fe906 	br	8004c8 <__alt_mem_onchip_memory2+0xff7e04c8>
  800524:	00bfffc4 	movi	r2,-1
  800528:	003ff606 	br	800504 <__alt_mem_onchip_memory2+0xff7e0504>

0080052c <puts>:
  80052c:	00802074 	movhi	r2,129
  800530:	10895e04 	addi	r2,r2,9592
  800534:	200b883a 	mov	r5,r4
  800538:	11000017 	ldw	r4,0(r2)
  80053c:	080046c1 	jmpi	80046c <_puts_r>

00800540 <__srget_r>:
  800540:	defffd04 	addi	sp,sp,-12
  800544:	dc400115 	stw	r17,4(sp)
  800548:	dc000015 	stw	r16,0(sp)
  80054c:	dfc00215 	stw	ra,8(sp)
  800550:	2023883a 	mov	r17,r4
  800554:	2821883a 	mov	r16,r5
  800558:	20000226 	beq	r4,zero,800564 <__srget_r+0x24>
  80055c:	20800e17 	ldw	r2,56(r4)
  800560:	10001026 	beq	r2,zero,8005a4 <__srget_r+0x64>
  800564:	800b883a 	mov	r5,r16
  800568:	8809883a 	mov	r4,r17
  80056c:	0807a800 	call	807a80 <__srefill_r>
  800570:	10000e1e 	bne	r2,zero,8005ac <__srget_r+0x6c>
  800574:	80c00017 	ldw	r3,0(r16)
  800578:	80800117 	ldw	r2,4(r16)
  80057c:	19000044 	addi	r4,r3,1
  800580:	10bfffc4 	addi	r2,r2,-1
  800584:	80800115 	stw	r2,4(r16)
  800588:	81000015 	stw	r4,0(r16)
  80058c:	18800003 	ldbu	r2,0(r3)
  800590:	dfc00217 	ldw	ra,8(sp)
  800594:	dc400117 	ldw	r17,4(sp)
  800598:	dc000017 	ldw	r16,0(sp)
  80059c:	dec00304 	addi	sp,sp,12
  8005a0:	f800283a 	ret
  8005a4:	0804a200 	call	804a20 <__sinit>
  8005a8:	003fee06 	br	800564 <__alt_mem_onchip_memory2+0xff7e0564>
  8005ac:	00bfffc4 	movi	r2,-1
  8005b0:	003ff706 	br	800590 <__alt_mem_onchip_memory2+0xff7e0590>

008005b4 <__srget>:
  8005b4:	00802074 	movhi	r2,129
  8005b8:	10895e04 	addi	r2,r2,9592
  8005bc:	200b883a 	mov	r5,r4
  8005c0:	11000017 	ldw	r4,0(r2)
  8005c4:	08005401 	jmpi	800540 <__srget_r>

008005c8 <strlen>:
  8005c8:	208000cc 	andi	r2,r4,3
  8005cc:	10002026 	beq	r2,zero,800650 <strlen+0x88>
  8005d0:	20800007 	ldb	r2,0(r4)
  8005d4:	10002026 	beq	r2,zero,800658 <strlen+0x90>
  8005d8:	2005883a 	mov	r2,r4
  8005dc:	00000206 	br	8005e8 <strlen+0x20>
  8005e0:	10c00007 	ldb	r3,0(r2)
  8005e4:	18001826 	beq	r3,zero,800648 <strlen+0x80>
  8005e8:	10800044 	addi	r2,r2,1
  8005ec:	10c000cc 	andi	r3,r2,3
  8005f0:	183ffb1e 	bne	r3,zero,8005e0 <__alt_mem_onchip_memory2+0xff7e05e0>
  8005f4:	10c00017 	ldw	r3,0(r2)
  8005f8:	01ffbff4 	movhi	r7,65279
  8005fc:	39ffbfc4 	addi	r7,r7,-257
  800600:	00ca303a 	nor	r5,zero,r3
  800604:	01a02074 	movhi	r6,32897
  800608:	19c7883a 	add	r3,r3,r7
  80060c:	31a02004 	addi	r6,r6,-32640
  800610:	1946703a 	and	r3,r3,r5
  800614:	1986703a 	and	r3,r3,r6
  800618:	1800091e 	bne	r3,zero,800640 <strlen+0x78>
  80061c:	10800104 	addi	r2,r2,4
  800620:	10c00017 	ldw	r3,0(r2)
  800624:	19cb883a 	add	r5,r3,r7
  800628:	00c6303a 	nor	r3,zero,r3
  80062c:	28c6703a 	and	r3,r5,r3
  800630:	1986703a 	and	r3,r3,r6
  800634:	183ff926 	beq	r3,zero,80061c <__alt_mem_onchip_memory2+0xff7e061c>
  800638:	00000106 	br	800640 <strlen+0x78>
  80063c:	10800044 	addi	r2,r2,1
  800640:	10c00007 	ldb	r3,0(r2)
  800644:	183ffd1e 	bne	r3,zero,80063c <__alt_mem_onchip_memory2+0xff7e063c>
  800648:	1105c83a 	sub	r2,r2,r4
  80064c:	f800283a 	ret
  800650:	2005883a 	mov	r2,r4
  800654:	003fe706 	br	8005f4 <__alt_mem_onchip_memory2+0xff7e05f4>
  800658:	0005883a 	mov	r2,zero
  80065c:	f800283a 	ret

00800660 <___vfprintf_internal_r>:
  800660:	deffb804 	addi	sp,sp,-288
  800664:	dfc04715 	stw	ra,284(sp)
  800668:	ddc04515 	stw	r23,276(sp)
  80066c:	dd404315 	stw	r21,268(sp)
  800670:	d9002d15 	stw	r4,180(sp)
  800674:	282f883a 	mov	r23,r5
  800678:	302b883a 	mov	r21,r6
  80067c:	d9c02e15 	stw	r7,184(sp)
  800680:	df004615 	stw	fp,280(sp)
  800684:	dd804415 	stw	r22,272(sp)
  800688:	dd004215 	stw	r20,264(sp)
  80068c:	dcc04115 	stw	r19,260(sp)
  800690:	dc804015 	stw	r18,256(sp)
  800694:	dc403f15 	stw	r17,252(sp)
  800698:	dc003e15 	stw	r16,248(sp)
  80069c:	08055a00 	call	8055a0 <_localeconv_r>
  8006a0:	10800017 	ldw	r2,0(r2)
  8006a4:	1009883a 	mov	r4,r2
  8006a8:	d8803415 	stw	r2,208(sp)
  8006ac:	08005c80 	call	8005c8 <strlen>
  8006b0:	d8803715 	stw	r2,220(sp)
  8006b4:	d8802d17 	ldw	r2,180(sp)
  8006b8:	10000226 	beq	r2,zero,8006c4 <___vfprintf_internal_r+0x64>
  8006bc:	10800e17 	ldw	r2,56(r2)
  8006c0:	1000fb26 	beq	r2,zero,800ab0 <___vfprintf_internal_r+0x450>
  8006c4:	b880030b 	ldhu	r2,12(r23)
  8006c8:	10c8000c 	andi	r3,r2,8192
  8006cc:	1800061e 	bne	r3,zero,8006e8 <___vfprintf_internal_r+0x88>
  8006d0:	b9001917 	ldw	r4,100(r23)
  8006d4:	00f7ffc4 	movi	r3,-8193
  8006d8:	10880014 	ori	r2,r2,8192
  8006dc:	20c6703a 	and	r3,r4,r3
  8006e0:	b880030d 	sth	r2,12(r23)
  8006e4:	b8c01915 	stw	r3,100(r23)
  8006e8:	10c0020c 	andi	r3,r2,8
  8006ec:	1800c326 	beq	r3,zero,8009fc <___vfprintf_internal_r+0x39c>
  8006f0:	b8c00417 	ldw	r3,16(r23)
  8006f4:	1800c126 	beq	r3,zero,8009fc <___vfprintf_internal_r+0x39c>
  8006f8:	1080068c 	andi	r2,r2,26
  8006fc:	00c00284 	movi	r3,10
  800700:	10c0c626 	beq	r2,r3,800a1c <___vfprintf_internal_r+0x3bc>
  800704:	d8c00404 	addi	r3,sp,16
  800708:	05002074 	movhi	r20,129
  80070c:	d9001e04 	addi	r4,sp,120
  800710:	a501d284 	addi	r20,r20,1866
  800714:	d8c01e15 	stw	r3,120(sp)
  800718:	d8002015 	stw	zero,128(sp)
  80071c:	d8001f15 	stw	zero,124(sp)
  800720:	d8003315 	stw	zero,204(sp)
  800724:	d8003615 	stw	zero,216(sp)
  800728:	d8003815 	stw	zero,224(sp)
  80072c:	1811883a 	mov	r8,r3
  800730:	d8003915 	stw	zero,228(sp)
  800734:	d8003a15 	stw	zero,232(sp)
  800738:	d8002f15 	stw	zero,188(sp)
  80073c:	d9002815 	stw	r4,160(sp)
  800740:	a8800007 	ldb	r2,0(r21)
  800744:	10028b26 	beq	r2,zero,801174 <___vfprintf_internal_r+0xb14>
  800748:	00c00944 	movi	r3,37
  80074c:	a823883a 	mov	r17,r21
  800750:	10c0021e 	bne	r2,r3,80075c <___vfprintf_internal_r+0xfc>
  800754:	00001406 	br	8007a8 <___vfprintf_internal_r+0x148>
  800758:	10c00326 	beq	r2,r3,800768 <___vfprintf_internal_r+0x108>
  80075c:	8c400044 	addi	r17,r17,1
  800760:	88800007 	ldb	r2,0(r17)
  800764:	103ffc1e 	bne	r2,zero,800758 <__alt_mem_onchip_memory2+0xff7e0758>
  800768:	8d61c83a 	sub	r16,r17,r21
  80076c:	80000e26 	beq	r16,zero,8007a8 <___vfprintf_internal_r+0x148>
  800770:	d8c02017 	ldw	r3,128(sp)
  800774:	d8801f17 	ldw	r2,124(sp)
  800778:	45400015 	stw	r21,0(r8)
  80077c:	1c07883a 	add	r3,r3,r16
  800780:	10800044 	addi	r2,r2,1
  800784:	d8c02015 	stw	r3,128(sp)
  800788:	44000115 	stw	r16,4(r8)
  80078c:	d8801f15 	stw	r2,124(sp)
  800790:	00c001c4 	movi	r3,7
  800794:	1880a916 	blt	r3,r2,800a3c <___vfprintf_internal_r+0x3dc>
  800798:	42000204 	addi	r8,r8,8
  80079c:	d9402f17 	ldw	r5,188(sp)
  8007a0:	2c0b883a 	add	r5,r5,r16
  8007a4:	d9402f15 	stw	r5,188(sp)
  8007a8:	88800007 	ldb	r2,0(r17)
  8007ac:	1000aa26 	beq	r2,zero,800a58 <___vfprintf_internal_r+0x3f8>
  8007b0:	8d400044 	addi	r21,r17,1
  8007b4:	8c400047 	ldb	r17,1(r17)
  8007b8:	0021883a 	mov	r16,zero
  8007bc:	00bfffc4 	movi	r2,-1
  8007c0:	0025883a 	mov	r18,zero
  8007c4:	dc002905 	stb	r16,164(sp)
  8007c8:	d8002785 	stb	zero,158(sp)
  8007cc:	d8002b05 	stb	zero,172(sp)
  8007d0:	d8802a15 	stw	r2,168(sp)
  8007d4:	d8003115 	stw	zero,196(sp)
  8007d8:	04c01604 	movi	r19,88
  8007dc:	05800244 	movi	r22,9
  8007e0:	9021883a 	mov	r16,r18
  8007e4:	4039883a 	mov	fp,r8
  8007e8:	ad400044 	addi	r21,r21,1
  8007ec:	88bff804 	addi	r2,r17,-32
  8007f0:	98833236 	bltu	r19,r2,8014bc <___vfprintf_internal_r+0xe5c>
  8007f4:	100490ba 	slli	r2,r2,2
  8007f8:	00c02034 	movhi	r3,128
  8007fc:	18c20304 	addi	r3,r3,2060
  800800:	10c5883a 	add	r2,r2,r3
  800804:	10800017 	ldw	r2,0(r2)
  800808:	1000683a 	jmp	r2
  80080c:	008013b4 	movhi	r2,78
  800810:	008014bc 	xorhi	r2,zero,82
  800814:	008014bc 	xorhi	r2,zero,82
  800818:	008013d4 	movui	r2,79
  80081c:	008014bc 	xorhi	r2,zero,82
  800820:	008014bc 	xorhi	r2,zero,82
  800824:	008014bc 	xorhi	r2,zero,82
  800828:	008014bc 	xorhi	r2,zero,82
  80082c:	008014bc 	xorhi	r2,zero,82
  800830:	008014bc 	xorhi	r2,zero,82
  800834:	00800abc 	xorhi	r2,zero,42
  800838:	008012c4 	movi	r2,75
  80083c:	008014bc 	xorhi	r2,zero,82
  800840:	00800980 	call	80098 <__alt_mem_sdram-0x77ff68>
  800844:	00800ae0 	cmpeqi	r2,zero,43
  800848:	008014bc 	xorhi	r2,zero,82
  80084c:	00800b30 	cmpltui	r2,zero,44
  800850:	00800b3c 	xorhi	r2,zero,44
  800854:	00800b3c 	xorhi	r2,zero,44
  800858:	00800b3c 	xorhi	r2,zero,44
  80085c:	00800b3c 	xorhi	r2,zero,44
  800860:	00800b3c 	xorhi	r2,zero,44
  800864:	00800b3c 	xorhi	r2,zero,44
  800868:	00800b3c 	xorhi	r2,zero,44
  80086c:	00800b3c 	xorhi	r2,zero,44
  800870:	00800b3c 	xorhi	r2,zero,44
  800874:	008014bc 	xorhi	r2,zero,82
  800878:	008014bc 	xorhi	r2,zero,82
  80087c:	008014bc 	xorhi	r2,zero,82
  800880:	008014bc 	xorhi	r2,zero,82
  800884:	008014bc 	xorhi	r2,zero,82
  800888:	008014bc 	xorhi	r2,zero,82
  80088c:	008014bc 	xorhi	r2,zero,82
  800890:	008014bc 	xorhi	r2,zero,82
  800894:	008014bc 	xorhi	r2,zero,82
  800898:	008014bc 	xorhi	r2,zero,82
  80089c:	00800b78 	rdprs	r2,zero,45
  8008a0:	00800c40 	call	800c4 <__alt_mem_sdram-0x77ff3c>
  8008a4:	008014bc 	xorhi	r2,zero,82
  8008a8:	00800c40 	call	800c4 <__alt_mem_sdram-0x77ff3c>
  8008ac:	008014bc 	xorhi	r2,zero,82
  8008b0:	008014bc 	xorhi	r2,zero,82
  8008b4:	008014bc 	xorhi	r2,zero,82
  8008b8:	008014bc 	xorhi	r2,zero,82
  8008bc:	00800cec 	andhi	r2,zero,51
  8008c0:	008014bc 	xorhi	r2,zero,82
  8008c4:	008014bc 	xorhi	r2,zero,82
  8008c8:	00800cf8 	rdprs	r2,zero,51
  8008cc:	008014bc 	xorhi	r2,zero,82
  8008d0:	008014bc 	xorhi	r2,zero,82
  8008d4:	008014bc 	xorhi	r2,zero,82
  8008d8:	008014bc 	xorhi	r2,zero,82
  8008dc:	008014bc 	xorhi	r2,zero,82
  8008e0:	0080117c 	xorhi	r2,zero,69
  8008e4:	008014bc 	xorhi	r2,zero,82
  8008e8:	008014bc 	xorhi	r2,zero,82
  8008ec:	008011e8 	cmpgeui	r2,zero,71
  8008f0:	008014bc 	xorhi	r2,zero,82
  8008f4:	008014bc 	xorhi	r2,zero,82
  8008f8:	008014bc 	xorhi	r2,zero,82
  8008fc:	008014bc 	xorhi	r2,zero,82
  800900:	008014bc 	xorhi	r2,zero,82
  800904:	008014bc 	xorhi	r2,zero,82
  800908:	008014bc 	xorhi	r2,zero,82
  80090c:	008014bc 	xorhi	r2,zero,82
  800910:	008014bc 	xorhi	r2,zero,82
  800914:	008014bc 	xorhi	r2,zero,82
  800918:	00801460 	cmpeqi	r2,zero,81
  80091c:	008013e0 	cmpeqi	r2,zero,79
  800920:	00800c40 	call	800c4 <__alt_mem_sdram-0x77ff3c>
  800924:	00800c40 	call	800c4 <__alt_mem_sdram-0x77ff3c>
  800928:	00800c40 	call	800c4 <__alt_mem_sdram-0x77ff3c>
  80092c:	00801400 	call	80140 <__alt_mem_sdram-0x77fec0>
  800930:	008013e0 	cmpeqi	r2,zero,79
  800934:	008014bc 	xorhi	r2,zero,82
  800938:	008014bc 	xorhi	r2,zero,82
  80093c:	0080140c 	andi	r2,zero,80
  800940:	008014bc 	xorhi	r2,zero,82
  800944:	00801420 	cmpeqi	r2,zero,80
  800948:	008012a4 	muli	r2,zero,74
  80094c:	0080098c 	andi	r2,zero,38
  800950:	008012dc 	xori	r2,zero,75
  800954:	008014bc 	xorhi	r2,zero,82
  800958:	008012e8 	cmpgeui	r2,zero,75
  80095c:	008014bc 	xorhi	r2,zero,82
  800960:	0080134c 	andi	r2,zero,77
  800964:	008014bc 	xorhi	r2,zero,82
  800968:	008014bc 	xorhi	r2,zero,82
  80096c:	0080136c 	andhi	r2,zero,77
  800970:	d8c03117 	ldw	r3,196(sp)
  800974:	d8802e15 	stw	r2,184(sp)
  800978:	00c7c83a 	sub	r3,zero,r3
  80097c:	d8c03115 	stw	r3,196(sp)
  800980:	84000114 	ori	r16,r16,4
  800984:	ac400007 	ldb	r17,0(r21)
  800988:	003f9706 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  80098c:	00800c04 	movi	r2,48
  800990:	d8802705 	stb	r2,156(sp)
  800994:	00801e04 	movi	r2,120
  800998:	d8802745 	stb	r2,157(sp)
  80099c:	d9002a17 	ldw	r4,168(sp)
  8009a0:	d8802e17 	ldw	r2,184(sp)
  8009a4:	d8002785 	stb	zero,158(sp)
  8009a8:	e011883a 	mov	r8,fp
  8009ac:	10c00104 	addi	r3,r2,4
  8009b0:	14c00017 	ldw	r19,0(r2)
  8009b4:	002d883a 	mov	r22,zero
  8009b8:	80800094 	ori	r2,r16,2
  8009bc:	2002ca16 	blt	r4,zero,8014e8 <___vfprintf_internal_r+0xe88>
  8009c0:	00bfdfc4 	movi	r2,-129
  8009c4:	80a4703a 	and	r18,r16,r2
  8009c8:	d8c02e15 	stw	r3,184(sp)
  8009cc:	94800094 	ori	r18,r18,2
  8009d0:	9802b41e 	bne	r19,zero,8014a4 <___vfprintf_internal_r+0xe44>
  8009d4:	01402074 	movhi	r5,129
  8009d8:	2941cb04 	addi	r5,r5,1836
  8009dc:	d9403915 	stw	r5,228(sp)
  8009e0:	04401e04 	movi	r17,120
  8009e4:	d8802a17 	ldw	r2,168(sp)
  8009e8:	0039883a 	mov	fp,zero
  8009ec:	1001fa26 	beq	r2,zero,8011d8 <___vfprintf_internal_r+0xb78>
  8009f0:	0027883a 	mov	r19,zero
  8009f4:	002d883a 	mov	r22,zero
  8009f8:	00021906 	br	801260 <___vfprintf_internal_r+0xc00>
  8009fc:	d9002d17 	ldw	r4,180(sp)
  800a00:	b80b883a 	mov	r5,r23
  800a04:	0802a140 	call	802a14 <__swsetup_r>
  800a08:	1005dc1e 	bne	r2,zero,80217c <___vfprintf_internal_r+0x1b1c>
  800a0c:	b880030b 	ldhu	r2,12(r23)
  800a10:	00c00284 	movi	r3,10
  800a14:	1080068c 	andi	r2,r2,26
  800a18:	10ff3a1e 	bne	r2,r3,800704 <__alt_mem_onchip_memory2+0xff7e0704>
  800a1c:	b880038f 	ldh	r2,14(r23)
  800a20:	103f3816 	blt	r2,zero,800704 <__alt_mem_onchip_memory2+0xff7e0704>
  800a24:	d9c02e17 	ldw	r7,184(sp)
  800a28:	d9002d17 	ldw	r4,180(sp)
  800a2c:	a80d883a 	mov	r6,r21
  800a30:	b80b883a 	mov	r5,r23
  800a34:	08029580 	call	802958 <__sbprintf>
  800a38:	00001106 	br	800a80 <___vfprintf_internal_r+0x420>
  800a3c:	d9002d17 	ldw	r4,180(sp)
  800a40:	d9801e04 	addi	r6,sp,120
  800a44:	b80b883a 	mov	r5,r23
  800a48:	08080300 	call	808030 <__sprint_r>
  800a4c:	1000081e 	bne	r2,zero,800a70 <___vfprintf_internal_r+0x410>
  800a50:	da000404 	addi	r8,sp,16
  800a54:	003f5106 	br	80079c <__alt_mem_onchip_memory2+0xff7e079c>
  800a58:	d8802017 	ldw	r2,128(sp)
  800a5c:	10000426 	beq	r2,zero,800a70 <___vfprintf_internal_r+0x410>
  800a60:	d9002d17 	ldw	r4,180(sp)
  800a64:	d9801e04 	addi	r6,sp,120
  800a68:	b80b883a 	mov	r5,r23
  800a6c:	08080300 	call	808030 <__sprint_r>
  800a70:	b880030b 	ldhu	r2,12(r23)
  800a74:	1080100c 	andi	r2,r2,64
  800a78:	1005c01e 	bne	r2,zero,80217c <___vfprintf_internal_r+0x1b1c>
  800a7c:	d8802f17 	ldw	r2,188(sp)
  800a80:	dfc04717 	ldw	ra,284(sp)
  800a84:	df004617 	ldw	fp,280(sp)
  800a88:	ddc04517 	ldw	r23,276(sp)
  800a8c:	dd804417 	ldw	r22,272(sp)
  800a90:	dd404317 	ldw	r21,268(sp)
  800a94:	dd004217 	ldw	r20,264(sp)
  800a98:	dcc04117 	ldw	r19,260(sp)
  800a9c:	dc804017 	ldw	r18,256(sp)
  800aa0:	dc403f17 	ldw	r17,252(sp)
  800aa4:	dc003e17 	ldw	r16,248(sp)
  800aa8:	dec04804 	addi	sp,sp,288
  800aac:	f800283a 	ret
  800ab0:	d9002d17 	ldw	r4,180(sp)
  800ab4:	0804a200 	call	804a20 <__sinit>
  800ab8:	003f0206 	br	8006c4 <__alt_mem_onchip_memory2+0xff7e06c4>
  800abc:	d9002e17 	ldw	r4,184(sp)
  800ac0:	d9402e17 	ldw	r5,184(sp)
  800ac4:	21000017 	ldw	r4,0(r4)
  800ac8:	28800104 	addi	r2,r5,4
  800acc:	d9003115 	stw	r4,196(sp)
  800ad0:	203fa716 	blt	r4,zero,800970 <__alt_mem_onchip_memory2+0xff7e0970>
  800ad4:	d8802e15 	stw	r2,184(sp)
  800ad8:	ac400007 	ldb	r17,0(r21)
  800adc:	003f4206 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  800ae0:	ac400007 	ldb	r17,0(r21)
  800ae4:	01000a84 	movi	r4,42
  800ae8:	a8c00044 	addi	r3,r21,1
  800aec:	89075826 	beq	r17,r4,802850 <___vfprintf_internal_r+0x21f0>
  800af0:	8cbff404 	addi	r18,r17,-48
  800af4:	b486ae36 	bltu	r22,r18,8025b0 <___vfprintf_internal_r+0x1f50>
  800af8:	0009883a 	mov	r4,zero
  800afc:	1823883a 	mov	r17,r3
  800b00:	01400284 	movi	r5,10
  800b04:	080acec0 	call	80acec <__mulsi3>
  800b08:	88c00007 	ldb	r3,0(r17)
  800b0c:	1489883a 	add	r4,r2,r18
  800b10:	8d400044 	addi	r21,r17,1
  800b14:	1cbff404 	addi	r18,r3,-48
  800b18:	a823883a 	mov	r17,r21
  800b1c:	b4bff82e 	bgeu	r22,r18,800b00 <__alt_mem_onchip_memory2+0xff7e0b00>
  800b20:	1823883a 	mov	r17,r3
  800b24:	2005f616 	blt	r4,zero,802300 <___vfprintf_internal_r+0x1ca0>
  800b28:	d9002a15 	stw	r4,168(sp)
  800b2c:	003f2f06 	br	8007ec <__alt_mem_onchip_memory2+0xff7e07ec>
  800b30:	84002014 	ori	r16,r16,128
  800b34:	ac400007 	ldb	r17,0(r21)
  800b38:	003f2b06 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  800b3c:	8cbff404 	addi	r18,r17,-48
  800b40:	d8003115 	stw	zero,196(sp)
  800b44:	0009883a 	mov	r4,zero
  800b48:	a823883a 	mov	r17,r21
  800b4c:	01400284 	movi	r5,10
  800b50:	080acec0 	call	80acec <__mulsi3>
  800b54:	88c00007 	ldb	r3,0(r17)
  800b58:	9089883a 	add	r4,r18,r2
  800b5c:	ad400044 	addi	r21,r21,1
  800b60:	1cbff404 	addi	r18,r3,-48
  800b64:	a823883a 	mov	r17,r21
  800b68:	b4bff82e 	bgeu	r22,r18,800b4c <__alt_mem_onchip_memory2+0xff7e0b4c>
  800b6c:	1823883a 	mov	r17,r3
  800b70:	d9003115 	stw	r4,196(sp)
  800b74:	003f1d06 	br	8007ec <__alt_mem_onchip_memory2+0xff7e07ec>
  800b78:	8025883a 	mov	r18,r16
  800b7c:	dc002903 	ldbu	r16,164(sp)
  800b80:	e011883a 	mov	r8,fp
  800b84:	84003fcc 	andi	r16,r16,255
  800b88:	8007531e 	bne	r16,zero,8028d8 <___vfprintf_internal_r+0x2278>
  800b8c:	94800414 	ori	r18,r18,16
  800b90:	9080080c 	andi	r2,r18,32
  800b94:	1003a326 	beq	r2,zero,801a24 <___vfprintf_internal_r+0x13c4>
  800b98:	d9002e17 	ldw	r4,184(sp)
  800b9c:	20800117 	ldw	r2,4(r4)
  800ba0:	24c00017 	ldw	r19,0(r4)
  800ba4:	21000204 	addi	r4,r4,8
  800ba8:	d9002e15 	stw	r4,184(sp)
  800bac:	102d883a 	mov	r22,r2
  800bb0:	10047316 	blt	r2,zero,801d80 <___vfprintf_internal_r+0x1720>
  800bb4:	d9002a17 	ldw	r4,168(sp)
  800bb8:	df002783 	ldbu	fp,158(sp)
  800bbc:	2003e416 	blt	r4,zero,801b50 <___vfprintf_internal_r+0x14f0>
  800bc0:	00ffdfc4 	movi	r3,-129
  800bc4:	9d84b03a 	or	r2,r19,r22
  800bc8:	90e4703a 	and	r18,r18,r3
  800bcc:	10018026 	beq	r2,zero,8011d0 <___vfprintf_internal_r+0xb70>
  800bd0:	b003ab26 	beq	r22,zero,801a80 <___vfprintf_internal_r+0x1420>
  800bd4:	dc402915 	stw	r17,164(sp)
  800bd8:	dc001e04 	addi	r16,sp,120
  800bdc:	b023883a 	mov	r17,r22
  800be0:	402d883a 	mov	r22,r8
  800be4:	9809883a 	mov	r4,r19
  800be8:	880b883a 	mov	r5,r17
  800bec:	01800284 	movi	r6,10
  800bf0:	000f883a 	mov	r7,zero
  800bf4:	080a5740 	call	80a574 <__umoddi3>
  800bf8:	10800c04 	addi	r2,r2,48
  800bfc:	843fffc4 	addi	r16,r16,-1
  800c00:	9809883a 	mov	r4,r19
  800c04:	880b883a 	mov	r5,r17
  800c08:	80800005 	stb	r2,0(r16)
  800c0c:	01800284 	movi	r6,10
  800c10:	000f883a 	mov	r7,zero
  800c14:	0809f780 	call	809f78 <__udivdi3>
  800c18:	1027883a 	mov	r19,r2
  800c1c:	10c4b03a 	or	r2,r2,r3
  800c20:	1823883a 	mov	r17,r3
  800c24:	103fef1e 	bne	r2,zero,800be4 <__alt_mem_onchip_memory2+0xff7e0be4>
  800c28:	d8c02817 	ldw	r3,160(sp)
  800c2c:	dc402917 	ldw	r17,164(sp)
  800c30:	b011883a 	mov	r8,r22
  800c34:	1c07c83a 	sub	r3,r3,r16
  800c38:	d8c02b15 	stw	r3,172(sp)
  800c3c:	00005f06 	br	800dbc <___vfprintf_internal_r+0x75c>
  800c40:	8025883a 	mov	r18,r16
  800c44:	dc002903 	ldbu	r16,164(sp)
  800c48:	e011883a 	mov	r8,fp
  800c4c:	84003fcc 	andi	r16,r16,255
  800c50:	80071e1e 	bne	r16,zero,8028cc <___vfprintf_internal_r+0x226c>
  800c54:	9080020c 	andi	r2,r18,8
  800c58:	1004af26 	beq	r2,zero,801f18 <___vfprintf_internal_r+0x18b8>
  800c5c:	d9002e17 	ldw	r4,184(sp)
  800c60:	d9402e17 	ldw	r5,184(sp)
  800c64:	d8802e17 	ldw	r2,184(sp)
  800c68:	21000017 	ldw	r4,0(r4)
  800c6c:	29400117 	ldw	r5,4(r5)
  800c70:	10800204 	addi	r2,r2,8
  800c74:	d9003615 	stw	r4,216(sp)
  800c78:	d9403815 	stw	r5,224(sp)
  800c7c:	d8802e15 	stw	r2,184(sp)
  800c80:	d9003617 	ldw	r4,216(sp)
  800c84:	d9403817 	ldw	r5,224(sp)
  800c88:	da003d15 	stw	r8,244(sp)
  800c8c:	04000044 	movi	r16,1
  800c90:	0807c540 	call	807c54 <__fpclassifyd>
  800c94:	da003d17 	ldw	r8,244(sp)
  800c98:	1404441e 	bne	r2,r16,801dac <___vfprintf_internal_r+0x174c>
  800c9c:	d9003617 	ldw	r4,216(sp)
  800ca0:	d9403817 	ldw	r5,224(sp)
  800ca4:	000d883a 	mov	r6,zero
  800ca8:	000f883a 	mov	r7,zero
  800cac:	080c0f40 	call	80c0f4 <__ledf2>
  800cb0:	da003d17 	ldw	r8,244(sp)
  800cb4:	1005e316 	blt	r2,zero,802444 <___vfprintf_internal_r+0x1de4>
  800cb8:	df002783 	ldbu	fp,158(sp)
  800cbc:	008011c4 	movi	r2,71
  800cc0:	1445580e 	bge	r2,r17,802224 <___vfprintf_internal_r+0x1bc4>
  800cc4:	04002074 	movhi	r16,129
  800cc8:	8401c304 	addi	r16,r16,1804
  800ccc:	00c000c4 	movi	r3,3
  800cd0:	00bfdfc4 	movi	r2,-129
  800cd4:	d8c02915 	stw	r3,164(sp)
  800cd8:	90a4703a 	and	r18,r18,r2
  800cdc:	d8c02b15 	stw	r3,172(sp)
  800ce0:	d8002a15 	stw	zero,168(sp)
  800ce4:	d8003215 	stw	zero,200(sp)
  800ce8:	00003a06 	br	800dd4 <___vfprintf_internal_r+0x774>
  800cec:	84000214 	ori	r16,r16,8
  800cf0:	ac400007 	ldb	r17,0(r21)
  800cf4:	003ebc06 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  800cf8:	8025883a 	mov	r18,r16
  800cfc:	dc002903 	ldbu	r16,164(sp)
  800d00:	e011883a 	mov	r8,fp
  800d04:	84003fcc 	andi	r16,r16,255
  800d08:	8007001e 	bne	r16,zero,80290c <___vfprintf_internal_r+0x22ac>
  800d0c:	94800414 	ori	r18,r18,16
  800d10:	9080080c 	andi	r2,r18,32
  800d14:	1002fa26 	beq	r2,zero,801900 <___vfprintf_internal_r+0x12a0>
  800d18:	d9002e17 	ldw	r4,184(sp)
  800d1c:	d9402a17 	ldw	r5,168(sp)
  800d20:	d8002785 	stb	zero,158(sp)
  800d24:	20800204 	addi	r2,r4,8
  800d28:	24c00017 	ldw	r19,0(r4)
  800d2c:	25800117 	ldw	r22,4(r4)
  800d30:	2804b116 	blt	r5,zero,801ff8 <___vfprintf_internal_r+0x1998>
  800d34:	013fdfc4 	movi	r4,-129
  800d38:	9d86b03a 	or	r3,r19,r22
  800d3c:	d8802e15 	stw	r2,184(sp)
  800d40:	9124703a 	and	r18,r18,r4
  800d44:	1802fb1e 	bne	r3,zero,801934 <___vfprintf_internal_r+0x12d4>
  800d48:	d8c02a17 	ldw	r3,168(sp)
  800d4c:	0039883a 	mov	fp,zero
  800d50:	1805e526 	beq	r3,zero,8024e8 <___vfprintf_internal_r+0x1e88>
  800d54:	0027883a 	mov	r19,zero
  800d58:	002d883a 	mov	r22,zero
  800d5c:	dc001e04 	addi	r16,sp,120
  800d60:	9806d0fa 	srli	r3,r19,3
  800d64:	b008977a 	slli	r4,r22,29
  800d68:	b02cd0fa 	srli	r22,r22,3
  800d6c:	9cc001cc 	andi	r19,r19,7
  800d70:	98800c04 	addi	r2,r19,48
  800d74:	843fffc4 	addi	r16,r16,-1
  800d78:	20e6b03a 	or	r19,r4,r3
  800d7c:	80800005 	stb	r2,0(r16)
  800d80:	9d86b03a 	or	r3,r19,r22
  800d84:	183ff61e 	bne	r3,zero,800d60 <__alt_mem_onchip_memory2+0xff7e0d60>
  800d88:	90c0004c 	andi	r3,r18,1
  800d8c:	18014126 	beq	r3,zero,801294 <___vfprintf_internal_r+0xc34>
  800d90:	10803fcc 	andi	r2,r2,255
  800d94:	1080201c 	xori	r2,r2,128
  800d98:	10bfe004 	addi	r2,r2,-128
  800d9c:	00c00c04 	movi	r3,48
  800da0:	10c13c26 	beq	r2,r3,801294 <___vfprintf_internal_r+0xc34>
  800da4:	80ffffc5 	stb	r3,-1(r16)
  800da8:	d8c02817 	ldw	r3,160(sp)
  800dac:	80bfffc4 	addi	r2,r16,-1
  800db0:	1021883a 	mov	r16,r2
  800db4:	1887c83a 	sub	r3,r3,r2
  800db8:	d8c02b15 	stw	r3,172(sp)
  800dbc:	d8802b17 	ldw	r2,172(sp)
  800dc0:	d9002a17 	ldw	r4,168(sp)
  800dc4:	1100010e 	bge	r2,r4,800dcc <___vfprintf_internal_r+0x76c>
  800dc8:	2005883a 	mov	r2,r4
  800dcc:	d8802915 	stw	r2,164(sp)
  800dd0:	d8003215 	stw	zero,200(sp)
  800dd4:	e7003fcc 	andi	fp,fp,255
  800dd8:	e700201c 	xori	fp,fp,128
  800ddc:	e73fe004 	addi	fp,fp,-128
  800de0:	e0000326 	beq	fp,zero,800df0 <___vfprintf_internal_r+0x790>
  800de4:	d8c02917 	ldw	r3,164(sp)
  800de8:	18c00044 	addi	r3,r3,1
  800dec:	d8c02915 	stw	r3,164(sp)
  800df0:	90c0008c 	andi	r3,r18,2
  800df4:	d8c02c15 	stw	r3,176(sp)
  800df8:	18000326 	beq	r3,zero,800e08 <___vfprintf_internal_r+0x7a8>
  800dfc:	d8c02917 	ldw	r3,164(sp)
  800e00:	18c00084 	addi	r3,r3,2
  800e04:	d8c02915 	stw	r3,164(sp)
  800e08:	90c0210c 	andi	r3,r18,132
  800e0c:	d8c03015 	stw	r3,192(sp)
  800e10:	1801c51e 	bne	r3,zero,801528 <___vfprintf_internal_r+0xec8>
  800e14:	d9003117 	ldw	r4,196(sp)
  800e18:	d8c02917 	ldw	r3,164(sp)
  800e1c:	20e7c83a 	sub	r19,r4,r3
  800e20:	04c1c10e 	bge	zero,r19,801528 <___vfprintf_internal_r+0xec8>
  800e24:	02400404 	movi	r9,16
  800e28:	d8c02017 	ldw	r3,128(sp)
  800e2c:	d8801f17 	ldw	r2,124(sp)
  800e30:	4cc52f0e 	bge	r9,r19,8022f0 <___vfprintf_internal_r+0x1c90>
  800e34:	01402074 	movhi	r5,129
  800e38:	2941d684 	addi	r5,r5,1882
  800e3c:	dc403b15 	stw	r17,236(sp)
  800e40:	d9403515 	stw	r5,212(sp)
  800e44:	9823883a 	mov	r17,r19
  800e48:	482d883a 	mov	r22,r9
  800e4c:	9027883a 	mov	r19,r18
  800e50:	070001c4 	movi	fp,7
  800e54:	8025883a 	mov	r18,r16
  800e58:	dc002d17 	ldw	r16,180(sp)
  800e5c:	00000306 	br	800e6c <___vfprintf_internal_r+0x80c>
  800e60:	8c7ffc04 	addi	r17,r17,-16
  800e64:	42000204 	addi	r8,r8,8
  800e68:	b440130e 	bge	r22,r17,800eb8 <___vfprintf_internal_r+0x858>
  800e6c:	01002074 	movhi	r4,129
  800e70:	18c00404 	addi	r3,r3,16
  800e74:	10800044 	addi	r2,r2,1
  800e78:	2101d684 	addi	r4,r4,1882
  800e7c:	41000015 	stw	r4,0(r8)
  800e80:	45800115 	stw	r22,4(r8)
  800e84:	d8c02015 	stw	r3,128(sp)
  800e88:	d8801f15 	stw	r2,124(sp)
  800e8c:	e0bff40e 	bge	fp,r2,800e60 <__alt_mem_onchip_memory2+0xff7e0e60>
  800e90:	d9801e04 	addi	r6,sp,120
  800e94:	b80b883a 	mov	r5,r23
  800e98:	8009883a 	mov	r4,r16
  800e9c:	08080300 	call	808030 <__sprint_r>
  800ea0:	103ef31e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  800ea4:	8c7ffc04 	addi	r17,r17,-16
  800ea8:	d8c02017 	ldw	r3,128(sp)
  800eac:	d8801f17 	ldw	r2,124(sp)
  800eb0:	da000404 	addi	r8,sp,16
  800eb4:	b47fed16 	blt	r22,r17,800e6c <__alt_mem_onchip_memory2+0xff7e0e6c>
  800eb8:	9021883a 	mov	r16,r18
  800ebc:	9825883a 	mov	r18,r19
  800ec0:	8827883a 	mov	r19,r17
  800ec4:	dc403b17 	ldw	r17,236(sp)
  800ec8:	d9403517 	ldw	r5,212(sp)
  800ecc:	98c7883a 	add	r3,r19,r3
  800ed0:	10800044 	addi	r2,r2,1
  800ed4:	41400015 	stw	r5,0(r8)
  800ed8:	44c00115 	stw	r19,4(r8)
  800edc:	d8c02015 	stw	r3,128(sp)
  800ee0:	d8801f15 	stw	r2,124(sp)
  800ee4:	010001c4 	movi	r4,7
  800ee8:	2082c516 	blt	r4,r2,801a00 <___vfprintf_internal_r+0x13a0>
  800eec:	df002787 	ldb	fp,158(sp)
  800ef0:	42000204 	addi	r8,r8,8
  800ef4:	e0000c26 	beq	fp,zero,800f28 <___vfprintf_internal_r+0x8c8>
  800ef8:	d8801f17 	ldw	r2,124(sp)
  800efc:	d9002784 	addi	r4,sp,158
  800f00:	18c00044 	addi	r3,r3,1
  800f04:	10800044 	addi	r2,r2,1
  800f08:	41000015 	stw	r4,0(r8)
  800f0c:	01000044 	movi	r4,1
  800f10:	41000115 	stw	r4,4(r8)
  800f14:	d8c02015 	stw	r3,128(sp)
  800f18:	d8801f15 	stw	r2,124(sp)
  800f1c:	010001c4 	movi	r4,7
  800f20:	20825e16 	blt	r4,r2,80189c <___vfprintf_internal_r+0x123c>
  800f24:	42000204 	addi	r8,r8,8
  800f28:	d8802c17 	ldw	r2,176(sp)
  800f2c:	10000c26 	beq	r2,zero,800f60 <___vfprintf_internal_r+0x900>
  800f30:	d8801f17 	ldw	r2,124(sp)
  800f34:	d9002704 	addi	r4,sp,156
  800f38:	18c00084 	addi	r3,r3,2
  800f3c:	10800044 	addi	r2,r2,1
  800f40:	41000015 	stw	r4,0(r8)
  800f44:	01000084 	movi	r4,2
  800f48:	41000115 	stw	r4,4(r8)
  800f4c:	d8c02015 	stw	r3,128(sp)
  800f50:	d8801f15 	stw	r2,124(sp)
  800f54:	010001c4 	movi	r4,7
  800f58:	20825816 	blt	r4,r2,8018bc <___vfprintf_internal_r+0x125c>
  800f5c:	42000204 	addi	r8,r8,8
  800f60:	d9003017 	ldw	r4,192(sp)
  800f64:	00802004 	movi	r2,128
  800f68:	2081bb26 	beq	r4,r2,801658 <___vfprintf_internal_r+0xff8>
  800f6c:	d9402a17 	ldw	r5,168(sp)
  800f70:	d8802b17 	ldw	r2,172(sp)
  800f74:	28adc83a 	sub	r22,r5,r2
  800f78:	0580310e 	bge	zero,r22,801040 <___vfprintf_internal_r+0x9e0>
  800f7c:	07000404 	movi	fp,16
  800f80:	d8801f17 	ldw	r2,124(sp)
  800f84:	e584360e 	bge	fp,r22,802060 <___vfprintf_internal_r+0x1a00>
  800f88:	01402074 	movhi	r5,129
  800f8c:	2941d284 	addi	r5,r5,1866
  800f90:	dc402a15 	stw	r17,168(sp)
  800f94:	d9402c15 	stw	r5,176(sp)
  800f98:	b023883a 	mov	r17,r22
  800f9c:	04c001c4 	movi	r19,7
  800fa0:	a82d883a 	mov	r22,r21
  800fa4:	902b883a 	mov	r21,r18
  800fa8:	8025883a 	mov	r18,r16
  800fac:	dc002d17 	ldw	r16,180(sp)
  800fb0:	00000306 	br	800fc0 <___vfprintf_internal_r+0x960>
  800fb4:	8c7ffc04 	addi	r17,r17,-16
  800fb8:	42000204 	addi	r8,r8,8
  800fbc:	e440110e 	bge	fp,r17,801004 <___vfprintf_internal_r+0x9a4>
  800fc0:	18c00404 	addi	r3,r3,16
  800fc4:	10800044 	addi	r2,r2,1
  800fc8:	45000015 	stw	r20,0(r8)
  800fcc:	47000115 	stw	fp,4(r8)
  800fd0:	d8c02015 	stw	r3,128(sp)
  800fd4:	d8801f15 	stw	r2,124(sp)
  800fd8:	98bff60e 	bge	r19,r2,800fb4 <__alt_mem_onchip_memory2+0xff7e0fb4>
  800fdc:	d9801e04 	addi	r6,sp,120
  800fe0:	b80b883a 	mov	r5,r23
  800fe4:	8009883a 	mov	r4,r16
  800fe8:	08080300 	call	808030 <__sprint_r>
  800fec:	103ea01e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  800ff0:	8c7ffc04 	addi	r17,r17,-16
  800ff4:	d8c02017 	ldw	r3,128(sp)
  800ff8:	d8801f17 	ldw	r2,124(sp)
  800ffc:	da000404 	addi	r8,sp,16
  801000:	e47fef16 	blt	fp,r17,800fc0 <__alt_mem_onchip_memory2+0xff7e0fc0>
  801004:	9021883a 	mov	r16,r18
  801008:	a825883a 	mov	r18,r21
  80100c:	b02b883a 	mov	r21,r22
  801010:	882d883a 	mov	r22,r17
  801014:	dc402a17 	ldw	r17,168(sp)
  801018:	d9002c17 	ldw	r4,176(sp)
  80101c:	1d87883a 	add	r3,r3,r22
  801020:	10800044 	addi	r2,r2,1
  801024:	41000015 	stw	r4,0(r8)
  801028:	45800115 	stw	r22,4(r8)
  80102c:	d8c02015 	stw	r3,128(sp)
  801030:	d8801f15 	stw	r2,124(sp)
  801034:	010001c4 	movi	r4,7
  801038:	20821016 	blt	r4,r2,80187c <___vfprintf_internal_r+0x121c>
  80103c:	42000204 	addi	r8,r8,8
  801040:	9080400c 	andi	r2,r18,256
  801044:	10013a1e 	bne	r2,zero,801530 <___vfprintf_internal_r+0xed0>
  801048:	d9402b17 	ldw	r5,172(sp)
  80104c:	d8801f17 	ldw	r2,124(sp)
  801050:	44000015 	stw	r16,0(r8)
  801054:	1947883a 	add	r3,r3,r5
  801058:	10800044 	addi	r2,r2,1
  80105c:	41400115 	stw	r5,4(r8)
  801060:	d8c02015 	stw	r3,128(sp)
  801064:	d8801f15 	stw	r2,124(sp)
  801068:	010001c4 	movi	r4,7
  80106c:	2081f516 	blt	r4,r2,801844 <___vfprintf_internal_r+0x11e4>
  801070:	42000204 	addi	r8,r8,8
  801074:	9480010c 	andi	r18,r18,4
  801078:	90003226 	beq	r18,zero,801144 <___vfprintf_internal_r+0xae4>
  80107c:	d9403117 	ldw	r5,196(sp)
  801080:	d8802917 	ldw	r2,164(sp)
  801084:	28a1c83a 	sub	r16,r5,r2
  801088:	04002e0e 	bge	zero,r16,801144 <___vfprintf_internal_r+0xae4>
  80108c:	04400404 	movi	r17,16
  801090:	d8801f17 	ldw	r2,124(sp)
  801094:	8c04c40e 	bge	r17,r16,8023a8 <___vfprintf_internal_r+0x1d48>
  801098:	01402074 	movhi	r5,129
  80109c:	2941d684 	addi	r5,r5,1882
  8010a0:	d9403515 	stw	r5,212(sp)
  8010a4:	048001c4 	movi	r18,7
  8010a8:	dcc02d17 	ldw	r19,180(sp)
  8010ac:	00000306 	br	8010bc <___vfprintf_internal_r+0xa5c>
  8010b0:	843ffc04 	addi	r16,r16,-16
  8010b4:	42000204 	addi	r8,r8,8
  8010b8:	8c00130e 	bge	r17,r16,801108 <___vfprintf_internal_r+0xaa8>
  8010bc:	01002074 	movhi	r4,129
  8010c0:	18c00404 	addi	r3,r3,16
  8010c4:	10800044 	addi	r2,r2,1
  8010c8:	2101d684 	addi	r4,r4,1882
  8010cc:	41000015 	stw	r4,0(r8)
  8010d0:	44400115 	stw	r17,4(r8)
  8010d4:	d8c02015 	stw	r3,128(sp)
  8010d8:	d8801f15 	stw	r2,124(sp)
  8010dc:	90bff40e 	bge	r18,r2,8010b0 <__alt_mem_onchip_memory2+0xff7e10b0>
  8010e0:	d9801e04 	addi	r6,sp,120
  8010e4:	b80b883a 	mov	r5,r23
  8010e8:	9809883a 	mov	r4,r19
  8010ec:	08080300 	call	808030 <__sprint_r>
  8010f0:	103e5f1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  8010f4:	843ffc04 	addi	r16,r16,-16
  8010f8:	d8c02017 	ldw	r3,128(sp)
  8010fc:	d8801f17 	ldw	r2,124(sp)
  801100:	da000404 	addi	r8,sp,16
  801104:	8c3fed16 	blt	r17,r16,8010bc <__alt_mem_onchip_memory2+0xff7e10bc>
  801108:	d9403517 	ldw	r5,212(sp)
  80110c:	1c07883a 	add	r3,r3,r16
  801110:	10800044 	addi	r2,r2,1
  801114:	41400015 	stw	r5,0(r8)
  801118:	44000115 	stw	r16,4(r8)
  80111c:	d8c02015 	stw	r3,128(sp)
  801120:	d8801f15 	stw	r2,124(sp)
  801124:	010001c4 	movi	r4,7
  801128:	2080060e 	bge	r4,r2,801144 <___vfprintf_internal_r+0xae4>
  80112c:	d9002d17 	ldw	r4,180(sp)
  801130:	d9801e04 	addi	r6,sp,120
  801134:	b80b883a 	mov	r5,r23
  801138:	08080300 	call	808030 <__sprint_r>
  80113c:	103e4c1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801140:	d8c02017 	ldw	r3,128(sp)
  801144:	d8803117 	ldw	r2,196(sp)
  801148:	d9002917 	ldw	r4,164(sp)
  80114c:	1100010e 	bge	r2,r4,801154 <___vfprintf_internal_r+0xaf4>
  801150:	2005883a 	mov	r2,r4
  801154:	d9402f17 	ldw	r5,188(sp)
  801158:	288b883a 	add	r5,r5,r2
  80115c:	d9402f15 	stw	r5,188(sp)
  801160:	1801c01e 	bne	r3,zero,801864 <___vfprintf_internal_r+0x1204>
  801164:	a8800007 	ldb	r2,0(r21)
  801168:	d8001f15 	stw	zero,124(sp)
  80116c:	da000404 	addi	r8,sp,16
  801170:	103d751e 	bne	r2,zero,800748 <__alt_mem_onchip_memory2+0xff7e0748>
  801174:	a823883a 	mov	r17,r21
  801178:	003d8b06 	br	8007a8 <__alt_mem_onchip_memory2+0xff7e07a8>
  80117c:	8025883a 	mov	r18,r16
  801180:	dc002903 	ldbu	r16,164(sp)
  801184:	e011883a 	mov	r8,fp
  801188:	84003fcc 	andi	r16,r16,255
  80118c:	8005e51e 	bne	r16,zero,802924 <___vfprintf_internal_r+0x22c4>
  801190:	94800414 	ori	r18,r18,16
  801194:	9080080c 	andi	r2,r18,32
  801198:	10022b26 	beq	r2,zero,801a48 <___vfprintf_internal_r+0x13e8>
  80119c:	d9002e17 	ldw	r4,184(sp)
  8011a0:	d9402a17 	ldw	r5,168(sp)
  8011a4:	d8002785 	stb	zero,158(sp)
  8011a8:	20c00204 	addi	r3,r4,8
  8011ac:	24c00017 	ldw	r19,0(r4)
  8011b0:	25800117 	ldw	r22,4(r4)
  8011b4:	28042e16 	blt	r5,zero,802270 <___vfprintf_internal_r+0x1c10>
  8011b8:	013fdfc4 	movi	r4,-129
  8011bc:	9d84b03a 	or	r2,r19,r22
  8011c0:	d8c02e15 	stw	r3,184(sp)
  8011c4:	9124703a 	and	r18,r18,r4
  8011c8:	0039883a 	mov	fp,zero
  8011cc:	103e801e 	bne	r2,zero,800bd0 <__alt_mem_onchip_memory2+0xff7e0bd0>
  8011d0:	d9002a17 	ldw	r4,168(sp)
  8011d4:	2002e01e 	bne	r4,zero,801d58 <___vfprintf_internal_r+0x16f8>
  8011d8:	d8002a15 	stw	zero,168(sp)
  8011dc:	d8002b15 	stw	zero,172(sp)
  8011e0:	dc001e04 	addi	r16,sp,120
  8011e4:	003ef506 	br	800dbc <__alt_mem_onchip_memory2+0xff7e0dbc>
  8011e8:	8025883a 	mov	r18,r16
  8011ec:	dc002903 	ldbu	r16,164(sp)
  8011f0:	e011883a 	mov	r8,fp
  8011f4:	84003fcc 	andi	r16,r16,255
  8011f8:	8005ba1e 	bne	r16,zero,8028e4 <___vfprintf_internal_r+0x2284>
  8011fc:	01002074 	movhi	r4,129
  801200:	2101c604 	addi	r4,r4,1816
  801204:	d9003915 	stw	r4,228(sp)
  801208:	9080080c 	andi	r2,r18,32
  80120c:	10006126 	beq	r2,zero,801394 <___vfprintf_internal_r+0xd34>
  801210:	d9402e17 	ldw	r5,184(sp)
  801214:	2cc00017 	ldw	r19,0(r5)
  801218:	2d800117 	ldw	r22,4(r5)
  80121c:	29400204 	addi	r5,r5,8
  801220:	d9402e15 	stw	r5,184(sp)
  801224:	9080004c 	andi	r2,r18,1
  801228:	1001ac26 	beq	r2,zero,8018dc <___vfprintf_internal_r+0x127c>
  80122c:	9d84b03a 	or	r2,r19,r22
  801230:	10038526 	beq	r2,zero,802048 <___vfprintf_internal_r+0x19e8>
  801234:	d8c02a17 	ldw	r3,168(sp)
  801238:	00800c04 	movi	r2,48
  80123c:	d8802705 	stb	r2,156(sp)
  801240:	dc402745 	stb	r17,157(sp)
  801244:	d8002785 	stb	zero,158(sp)
  801248:	90800094 	ori	r2,r18,2
  80124c:	18047916 	blt	r3,zero,802434 <___vfprintf_internal_r+0x1dd4>
  801250:	00bfdfc4 	movi	r2,-129
  801254:	90a4703a 	and	r18,r18,r2
  801258:	94800094 	ori	r18,r18,2
  80125c:	0039883a 	mov	fp,zero
  801260:	d9003917 	ldw	r4,228(sp)
  801264:	dc001e04 	addi	r16,sp,120
  801268:	988003cc 	andi	r2,r19,15
  80126c:	b006973a 	slli	r3,r22,28
  801270:	2085883a 	add	r2,r4,r2
  801274:	9826d13a 	srli	r19,r19,4
  801278:	10800003 	ldbu	r2,0(r2)
  80127c:	b02cd13a 	srli	r22,r22,4
  801280:	843fffc4 	addi	r16,r16,-1
  801284:	1ce6b03a 	or	r19,r3,r19
  801288:	80800005 	stb	r2,0(r16)
  80128c:	9d84b03a 	or	r2,r19,r22
  801290:	103ff51e 	bne	r2,zero,801268 <__alt_mem_onchip_memory2+0xff7e1268>
  801294:	d8c02817 	ldw	r3,160(sp)
  801298:	1c07c83a 	sub	r3,r3,r16
  80129c:	d8c02b15 	stw	r3,172(sp)
  8012a0:	003ec606 	br	800dbc <__alt_mem_onchip_memory2+0xff7e0dbc>
  8012a4:	8025883a 	mov	r18,r16
  8012a8:	dc002903 	ldbu	r16,164(sp)
  8012ac:	e011883a 	mov	r8,fp
  8012b0:	84003fcc 	andi	r16,r16,255
  8012b4:	803e9626 	beq	r16,zero,800d10 <__alt_mem_onchip_memory2+0xff7e0d10>
  8012b8:	d8c02b03 	ldbu	r3,172(sp)
  8012bc:	d8c02785 	stb	r3,158(sp)
  8012c0:	003e9306 	br	800d10 <__alt_mem_onchip_memory2+0xff7e0d10>
  8012c4:	00c00044 	movi	r3,1
  8012c8:	d8c02905 	stb	r3,164(sp)
  8012cc:	00c00ac4 	movi	r3,43
  8012d0:	d8c02b05 	stb	r3,172(sp)
  8012d4:	ac400007 	ldb	r17,0(r21)
  8012d8:	003d4306 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  8012dc:	84000814 	ori	r16,r16,32
  8012e0:	ac400007 	ldb	r17,0(r21)
  8012e4:	003d4006 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  8012e8:	d8802e17 	ldw	r2,184(sp)
  8012ec:	8025883a 	mov	r18,r16
  8012f0:	d8002785 	stb	zero,158(sp)
  8012f4:	14000017 	ldw	r16,0(r2)
  8012f8:	e011883a 	mov	r8,fp
  8012fc:	14c00104 	addi	r19,r2,4
  801300:	80042d26 	beq	r16,zero,8023b8 <___vfprintf_internal_r+0x1d58>
  801304:	d8c02a17 	ldw	r3,168(sp)
  801308:	1803e416 	blt	r3,zero,80229c <___vfprintf_internal_r+0x1c3c>
  80130c:	180d883a 	mov	r6,r3
  801310:	000b883a 	mov	r5,zero
  801314:	8009883a 	mov	r4,r16
  801318:	df003d15 	stw	fp,244(sp)
  80131c:	0805f980 	call	805f98 <memchr>
  801320:	da003d17 	ldw	r8,244(sp)
  801324:	10046826 	beq	r2,zero,8024c8 <___vfprintf_internal_r+0x1e68>
  801328:	1405c83a 	sub	r2,r2,r16
  80132c:	d8802b15 	stw	r2,172(sp)
  801330:	1003e016 	blt	r2,zero,8022b4 <___vfprintf_internal_r+0x1c54>
  801334:	df002783 	ldbu	fp,158(sp)
  801338:	d8802915 	stw	r2,164(sp)
  80133c:	dcc02e15 	stw	r19,184(sp)
  801340:	d8002a15 	stw	zero,168(sp)
  801344:	d8003215 	stw	zero,200(sp)
  801348:	003ea206 	br	800dd4 <__alt_mem_onchip_memory2+0xff7e0dd4>
  80134c:	8025883a 	mov	r18,r16
  801350:	dc002903 	ldbu	r16,164(sp)
  801354:	e011883a 	mov	r8,fp
  801358:	84003fcc 	andi	r16,r16,255
  80135c:	803f8d26 	beq	r16,zero,801194 <__alt_mem_onchip_memory2+0xff7e1194>
  801360:	d8c02b03 	ldbu	r3,172(sp)
  801364:	d8c02785 	stb	r3,158(sp)
  801368:	003f8a06 	br	801194 <__alt_mem_onchip_memory2+0xff7e1194>
  80136c:	8025883a 	mov	r18,r16
  801370:	dc002903 	ldbu	r16,164(sp)
  801374:	e011883a 	mov	r8,fp
  801378:	84003fcc 	andi	r16,r16,255
  80137c:	8005661e 	bne	r16,zero,802918 <___vfprintf_internal_r+0x22b8>
  801380:	01002074 	movhi	r4,129
  801384:	2101cb04 	addi	r4,r4,1836
  801388:	d9003915 	stw	r4,228(sp)
  80138c:	9080080c 	andi	r2,r18,32
  801390:	103f9f1e 	bne	r2,zero,801210 <__alt_mem_onchip_memory2+0xff7e1210>
  801394:	9080040c 	andi	r2,r18,16
  801398:	1002eb26 	beq	r2,zero,801f48 <___vfprintf_internal_r+0x18e8>
  80139c:	d8802e17 	ldw	r2,184(sp)
  8013a0:	002d883a 	mov	r22,zero
  8013a4:	14c00017 	ldw	r19,0(r2)
  8013a8:	10800104 	addi	r2,r2,4
  8013ac:	d8802e15 	stw	r2,184(sp)
  8013b0:	003f9c06 	br	801224 <__alt_mem_onchip_memory2+0xff7e1224>
  8013b4:	d8802b07 	ldb	r2,172(sp)
  8013b8:	1002e11e 	bne	r2,zero,801f40 <___vfprintf_internal_r+0x18e0>
  8013bc:	00c00044 	movi	r3,1
  8013c0:	d8c02905 	stb	r3,164(sp)
  8013c4:	00c00804 	movi	r3,32
  8013c8:	d8c02b05 	stb	r3,172(sp)
  8013cc:	ac400007 	ldb	r17,0(r21)
  8013d0:	003d0506 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  8013d4:	84000054 	ori	r16,r16,1
  8013d8:	ac400007 	ldb	r17,0(r21)
  8013dc:	003d0206 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  8013e0:	8025883a 	mov	r18,r16
  8013e4:	dc002903 	ldbu	r16,164(sp)
  8013e8:	e011883a 	mov	r8,fp
  8013ec:	84003fcc 	andi	r16,r16,255
  8013f0:	803de726 	beq	r16,zero,800b90 <__alt_mem_onchip_memory2+0xff7e0b90>
  8013f4:	d8c02b03 	ldbu	r3,172(sp)
  8013f8:	d8c02785 	stb	r3,158(sp)
  8013fc:	003de406 	br	800b90 <__alt_mem_onchip_memory2+0xff7e0b90>
  801400:	84001014 	ori	r16,r16,64
  801404:	ac400007 	ldb	r17,0(r21)
  801408:	003cf706 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  80140c:	ac400007 	ldb	r17,0(r21)
  801410:	00801b04 	movi	r2,108
  801414:	88838f26 	beq	r17,r2,802254 <___vfprintf_internal_r+0x1bf4>
  801418:	84000414 	ori	r16,r16,16
  80141c:	003cf206 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  801420:	8025883a 	mov	r18,r16
  801424:	dc002903 	ldbu	r16,164(sp)
  801428:	e011883a 	mov	r8,fp
  80142c:	84003fcc 	andi	r16,r16,255
  801430:	80053f1e 	bne	r16,zero,802930 <___vfprintf_internal_r+0x22d0>
  801434:	9080080c 	andi	r2,r18,32
  801438:	1002d226 	beq	r2,zero,801f84 <___vfprintf_internal_r+0x1924>
  80143c:	d9002e17 	ldw	r4,184(sp)
  801440:	d9402f17 	ldw	r5,188(sp)
  801444:	20800017 	ldw	r2,0(r4)
  801448:	2807d7fa 	srai	r3,r5,31
  80144c:	21000104 	addi	r4,r4,4
  801450:	d9002e15 	stw	r4,184(sp)
  801454:	11400015 	stw	r5,0(r2)
  801458:	10c00115 	stw	r3,4(r2)
  80145c:	003cb806 	br	800740 <__alt_mem_onchip_memory2+0xff7e0740>
  801460:	d8c02e17 	ldw	r3,184(sp)
  801464:	d9002e17 	ldw	r4,184(sp)
  801468:	8025883a 	mov	r18,r16
  80146c:	18800017 	ldw	r2,0(r3)
  801470:	21000104 	addi	r4,r4,4
  801474:	00c00044 	movi	r3,1
  801478:	e011883a 	mov	r8,fp
  80147c:	d8c02915 	stw	r3,164(sp)
  801480:	d8002785 	stb	zero,158(sp)
  801484:	d8801405 	stb	r2,80(sp)
  801488:	d9002e15 	stw	r4,184(sp)
  80148c:	d8c02b15 	stw	r3,172(sp)
  801490:	d8002a15 	stw	zero,168(sp)
  801494:	d8003215 	stw	zero,200(sp)
  801498:	dc001404 	addi	r16,sp,80
  80149c:	0039883a 	mov	fp,zero
  8014a0:	003e5306 	br	800df0 <__alt_mem_onchip_memory2+0xff7e0df0>
  8014a4:	01002074 	movhi	r4,129
  8014a8:	2101cb04 	addi	r4,r4,1836
  8014ac:	0039883a 	mov	fp,zero
  8014b0:	d9003915 	stw	r4,228(sp)
  8014b4:	04401e04 	movi	r17,120
  8014b8:	003f6906 	br	801260 <__alt_mem_onchip_memory2+0xff7e1260>
  8014bc:	8025883a 	mov	r18,r16
  8014c0:	dc002903 	ldbu	r16,164(sp)
  8014c4:	e011883a 	mov	r8,fp
  8014c8:	84003fcc 	andi	r16,r16,255
  8014cc:	8005081e 	bne	r16,zero,8028f0 <___vfprintf_internal_r+0x2290>
  8014d0:	883d6126 	beq	r17,zero,800a58 <__alt_mem_onchip_memory2+0xff7e0a58>
  8014d4:	00c00044 	movi	r3,1
  8014d8:	d8c02915 	stw	r3,164(sp)
  8014dc:	dc401405 	stb	r17,80(sp)
  8014e0:	d8002785 	stb	zero,158(sp)
  8014e4:	003fe906 	br	80148c <__alt_mem_onchip_memory2+0xff7e148c>
  8014e8:	01402074 	movhi	r5,129
  8014ec:	2941cb04 	addi	r5,r5,1836
  8014f0:	d9403915 	stw	r5,228(sp)
  8014f4:	d8c02e15 	stw	r3,184(sp)
  8014f8:	1025883a 	mov	r18,r2
  8014fc:	04401e04 	movi	r17,120
  801500:	9d84b03a 	or	r2,r19,r22
  801504:	1000fc1e 	bne	r2,zero,8018f8 <___vfprintf_internal_r+0x1298>
  801508:	0039883a 	mov	fp,zero
  80150c:	00800084 	movi	r2,2
  801510:	10803fcc 	andi	r2,r2,255
  801514:	00c00044 	movi	r3,1
  801518:	10c20f26 	beq	r2,r3,801d58 <___vfprintf_internal_r+0x16f8>
  80151c:	00c00084 	movi	r3,2
  801520:	10fd3326 	beq	r2,r3,8009f0 <__alt_mem_onchip_memory2+0xff7e09f0>
  801524:	003e0b06 	br	800d54 <__alt_mem_onchip_memory2+0xff7e0d54>
  801528:	d8c02017 	ldw	r3,128(sp)
  80152c:	003e7106 	br	800ef4 <__alt_mem_onchip_memory2+0xff7e0ef4>
  801530:	00801944 	movi	r2,101
  801534:	14407e0e 	bge	r2,r17,801730 <___vfprintf_internal_r+0x10d0>
  801538:	d9003617 	ldw	r4,216(sp)
  80153c:	d9403817 	ldw	r5,224(sp)
  801540:	000d883a 	mov	r6,zero
  801544:	000f883a 	mov	r7,zero
  801548:	d8c03c15 	stw	r3,240(sp)
  80154c:	da003d15 	stw	r8,244(sp)
  801550:	080bf900 	call	80bf90 <__eqdf2>
  801554:	d8c03c17 	ldw	r3,240(sp)
  801558:	da003d17 	ldw	r8,244(sp)
  80155c:	1000f71e 	bne	r2,zero,80193c <___vfprintf_internal_r+0x12dc>
  801560:	d8801f17 	ldw	r2,124(sp)
  801564:	01002074 	movhi	r4,129
  801568:	2101d204 	addi	r4,r4,1864
  80156c:	18c00044 	addi	r3,r3,1
  801570:	10800044 	addi	r2,r2,1
  801574:	41000015 	stw	r4,0(r8)
  801578:	01000044 	movi	r4,1
  80157c:	41000115 	stw	r4,4(r8)
  801580:	d8c02015 	stw	r3,128(sp)
  801584:	d8801f15 	stw	r2,124(sp)
  801588:	010001c4 	movi	r4,7
  80158c:	2082b816 	blt	r4,r2,802070 <___vfprintf_internal_r+0x1a10>
  801590:	42000204 	addi	r8,r8,8
  801594:	d8802617 	ldw	r2,152(sp)
  801598:	d9403317 	ldw	r5,204(sp)
  80159c:	11400216 	blt	r2,r5,8015a8 <___vfprintf_internal_r+0xf48>
  8015a0:	9080004c 	andi	r2,r18,1
  8015a4:	103eb326 	beq	r2,zero,801074 <__alt_mem_onchip_memory2+0xff7e1074>
  8015a8:	d8803717 	ldw	r2,220(sp)
  8015ac:	d9003417 	ldw	r4,208(sp)
  8015b0:	d9403717 	ldw	r5,220(sp)
  8015b4:	1887883a 	add	r3,r3,r2
  8015b8:	d8801f17 	ldw	r2,124(sp)
  8015bc:	41000015 	stw	r4,0(r8)
  8015c0:	41400115 	stw	r5,4(r8)
  8015c4:	10800044 	addi	r2,r2,1
  8015c8:	d8c02015 	stw	r3,128(sp)
  8015cc:	d8801f15 	stw	r2,124(sp)
  8015d0:	010001c4 	movi	r4,7
  8015d4:	20832916 	blt	r4,r2,80227c <___vfprintf_internal_r+0x1c1c>
  8015d8:	42000204 	addi	r8,r8,8
  8015dc:	d8803317 	ldw	r2,204(sp)
  8015e0:	143fffc4 	addi	r16,r2,-1
  8015e4:	043ea30e 	bge	zero,r16,801074 <__alt_mem_onchip_memory2+0xff7e1074>
  8015e8:	04400404 	movi	r17,16
  8015ec:	d8801f17 	ldw	r2,124(sp)
  8015f0:	8c00880e 	bge	r17,r16,801814 <___vfprintf_internal_r+0x11b4>
  8015f4:	01402074 	movhi	r5,129
  8015f8:	2941d284 	addi	r5,r5,1866
  8015fc:	d9402c15 	stw	r5,176(sp)
  801600:	058001c4 	movi	r22,7
  801604:	dcc02d17 	ldw	r19,180(sp)
  801608:	00000306 	br	801618 <___vfprintf_internal_r+0xfb8>
  80160c:	42000204 	addi	r8,r8,8
  801610:	843ffc04 	addi	r16,r16,-16
  801614:	8c00820e 	bge	r17,r16,801820 <___vfprintf_internal_r+0x11c0>
  801618:	18c00404 	addi	r3,r3,16
  80161c:	10800044 	addi	r2,r2,1
  801620:	45000015 	stw	r20,0(r8)
  801624:	44400115 	stw	r17,4(r8)
  801628:	d8c02015 	stw	r3,128(sp)
  80162c:	d8801f15 	stw	r2,124(sp)
  801630:	b0bff60e 	bge	r22,r2,80160c <__alt_mem_onchip_memory2+0xff7e160c>
  801634:	d9801e04 	addi	r6,sp,120
  801638:	b80b883a 	mov	r5,r23
  80163c:	9809883a 	mov	r4,r19
  801640:	08080300 	call	808030 <__sprint_r>
  801644:	103d0a1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801648:	d8c02017 	ldw	r3,128(sp)
  80164c:	d8801f17 	ldw	r2,124(sp)
  801650:	da000404 	addi	r8,sp,16
  801654:	003fee06 	br	801610 <__alt_mem_onchip_memory2+0xff7e1610>
  801658:	d9403117 	ldw	r5,196(sp)
  80165c:	d8802917 	ldw	r2,164(sp)
  801660:	28adc83a 	sub	r22,r5,r2
  801664:	05be410e 	bge	zero,r22,800f6c <__alt_mem_onchip_memory2+0xff7e0f6c>
  801668:	07000404 	movi	fp,16
  80166c:	d8801f17 	ldw	r2,124(sp)
  801670:	e5838f0e 	bge	fp,r22,8024b0 <___vfprintf_internal_r+0x1e50>
  801674:	01402074 	movhi	r5,129
  801678:	2941d284 	addi	r5,r5,1866
  80167c:	dc403015 	stw	r17,192(sp)
  801680:	d9402c15 	stw	r5,176(sp)
  801684:	b023883a 	mov	r17,r22
  801688:	04c001c4 	movi	r19,7
  80168c:	a82d883a 	mov	r22,r21
  801690:	902b883a 	mov	r21,r18
  801694:	8025883a 	mov	r18,r16
  801698:	dc002d17 	ldw	r16,180(sp)
  80169c:	00000306 	br	8016ac <___vfprintf_internal_r+0x104c>
  8016a0:	8c7ffc04 	addi	r17,r17,-16
  8016a4:	42000204 	addi	r8,r8,8
  8016a8:	e440110e 	bge	fp,r17,8016f0 <___vfprintf_internal_r+0x1090>
  8016ac:	18c00404 	addi	r3,r3,16
  8016b0:	10800044 	addi	r2,r2,1
  8016b4:	45000015 	stw	r20,0(r8)
  8016b8:	47000115 	stw	fp,4(r8)
  8016bc:	d8c02015 	stw	r3,128(sp)
  8016c0:	d8801f15 	stw	r2,124(sp)
  8016c4:	98bff60e 	bge	r19,r2,8016a0 <__alt_mem_onchip_memory2+0xff7e16a0>
  8016c8:	d9801e04 	addi	r6,sp,120
  8016cc:	b80b883a 	mov	r5,r23
  8016d0:	8009883a 	mov	r4,r16
  8016d4:	08080300 	call	808030 <__sprint_r>
  8016d8:	103ce51e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  8016dc:	8c7ffc04 	addi	r17,r17,-16
  8016e0:	d8c02017 	ldw	r3,128(sp)
  8016e4:	d8801f17 	ldw	r2,124(sp)
  8016e8:	da000404 	addi	r8,sp,16
  8016ec:	e47fef16 	blt	fp,r17,8016ac <__alt_mem_onchip_memory2+0xff7e16ac>
  8016f0:	9021883a 	mov	r16,r18
  8016f4:	a825883a 	mov	r18,r21
  8016f8:	b02b883a 	mov	r21,r22
  8016fc:	882d883a 	mov	r22,r17
  801700:	dc403017 	ldw	r17,192(sp)
  801704:	d9002c17 	ldw	r4,176(sp)
  801708:	1d87883a 	add	r3,r3,r22
  80170c:	10800044 	addi	r2,r2,1
  801710:	41000015 	stw	r4,0(r8)
  801714:	45800115 	stw	r22,4(r8)
  801718:	d8c02015 	stw	r3,128(sp)
  80171c:	d8801f15 	stw	r2,124(sp)
  801720:	010001c4 	movi	r4,7
  801724:	20818e16 	blt	r4,r2,801d60 <___vfprintf_internal_r+0x1700>
  801728:	42000204 	addi	r8,r8,8
  80172c:	003e0f06 	br	800f6c <__alt_mem_onchip_memory2+0xff7e0f6c>
  801730:	d9403317 	ldw	r5,204(sp)
  801734:	00800044 	movi	r2,1
  801738:	18c00044 	addi	r3,r3,1
  80173c:	1141530e 	bge	r2,r5,801c8c <___vfprintf_internal_r+0x162c>
  801740:	dc401f17 	ldw	r17,124(sp)
  801744:	00800044 	movi	r2,1
  801748:	40800115 	stw	r2,4(r8)
  80174c:	8c400044 	addi	r17,r17,1
  801750:	44000015 	stw	r16,0(r8)
  801754:	d8c02015 	stw	r3,128(sp)
  801758:	dc401f15 	stw	r17,124(sp)
  80175c:	008001c4 	movi	r2,7
  801760:	14416b16 	blt	r2,r17,801d10 <___vfprintf_internal_r+0x16b0>
  801764:	42000204 	addi	r8,r8,8
  801768:	d8803717 	ldw	r2,220(sp)
  80176c:	d9003417 	ldw	r4,208(sp)
  801770:	8c400044 	addi	r17,r17,1
  801774:	10c7883a 	add	r3,r2,r3
  801778:	40800115 	stw	r2,4(r8)
  80177c:	41000015 	stw	r4,0(r8)
  801780:	d8c02015 	stw	r3,128(sp)
  801784:	dc401f15 	stw	r17,124(sp)
  801788:	008001c4 	movi	r2,7
  80178c:	14416916 	blt	r2,r17,801d34 <___vfprintf_internal_r+0x16d4>
  801790:	45800204 	addi	r22,r8,8
  801794:	d9003617 	ldw	r4,216(sp)
  801798:	d9403817 	ldw	r5,224(sp)
  80179c:	000d883a 	mov	r6,zero
  8017a0:	000f883a 	mov	r7,zero
  8017a4:	d8c03c15 	stw	r3,240(sp)
  8017a8:	080bf900 	call	80bf90 <__eqdf2>
  8017ac:	d8c03c17 	ldw	r3,240(sp)
  8017b0:	1000bc26 	beq	r2,zero,801aa4 <___vfprintf_internal_r+0x1444>
  8017b4:	d9403317 	ldw	r5,204(sp)
  8017b8:	84000044 	addi	r16,r16,1
  8017bc:	8c400044 	addi	r17,r17,1
  8017c0:	28bfffc4 	addi	r2,r5,-1
  8017c4:	1887883a 	add	r3,r3,r2
  8017c8:	b0800115 	stw	r2,4(r22)
  8017cc:	b4000015 	stw	r16,0(r22)
  8017d0:	d8c02015 	stw	r3,128(sp)
  8017d4:	dc401f15 	stw	r17,124(sp)
  8017d8:	008001c4 	movi	r2,7
  8017dc:	14414316 	blt	r2,r17,801cec <___vfprintf_internal_r+0x168c>
  8017e0:	b5800204 	addi	r22,r22,8
  8017e4:	d9003a17 	ldw	r4,232(sp)
  8017e8:	df0022c4 	addi	fp,sp,139
  8017ec:	8c400044 	addi	r17,r17,1
  8017f0:	20c7883a 	add	r3,r4,r3
  8017f4:	b7000015 	stw	fp,0(r22)
  8017f8:	b1000115 	stw	r4,4(r22)
  8017fc:	d8c02015 	stw	r3,128(sp)
  801800:	dc401f15 	stw	r17,124(sp)
  801804:	008001c4 	movi	r2,7
  801808:	14400e16 	blt	r2,r17,801844 <___vfprintf_internal_r+0x11e4>
  80180c:	b2000204 	addi	r8,r22,8
  801810:	003e1806 	br	801074 <__alt_mem_onchip_memory2+0xff7e1074>
  801814:	01002074 	movhi	r4,129
  801818:	2101d284 	addi	r4,r4,1866
  80181c:	d9002c15 	stw	r4,176(sp)
  801820:	d9002c17 	ldw	r4,176(sp)
  801824:	1c07883a 	add	r3,r3,r16
  801828:	44000115 	stw	r16,4(r8)
  80182c:	41000015 	stw	r4,0(r8)
  801830:	10800044 	addi	r2,r2,1
  801834:	d8c02015 	stw	r3,128(sp)
  801838:	d8801f15 	stw	r2,124(sp)
  80183c:	010001c4 	movi	r4,7
  801840:	20be0b0e 	bge	r4,r2,801070 <__alt_mem_onchip_memory2+0xff7e1070>
  801844:	d9002d17 	ldw	r4,180(sp)
  801848:	d9801e04 	addi	r6,sp,120
  80184c:	b80b883a 	mov	r5,r23
  801850:	08080300 	call	808030 <__sprint_r>
  801854:	103c861e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801858:	d8c02017 	ldw	r3,128(sp)
  80185c:	da000404 	addi	r8,sp,16
  801860:	003e0406 	br	801074 <__alt_mem_onchip_memory2+0xff7e1074>
  801864:	d9002d17 	ldw	r4,180(sp)
  801868:	d9801e04 	addi	r6,sp,120
  80186c:	b80b883a 	mov	r5,r23
  801870:	08080300 	call	808030 <__sprint_r>
  801874:	103e3b26 	beq	r2,zero,801164 <__alt_mem_onchip_memory2+0xff7e1164>
  801878:	003c7d06 	br	800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  80187c:	d9002d17 	ldw	r4,180(sp)
  801880:	d9801e04 	addi	r6,sp,120
  801884:	b80b883a 	mov	r5,r23
  801888:	08080300 	call	808030 <__sprint_r>
  80188c:	103c781e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801890:	d8c02017 	ldw	r3,128(sp)
  801894:	da000404 	addi	r8,sp,16
  801898:	003de906 	br	801040 <__alt_mem_onchip_memory2+0xff7e1040>
  80189c:	d9002d17 	ldw	r4,180(sp)
  8018a0:	d9801e04 	addi	r6,sp,120
  8018a4:	b80b883a 	mov	r5,r23
  8018a8:	08080300 	call	808030 <__sprint_r>
  8018ac:	103c701e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  8018b0:	d8c02017 	ldw	r3,128(sp)
  8018b4:	da000404 	addi	r8,sp,16
  8018b8:	003d9b06 	br	800f28 <__alt_mem_onchip_memory2+0xff7e0f28>
  8018bc:	d9002d17 	ldw	r4,180(sp)
  8018c0:	d9801e04 	addi	r6,sp,120
  8018c4:	b80b883a 	mov	r5,r23
  8018c8:	08080300 	call	808030 <__sprint_r>
  8018cc:	103c681e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  8018d0:	d8c02017 	ldw	r3,128(sp)
  8018d4:	da000404 	addi	r8,sp,16
  8018d8:	003da106 	br	800f60 <__alt_mem_onchip_memory2+0xff7e0f60>
  8018dc:	d9402a17 	ldw	r5,168(sp)
  8018e0:	d8002785 	stb	zero,158(sp)
  8018e4:	283f0616 	blt	r5,zero,801500 <__alt_mem_onchip_memory2+0xff7e1500>
  8018e8:	00ffdfc4 	movi	r3,-129
  8018ec:	9d84b03a 	or	r2,r19,r22
  8018f0:	90e4703a 	and	r18,r18,r3
  8018f4:	103c3b26 	beq	r2,zero,8009e4 <__alt_mem_onchip_memory2+0xff7e09e4>
  8018f8:	0039883a 	mov	fp,zero
  8018fc:	003e5806 	br	801260 <__alt_mem_onchip_memory2+0xff7e1260>
  801900:	9080040c 	andi	r2,r18,16
  801904:	1001b326 	beq	r2,zero,801fd4 <___vfprintf_internal_r+0x1974>
  801908:	d8c02e17 	ldw	r3,184(sp)
  80190c:	d9002a17 	ldw	r4,168(sp)
  801910:	d8002785 	stb	zero,158(sp)
  801914:	18800104 	addi	r2,r3,4
  801918:	1cc00017 	ldw	r19,0(r3)
  80191c:	002d883a 	mov	r22,zero
  801920:	2001b516 	blt	r4,zero,801ff8 <___vfprintf_internal_r+0x1998>
  801924:	00ffdfc4 	movi	r3,-129
  801928:	d8802e15 	stw	r2,184(sp)
  80192c:	90e4703a 	and	r18,r18,r3
  801930:	983d0526 	beq	r19,zero,800d48 <__alt_mem_onchip_memory2+0xff7e0d48>
  801934:	0039883a 	mov	fp,zero
  801938:	003d0806 	br	800d5c <__alt_mem_onchip_memory2+0xff7e0d5c>
  80193c:	dc402617 	ldw	r17,152(sp)
  801940:	0441d30e 	bge	zero,r17,802090 <___vfprintf_internal_r+0x1a30>
  801944:	dc403217 	ldw	r17,200(sp)
  801948:	d8803317 	ldw	r2,204(sp)
  80194c:	1440010e 	bge	r2,r17,801954 <___vfprintf_internal_r+0x12f4>
  801950:	1023883a 	mov	r17,r2
  801954:	04400a0e 	bge	zero,r17,801980 <___vfprintf_internal_r+0x1320>
  801958:	d8801f17 	ldw	r2,124(sp)
  80195c:	1c47883a 	add	r3,r3,r17
  801960:	44000015 	stw	r16,0(r8)
  801964:	10800044 	addi	r2,r2,1
  801968:	44400115 	stw	r17,4(r8)
  80196c:	d8c02015 	stw	r3,128(sp)
  801970:	d8801f15 	stw	r2,124(sp)
  801974:	010001c4 	movi	r4,7
  801978:	20826516 	blt	r4,r2,802310 <___vfprintf_internal_r+0x1cb0>
  80197c:	42000204 	addi	r8,r8,8
  801980:	88026116 	blt	r17,zero,802308 <___vfprintf_internal_r+0x1ca8>
  801984:	d9003217 	ldw	r4,200(sp)
  801988:	2463c83a 	sub	r17,r4,r17
  80198c:	04407b0e 	bge	zero,r17,801b7c <___vfprintf_internal_r+0x151c>
  801990:	05800404 	movi	r22,16
  801994:	d8801f17 	ldw	r2,124(sp)
  801998:	b4419d0e 	bge	r22,r17,802010 <___vfprintf_internal_r+0x19b0>
  80199c:	01002074 	movhi	r4,129
  8019a0:	2101d284 	addi	r4,r4,1866
  8019a4:	d9002c15 	stw	r4,176(sp)
  8019a8:	070001c4 	movi	fp,7
  8019ac:	dcc02d17 	ldw	r19,180(sp)
  8019b0:	00000306 	br	8019c0 <___vfprintf_internal_r+0x1360>
  8019b4:	42000204 	addi	r8,r8,8
  8019b8:	8c7ffc04 	addi	r17,r17,-16
  8019bc:	b441970e 	bge	r22,r17,80201c <___vfprintf_internal_r+0x19bc>
  8019c0:	18c00404 	addi	r3,r3,16
  8019c4:	10800044 	addi	r2,r2,1
  8019c8:	45000015 	stw	r20,0(r8)
  8019cc:	45800115 	stw	r22,4(r8)
  8019d0:	d8c02015 	stw	r3,128(sp)
  8019d4:	d8801f15 	stw	r2,124(sp)
  8019d8:	e0bff60e 	bge	fp,r2,8019b4 <__alt_mem_onchip_memory2+0xff7e19b4>
  8019dc:	d9801e04 	addi	r6,sp,120
  8019e0:	b80b883a 	mov	r5,r23
  8019e4:	9809883a 	mov	r4,r19
  8019e8:	08080300 	call	808030 <__sprint_r>
  8019ec:	103c201e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  8019f0:	d8c02017 	ldw	r3,128(sp)
  8019f4:	d8801f17 	ldw	r2,124(sp)
  8019f8:	da000404 	addi	r8,sp,16
  8019fc:	003fee06 	br	8019b8 <__alt_mem_onchip_memory2+0xff7e19b8>
  801a00:	d9002d17 	ldw	r4,180(sp)
  801a04:	d9801e04 	addi	r6,sp,120
  801a08:	b80b883a 	mov	r5,r23
  801a0c:	08080300 	call	808030 <__sprint_r>
  801a10:	103c171e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801a14:	d8c02017 	ldw	r3,128(sp)
  801a18:	df002787 	ldb	fp,158(sp)
  801a1c:	da000404 	addi	r8,sp,16
  801a20:	003d3406 	br	800ef4 <__alt_mem_onchip_memory2+0xff7e0ef4>
  801a24:	9080040c 	andi	r2,r18,16
  801a28:	10016126 	beq	r2,zero,801fb0 <___vfprintf_internal_r+0x1950>
  801a2c:	d9402e17 	ldw	r5,184(sp)
  801a30:	2cc00017 	ldw	r19,0(r5)
  801a34:	29400104 	addi	r5,r5,4
  801a38:	d9402e15 	stw	r5,184(sp)
  801a3c:	982dd7fa 	srai	r22,r19,31
  801a40:	b005883a 	mov	r2,r22
  801a44:	003c5a06 	br	800bb0 <__alt_mem_onchip_memory2+0xff7e0bb0>
  801a48:	9080040c 	andi	r2,r18,16
  801a4c:	10003526 	beq	r2,zero,801b24 <___vfprintf_internal_r+0x14c4>
  801a50:	d8c02e17 	ldw	r3,184(sp)
  801a54:	d9002a17 	ldw	r4,168(sp)
  801a58:	d8002785 	stb	zero,158(sp)
  801a5c:	18800104 	addi	r2,r3,4
  801a60:	1cc00017 	ldw	r19,0(r3)
  801a64:	002d883a 	mov	r22,zero
  801a68:	20003716 	blt	r4,zero,801b48 <___vfprintf_internal_r+0x14e8>
  801a6c:	00ffdfc4 	movi	r3,-129
  801a70:	d8802e15 	stw	r2,184(sp)
  801a74:	90e4703a 	and	r18,r18,r3
  801a78:	0039883a 	mov	fp,zero
  801a7c:	983dd426 	beq	r19,zero,8011d0 <__alt_mem_onchip_memory2+0xff7e11d0>
  801a80:	00800244 	movi	r2,9
  801a84:	14fc5336 	bltu	r2,r19,800bd4 <__alt_mem_onchip_memory2+0xff7e0bd4>
  801a88:	d8c02817 	ldw	r3,160(sp)
  801a8c:	dc001dc4 	addi	r16,sp,119
  801a90:	9cc00c04 	addi	r19,r19,48
  801a94:	1c07c83a 	sub	r3,r3,r16
  801a98:	dcc01dc5 	stb	r19,119(sp)
  801a9c:	d8c02b15 	stw	r3,172(sp)
  801aa0:	003cc606 	br	800dbc <__alt_mem_onchip_memory2+0xff7e0dbc>
  801aa4:	d8803317 	ldw	r2,204(sp)
  801aa8:	143fffc4 	addi	r16,r2,-1
  801aac:	043f4d0e 	bge	zero,r16,8017e4 <__alt_mem_onchip_memory2+0xff7e17e4>
  801ab0:	07000404 	movi	fp,16
  801ab4:	e400810e 	bge	fp,r16,801cbc <___vfprintf_internal_r+0x165c>
  801ab8:	01402074 	movhi	r5,129
  801abc:	2941d284 	addi	r5,r5,1866
  801ac0:	d9402c15 	stw	r5,176(sp)
  801ac4:	01c001c4 	movi	r7,7
  801ac8:	dcc02d17 	ldw	r19,180(sp)
  801acc:	00000306 	br	801adc <___vfprintf_internal_r+0x147c>
  801ad0:	b5800204 	addi	r22,r22,8
  801ad4:	843ffc04 	addi	r16,r16,-16
  801ad8:	e4007b0e 	bge	fp,r16,801cc8 <___vfprintf_internal_r+0x1668>
  801adc:	18c00404 	addi	r3,r3,16
  801ae0:	8c400044 	addi	r17,r17,1
  801ae4:	b5000015 	stw	r20,0(r22)
  801ae8:	b7000115 	stw	fp,4(r22)
  801aec:	d8c02015 	stw	r3,128(sp)
  801af0:	dc401f15 	stw	r17,124(sp)
  801af4:	3c7ff60e 	bge	r7,r17,801ad0 <__alt_mem_onchip_memory2+0xff7e1ad0>
  801af8:	d9801e04 	addi	r6,sp,120
  801afc:	b80b883a 	mov	r5,r23
  801b00:	9809883a 	mov	r4,r19
  801b04:	d9c03c15 	stw	r7,240(sp)
  801b08:	08080300 	call	808030 <__sprint_r>
  801b0c:	d9c03c17 	ldw	r7,240(sp)
  801b10:	103bd71e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801b14:	d8c02017 	ldw	r3,128(sp)
  801b18:	dc401f17 	ldw	r17,124(sp)
  801b1c:	dd800404 	addi	r22,sp,16
  801b20:	003fec06 	br	801ad4 <__alt_mem_onchip_memory2+0xff7e1ad4>
  801b24:	9080100c 	andi	r2,r18,64
  801b28:	d8002785 	stb	zero,158(sp)
  801b2c:	10010e26 	beq	r2,zero,801f68 <___vfprintf_internal_r+0x1908>
  801b30:	d9402e17 	ldw	r5,184(sp)
  801b34:	d8c02a17 	ldw	r3,168(sp)
  801b38:	002d883a 	mov	r22,zero
  801b3c:	28800104 	addi	r2,r5,4
  801b40:	2cc0000b 	ldhu	r19,0(r5)
  801b44:	183fc90e 	bge	r3,zero,801a6c <__alt_mem_onchip_memory2+0xff7e1a6c>
  801b48:	d8802e15 	stw	r2,184(sp)
  801b4c:	0039883a 	mov	fp,zero
  801b50:	9d84b03a 	or	r2,r19,r22
  801b54:	103c1e1e 	bne	r2,zero,800bd0 <__alt_mem_onchip_memory2+0xff7e0bd0>
  801b58:	00800044 	movi	r2,1
  801b5c:	003e6c06 	br	801510 <__alt_mem_onchip_memory2+0xff7e1510>
  801b60:	d9002d17 	ldw	r4,180(sp)
  801b64:	d9801e04 	addi	r6,sp,120
  801b68:	b80b883a 	mov	r5,r23
  801b6c:	08080300 	call	808030 <__sprint_r>
  801b70:	103bbf1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801b74:	d8c02017 	ldw	r3,128(sp)
  801b78:	da000404 	addi	r8,sp,16
  801b7c:	d9003217 	ldw	r4,200(sp)
  801b80:	d8802617 	ldw	r2,152(sp)
  801b84:	d9403317 	ldw	r5,204(sp)
  801b88:	8123883a 	add	r17,r16,r4
  801b8c:	11400216 	blt	r2,r5,801b98 <___vfprintf_internal_r+0x1538>
  801b90:	9100004c 	andi	r4,r18,1
  801b94:	20000d26 	beq	r4,zero,801bcc <___vfprintf_internal_r+0x156c>
  801b98:	d9003717 	ldw	r4,220(sp)
  801b9c:	d9403417 	ldw	r5,208(sp)
  801ba0:	1907883a 	add	r3,r3,r4
  801ba4:	d9001f17 	ldw	r4,124(sp)
  801ba8:	41400015 	stw	r5,0(r8)
  801bac:	d9403717 	ldw	r5,220(sp)
  801bb0:	21000044 	addi	r4,r4,1
  801bb4:	d8c02015 	stw	r3,128(sp)
  801bb8:	41400115 	stw	r5,4(r8)
  801bbc:	d9001f15 	stw	r4,124(sp)
  801bc0:	014001c4 	movi	r5,7
  801bc4:	2901e816 	blt	r5,r4,802368 <___vfprintf_internal_r+0x1d08>
  801bc8:	42000204 	addi	r8,r8,8
  801bcc:	d9003317 	ldw	r4,204(sp)
  801bd0:	8121883a 	add	r16,r16,r4
  801bd4:	2085c83a 	sub	r2,r4,r2
  801bd8:	8461c83a 	sub	r16,r16,r17
  801bdc:	1400010e 	bge	r2,r16,801be4 <___vfprintf_internal_r+0x1584>
  801be0:	1021883a 	mov	r16,r2
  801be4:	04000a0e 	bge	zero,r16,801c10 <___vfprintf_internal_r+0x15b0>
  801be8:	d9001f17 	ldw	r4,124(sp)
  801bec:	1c07883a 	add	r3,r3,r16
  801bf0:	44400015 	stw	r17,0(r8)
  801bf4:	21000044 	addi	r4,r4,1
  801bf8:	44000115 	stw	r16,4(r8)
  801bfc:	d8c02015 	stw	r3,128(sp)
  801c00:	d9001f15 	stw	r4,124(sp)
  801c04:	014001c4 	movi	r5,7
  801c08:	2901fb16 	blt	r5,r4,8023f8 <___vfprintf_internal_r+0x1d98>
  801c0c:	42000204 	addi	r8,r8,8
  801c10:	8001f716 	blt	r16,zero,8023f0 <___vfprintf_internal_r+0x1d90>
  801c14:	1421c83a 	sub	r16,r2,r16
  801c18:	043d160e 	bge	zero,r16,801074 <__alt_mem_onchip_memory2+0xff7e1074>
  801c1c:	04400404 	movi	r17,16
  801c20:	d8801f17 	ldw	r2,124(sp)
  801c24:	8c3efb0e 	bge	r17,r16,801814 <__alt_mem_onchip_memory2+0xff7e1814>
  801c28:	01402074 	movhi	r5,129
  801c2c:	2941d284 	addi	r5,r5,1866
  801c30:	d9402c15 	stw	r5,176(sp)
  801c34:	058001c4 	movi	r22,7
  801c38:	dcc02d17 	ldw	r19,180(sp)
  801c3c:	00000306 	br	801c4c <___vfprintf_internal_r+0x15ec>
  801c40:	42000204 	addi	r8,r8,8
  801c44:	843ffc04 	addi	r16,r16,-16
  801c48:	8c3ef50e 	bge	r17,r16,801820 <__alt_mem_onchip_memory2+0xff7e1820>
  801c4c:	18c00404 	addi	r3,r3,16
  801c50:	10800044 	addi	r2,r2,1
  801c54:	45000015 	stw	r20,0(r8)
  801c58:	44400115 	stw	r17,4(r8)
  801c5c:	d8c02015 	stw	r3,128(sp)
  801c60:	d8801f15 	stw	r2,124(sp)
  801c64:	b0bff60e 	bge	r22,r2,801c40 <__alt_mem_onchip_memory2+0xff7e1c40>
  801c68:	d9801e04 	addi	r6,sp,120
  801c6c:	b80b883a 	mov	r5,r23
  801c70:	9809883a 	mov	r4,r19
  801c74:	08080300 	call	808030 <__sprint_r>
  801c78:	103b7d1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801c7c:	d8c02017 	ldw	r3,128(sp)
  801c80:	d8801f17 	ldw	r2,124(sp)
  801c84:	da000404 	addi	r8,sp,16
  801c88:	003fee06 	br	801c44 <__alt_mem_onchip_memory2+0xff7e1c44>
  801c8c:	9088703a 	and	r4,r18,r2
  801c90:	203eab1e 	bne	r4,zero,801740 <__alt_mem_onchip_memory2+0xff7e1740>
  801c94:	dc401f17 	ldw	r17,124(sp)
  801c98:	40800115 	stw	r2,4(r8)
  801c9c:	44000015 	stw	r16,0(r8)
  801ca0:	8c400044 	addi	r17,r17,1
  801ca4:	d8c02015 	stw	r3,128(sp)
  801ca8:	dc401f15 	stw	r17,124(sp)
  801cac:	008001c4 	movi	r2,7
  801cb0:	14400e16 	blt	r2,r17,801cec <___vfprintf_internal_r+0x168c>
  801cb4:	45800204 	addi	r22,r8,8
  801cb8:	003eca06 	br	8017e4 <__alt_mem_onchip_memory2+0xff7e17e4>
  801cbc:	01002074 	movhi	r4,129
  801cc0:	2101d284 	addi	r4,r4,1866
  801cc4:	d9002c15 	stw	r4,176(sp)
  801cc8:	d8802c17 	ldw	r2,176(sp)
  801ccc:	1c07883a 	add	r3,r3,r16
  801cd0:	8c400044 	addi	r17,r17,1
  801cd4:	b0800015 	stw	r2,0(r22)
  801cd8:	b4000115 	stw	r16,4(r22)
  801cdc:	d8c02015 	stw	r3,128(sp)
  801ce0:	dc401f15 	stw	r17,124(sp)
  801ce4:	008001c4 	movi	r2,7
  801ce8:	147ebd0e 	bge	r2,r17,8017e0 <__alt_mem_onchip_memory2+0xff7e17e0>
  801cec:	d9002d17 	ldw	r4,180(sp)
  801cf0:	d9801e04 	addi	r6,sp,120
  801cf4:	b80b883a 	mov	r5,r23
  801cf8:	08080300 	call	808030 <__sprint_r>
  801cfc:	103b5c1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801d00:	d8c02017 	ldw	r3,128(sp)
  801d04:	dc401f17 	ldw	r17,124(sp)
  801d08:	dd800404 	addi	r22,sp,16
  801d0c:	003eb506 	br	8017e4 <__alt_mem_onchip_memory2+0xff7e17e4>
  801d10:	d9002d17 	ldw	r4,180(sp)
  801d14:	d9801e04 	addi	r6,sp,120
  801d18:	b80b883a 	mov	r5,r23
  801d1c:	08080300 	call	808030 <__sprint_r>
  801d20:	103b531e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801d24:	d8c02017 	ldw	r3,128(sp)
  801d28:	dc401f17 	ldw	r17,124(sp)
  801d2c:	da000404 	addi	r8,sp,16
  801d30:	003e8d06 	br	801768 <__alt_mem_onchip_memory2+0xff7e1768>
  801d34:	d9002d17 	ldw	r4,180(sp)
  801d38:	d9801e04 	addi	r6,sp,120
  801d3c:	b80b883a 	mov	r5,r23
  801d40:	08080300 	call	808030 <__sprint_r>
  801d44:	103b4a1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801d48:	d8c02017 	ldw	r3,128(sp)
  801d4c:	dc401f17 	ldw	r17,124(sp)
  801d50:	dd800404 	addi	r22,sp,16
  801d54:	003e8f06 	br	801794 <__alt_mem_onchip_memory2+0xff7e1794>
  801d58:	0027883a 	mov	r19,zero
  801d5c:	003f4a06 	br	801a88 <__alt_mem_onchip_memory2+0xff7e1a88>
  801d60:	d9002d17 	ldw	r4,180(sp)
  801d64:	d9801e04 	addi	r6,sp,120
  801d68:	b80b883a 	mov	r5,r23
  801d6c:	08080300 	call	808030 <__sprint_r>
  801d70:	103b3f1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  801d74:	d8c02017 	ldw	r3,128(sp)
  801d78:	da000404 	addi	r8,sp,16
  801d7c:	003c7b06 	br	800f6c <__alt_mem_onchip_memory2+0xff7e0f6c>
  801d80:	d9402a17 	ldw	r5,168(sp)
  801d84:	04e7c83a 	sub	r19,zero,r19
  801d88:	07000b44 	movi	fp,45
  801d8c:	9804c03a 	cmpne	r2,r19,zero
  801d90:	05adc83a 	sub	r22,zero,r22
  801d94:	df002785 	stb	fp,158(sp)
  801d98:	b0adc83a 	sub	r22,r22,r2
  801d9c:	28017b16 	blt	r5,zero,80238c <___vfprintf_internal_r+0x1d2c>
  801da0:	00bfdfc4 	movi	r2,-129
  801da4:	90a4703a 	and	r18,r18,r2
  801da8:	003b8906 	br	800bd0 <__alt_mem_onchip_memory2+0xff7e0bd0>
  801dac:	d9003617 	ldw	r4,216(sp)
  801db0:	d9403817 	ldw	r5,224(sp)
  801db4:	da003d15 	stw	r8,244(sp)
  801db8:	0807c540 	call	807c54 <__fpclassifyd>
  801dbc:	da003d17 	ldw	r8,244(sp)
  801dc0:	1000f026 	beq	r2,zero,802184 <___vfprintf_internal_r+0x1b24>
  801dc4:	d9002a17 	ldw	r4,168(sp)
  801dc8:	05bff7c4 	movi	r22,-33
  801dcc:	00bfffc4 	movi	r2,-1
  801dd0:	8dac703a 	and	r22,r17,r22
  801dd4:	20820026 	beq	r4,r2,8025d8 <___vfprintf_internal_r+0x1f78>
  801dd8:	008011c4 	movi	r2,71
  801ddc:	b081f726 	beq	r22,r2,8025bc <___vfprintf_internal_r+0x1f5c>
  801de0:	d9003817 	ldw	r4,224(sp)
  801de4:	90c04014 	ori	r3,r18,256
  801de8:	d8c02c15 	stw	r3,176(sp)
  801dec:	20021516 	blt	r4,zero,802644 <___vfprintf_internal_r+0x1fe4>
  801df0:	dcc03817 	ldw	r19,224(sp)
  801df4:	d8002905 	stb	zero,164(sp)
  801df8:	00801984 	movi	r2,102
  801dfc:	8881f926 	beq	r17,r2,8025e4 <___vfprintf_internal_r+0x1f84>
  801e00:	00801184 	movi	r2,70
  801e04:	88821c26 	beq	r17,r2,802678 <___vfprintf_internal_r+0x2018>
  801e08:	00801144 	movi	r2,69
  801e0c:	b081ef26 	beq	r22,r2,8025cc <___vfprintf_internal_r+0x1f6c>
  801e10:	d8c02a17 	ldw	r3,168(sp)
  801e14:	d8802104 	addi	r2,sp,132
  801e18:	d8800315 	stw	r2,12(sp)
  801e1c:	d9403617 	ldw	r5,216(sp)
  801e20:	d8802504 	addi	r2,sp,148
  801e24:	d9002d17 	ldw	r4,180(sp)
  801e28:	d8800215 	stw	r2,8(sp)
  801e2c:	d8802604 	addi	r2,sp,152
  801e30:	d8c00015 	stw	r3,0(sp)
  801e34:	d8800115 	stw	r2,4(sp)
  801e38:	01c00084 	movi	r7,2
  801e3c:	980d883a 	mov	r6,r19
  801e40:	d8c03c15 	stw	r3,240(sp)
  801e44:	da003d15 	stw	r8,244(sp)
  801e48:	0802d900 	call	802d90 <_dtoa_r>
  801e4c:	1021883a 	mov	r16,r2
  801e50:	008019c4 	movi	r2,103
  801e54:	d8c03c17 	ldw	r3,240(sp)
  801e58:	da003d17 	ldw	r8,244(sp)
  801e5c:	88817126 	beq	r17,r2,802424 <___vfprintf_internal_r+0x1dc4>
  801e60:	008011c4 	movi	r2,71
  801e64:	88829126 	beq	r17,r2,8028ac <___vfprintf_internal_r+0x224c>
  801e68:	80f9883a 	add	fp,r16,r3
  801e6c:	d9003617 	ldw	r4,216(sp)
  801e70:	000d883a 	mov	r6,zero
  801e74:	000f883a 	mov	r7,zero
  801e78:	980b883a 	mov	r5,r19
  801e7c:	da003d15 	stw	r8,244(sp)
  801e80:	080bf900 	call	80bf90 <__eqdf2>
  801e84:	da003d17 	ldw	r8,244(sp)
  801e88:	10018d26 	beq	r2,zero,8024c0 <___vfprintf_internal_r+0x1e60>
  801e8c:	d8802117 	ldw	r2,132(sp)
  801e90:	1700062e 	bgeu	r2,fp,801eac <___vfprintf_internal_r+0x184c>
  801e94:	01000c04 	movi	r4,48
  801e98:	10c00044 	addi	r3,r2,1
  801e9c:	d8c02115 	stw	r3,132(sp)
  801ea0:	11000005 	stb	r4,0(r2)
  801ea4:	d8802117 	ldw	r2,132(sp)
  801ea8:	173ffb36 	bltu	r2,fp,801e98 <__alt_mem_onchip_memory2+0xff7e1e98>
  801eac:	1405c83a 	sub	r2,r2,r16
  801eb0:	d8803315 	stw	r2,204(sp)
  801eb4:	008011c4 	movi	r2,71
  801eb8:	b0817626 	beq	r22,r2,802494 <___vfprintf_internal_r+0x1e34>
  801ebc:	00801944 	movi	r2,101
  801ec0:	1442800e 	bge	r2,r17,8028c4 <___vfprintf_internal_r+0x2264>
  801ec4:	d8c02617 	ldw	r3,152(sp)
  801ec8:	00801984 	movi	r2,102
  801ecc:	d8c03215 	stw	r3,200(sp)
  801ed0:	8881fe26 	beq	r17,r2,8026cc <___vfprintf_internal_r+0x206c>
  801ed4:	d8c03217 	ldw	r3,200(sp)
  801ed8:	d9003317 	ldw	r4,204(sp)
  801edc:	1901dd16 	blt	r3,r4,802654 <___vfprintf_internal_r+0x1ff4>
  801ee0:	9480004c 	andi	r18,r18,1
  801ee4:	90022b1e 	bne	r18,zero,802794 <___vfprintf_internal_r+0x2134>
  801ee8:	1805883a 	mov	r2,r3
  801eec:	18028316 	blt	r3,zero,8028fc <___vfprintf_internal_r+0x229c>
  801ef0:	d8c03217 	ldw	r3,200(sp)
  801ef4:	044019c4 	movi	r17,103
  801ef8:	d8c02b15 	stw	r3,172(sp)
  801efc:	df002907 	ldb	fp,164(sp)
  801f00:	e001531e 	bne	fp,zero,802450 <___vfprintf_internal_r+0x1df0>
  801f04:	df002783 	ldbu	fp,158(sp)
  801f08:	d8802915 	stw	r2,164(sp)
  801f0c:	dc802c17 	ldw	r18,176(sp)
  801f10:	d8002a15 	stw	zero,168(sp)
  801f14:	003baf06 	br	800dd4 <__alt_mem_onchip_memory2+0xff7e0dd4>
  801f18:	d8c02e17 	ldw	r3,184(sp)
  801f1c:	d9002e17 	ldw	r4,184(sp)
  801f20:	d9402e17 	ldw	r5,184(sp)
  801f24:	18c00017 	ldw	r3,0(r3)
  801f28:	21000117 	ldw	r4,4(r4)
  801f2c:	29400204 	addi	r5,r5,8
  801f30:	d8c03615 	stw	r3,216(sp)
  801f34:	d9003815 	stw	r4,224(sp)
  801f38:	d9402e15 	stw	r5,184(sp)
  801f3c:	003b5006 	br	800c80 <__alt_mem_onchip_memory2+0xff7e0c80>
  801f40:	ac400007 	ldb	r17,0(r21)
  801f44:	003a2806 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  801f48:	9080100c 	andi	r2,r18,64
  801f4c:	1000a826 	beq	r2,zero,8021f0 <___vfprintf_internal_r+0x1b90>
  801f50:	d8c02e17 	ldw	r3,184(sp)
  801f54:	002d883a 	mov	r22,zero
  801f58:	1cc0000b 	ldhu	r19,0(r3)
  801f5c:	18c00104 	addi	r3,r3,4
  801f60:	d8c02e15 	stw	r3,184(sp)
  801f64:	003caf06 	br	801224 <__alt_mem_onchip_memory2+0xff7e1224>
  801f68:	d9002e17 	ldw	r4,184(sp)
  801f6c:	d9402a17 	ldw	r5,168(sp)
  801f70:	002d883a 	mov	r22,zero
  801f74:	20800104 	addi	r2,r4,4
  801f78:	24c00017 	ldw	r19,0(r4)
  801f7c:	283ebb0e 	bge	r5,zero,801a6c <__alt_mem_onchip_memory2+0xff7e1a6c>
  801f80:	003ef106 	br	801b48 <__alt_mem_onchip_memory2+0xff7e1b48>
  801f84:	9080040c 	andi	r2,r18,16
  801f88:	1000921e 	bne	r2,zero,8021d4 <___vfprintf_internal_r+0x1b74>
  801f8c:	9480100c 	andi	r18,r18,64
  801f90:	90013926 	beq	r18,zero,802478 <___vfprintf_internal_r+0x1e18>
  801f94:	d9402e17 	ldw	r5,184(sp)
  801f98:	d8c02f17 	ldw	r3,188(sp)
  801f9c:	28800017 	ldw	r2,0(r5)
  801fa0:	29400104 	addi	r5,r5,4
  801fa4:	d9402e15 	stw	r5,184(sp)
  801fa8:	10c0000d 	sth	r3,0(r2)
  801fac:	0039e406 	br	800740 <__alt_mem_onchip_memory2+0xff7e0740>
  801fb0:	9080100c 	andi	r2,r18,64
  801fb4:	10008026 	beq	r2,zero,8021b8 <___vfprintf_internal_r+0x1b58>
  801fb8:	d8802e17 	ldw	r2,184(sp)
  801fbc:	14c0000f 	ldh	r19,0(r2)
  801fc0:	10800104 	addi	r2,r2,4
  801fc4:	d8802e15 	stw	r2,184(sp)
  801fc8:	982dd7fa 	srai	r22,r19,31
  801fcc:	b005883a 	mov	r2,r22
  801fd0:	003af706 	br	800bb0 <__alt_mem_onchip_memory2+0xff7e0bb0>
  801fd4:	9080100c 	andi	r2,r18,64
  801fd8:	d8002785 	stb	zero,158(sp)
  801fdc:	10008a1e 	bne	r2,zero,802208 <___vfprintf_internal_r+0x1ba8>
  801fe0:	d9002e17 	ldw	r4,184(sp)
  801fe4:	d9402a17 	ldw	r5,168(sp)
  801fe8:	002d883a 	mov	r22,zero
  801fec:	20800104 	addi	r2,r4,4
  801ff0:	24c00017 	ldw	r19,0(r4)
  801ff4:	283e4b0e 	bge	r5,zero,801924 <__alt_mem_onchip_memory2+0xff7e1924>
  801ff8:	9d86b03a 	or	r3,r19,r22
  801ffc:	d8802e15 	stw	r2,184(sp)
  802000:	183e4c1e 	bne	r3,zero,801934 <__alt_mem_onchip_memory2+0xff7e1934>
  802004:	0039883a 	mov	fp,zero
  802008:	0005883a 	mov	r2,zero
  80200c:	003d4006 	br	801510 <__alt_mem_onchip_memory2+0xff7e1510>
  802010:	01402074 	movhi	r5,129
  802014:	2941d284 	addi	r5,r5,1866
  802018:	d9402c15 	stw	r5,176(sp)
  80201c:	d9402c17 	ldw	r5,176(sp)
  802020:	1c47883a 	add	r3,r3,r17
  802024:	10800044 	addi	r2,r2,1
  802028:	41400015 	stw	r5,0(r8)
  80202c:	44400115 	stw	r17,4(r8)
  802030:	d8c02015 	stw	r3,128(sp)
  802034:	d8801f15 	stw	r2,124(sp)
  802038:	010001c4 	movi	r4,7
  80203c:	20bec816 	blt	r4,r2,801b60 <__alt_mem_onchip_memory2+0xff7e1b60>
  802040:	42000204 	addi	r8,r8,8
  802044:	003ecd06 	br	801b7c <__alt_mem_onchip_memory2+0xff7e1b7c>
  802048:	d9002a17 	ldw	r4,168(sp)
  80204c:	d8002785 	stb	zero,158(sp)
  802050:	203d2d16 	blt	r4,zero,801508 <__alt_mem_onchip_memory2+0xff7e1508>
  802054:	00bfdfc4 	movi	r2,-129
  802058:	90a4703a 	and	r18,r18,r2
  80205c:	003a6106 	br	8009e4 <__alt_mem_onchip_memory2+0xff7e09e4>
  802060:	01002074 	movhi	r4,129
  802064:	2101d284 	addi	r4,r4,1866
  802068:	d9002c15 	stw	r4,176(sp)
  80206c:	003bea06 	br	801018 <__alt_mem_onchip_memory2+0xff7e1018>
  802070:	d9002d17 	ldw	r4,180(sp)
  802074:	d9801e04 	addi	r6,sp,120
  802078:	b80b883a 	mov	r5,r23
  80207c:	08080300 	call	808030 <__sprint_r>
  802080:	103a7b1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  802084:	d8c02017 	ldw	r3,128(sp)
  802088:	da000404 	addi	r8,sp,16
  80208c:	003d4106 	br	801594 <__alt_mem_onchip_memory2+0xff7e1594>
  802090:	d8801f17 	ldw	r2,124(sp)
  802094:	01402074 	movhi	r5,129
  802098:	01000044 	movi	r4,1
  80209c:	18c00044 	addi	r3,r3,1
  8020a0:	10800044 	addi	r2,r2,1
  8020a4:	2941d204 	addi	r5,r5,1864
  8020a8:	41000115 	stw	r4,4(r8)
  8020ac:	41400015 	stw	r5,0(r8)
  8020b0:	d8c02015 	stw	r3,128(sp)
  8020b4:	d8801f15 	stw	r2,124(sp)
  8020b8:	010001c4 	movi	r4,7
  8020bc:	20805c16 	blt	r4,r2,802230 <___vfprintf_internal_r+0x1bd0>
  8020c0:	42000204 	addi	r8,r8,8
  8020c4:	8800041e 	bne	r17,zero,8020d8 <___vfprintf_internal_r+0x1a78>
  8020c8:	d8803317 	ldw	r2,204(sp)
  8020cc:	1000021e 	bne	r2,zero,8020d8 <___vfprintf_internal_r+0x1a78>
  8020d0:	9080004c 	andi	r2,r18,1
  8020d4:	103be726 	beq	r2,zero,801074 <__alt_mem_onchip_memory2+0xff7e1074>
  8020d8:	d9003717 	ldw	r4,220(sp)
  8020dc:	d8801f17 	ldw	r2,124(sp)
  8020e0:	d9403417 	ldw	r5,208(sp)
  8020e4:	20c7883a 	add	r3,r4,r3
  8020e8:	10800044 	addi	r2,r2,1
  8020ec:	41000115 	stw	r4,4(r8)
  8020f0:	41400015 	stw	r5,0(r8)
  8020f4:	d8c02015 	stw	r3,128(sp)
  8020f8:	d8801f15 	stw	r2,124(sp)
  8020fc:	010001c4 	movi	r4,7
  802100:	20812116 	blt	r4,r2,802588 <___vfprintf_internal_r+0x1f28>
  802104:	42000204 	addi	r8,r8,8
  802108:	0463c83a 	sub	r17,zero,r17
  80210c:	0440730e 	bge	zero,r17,8022dc <___vfprintf_internal_r+0x1c7c>
  802110:	05800404 	movi	r22,16
  802114:	b440860e 	bge	r22,r17,802330 <___vfprintf_internal_r+0x1cd0>
  802118:	01402074 	movhi	r5,129
  80211c:	2941d284 	addi	r5,r5,1866
  802120:	d9402c15 	stw	r5,176(sp)
  802124:	070001c4 	movi	fp,7
  802128:	dcc02d17 	ldw	r19,180(sp)
  80212c:	00000306 	br	80213c <___vfprintf_internal_r+0x1adc>
  802130:	42000204 	addi	r8,r8,8
  802134:	8c7ffc04 	addi	r17,r17,-16
  802138:	b440800e 	bge	r22,r17,80233c <___vfprintf_internal_r+0x1cdc>
  80213c:	18c00404 	addi	r3,r3,16
  802140:	10800044 	addi	r2,r2,1
  802144:	45000015 	stw	r20,0(r8)
  802148:	45800115 	stw	r22,4(r8)
  80214c:	d8c02015 	stw	r3,128(sp)
  802150:	d8801f15 	stw	r2,124(sp)
  802154:	e0bff60e 	bge	fp,r2,802130 <__alt_mem_onchip_memory2+0xff7e2130>
  802158:	d9801e04 	addi	r6,sp,120
  80215c:	b80b883a 	mov	r5,r23
  802160:	9809883a 	mov	r4,r19
  802164:	08080300 	call	808030 <__sprint_r>
  802168:	103a411e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  80216c:	d8c02017 	ldw	r3,128(sp)
  802170:	d8801f17 	ldw	r2,124(sp)
  802174:	da000404 	addi	r8,sp,16
  802178:	003fee06 	br	802134 <__alt_mem_onchip_memory2+0xff7e2134>
  80217c:	00bfffc4 	movi	r2,-1
  802180:	003a3f06 	br	800a80 <__alt_mem_onchip_memory2+0xff7e0a80>
  802184:	008011c4 	movi	r2,71
  802188:	1440b816 	blt	r2,r17,80246c <___vfprintf_internal_r+0x1e0c>
  80218c:	04002074 	movhi	r16,129
  802190:	8401c404 	addi	r16,r16,1808
  802194:	00c000c4 	movi	r3,3
  802198:	00bfdfc4 	movi	r2,-129
  80219c:	d8c02915 	stw	r3,164(sp)
  8021a0:	90a4703a 	and	r18,r18,r2
  8021a4:	df002783 	ldbu	fp,158(sp)
  8021a8:	d8c02b15 	stw	r3,172(sp)
  8021ac:	d8002a15 	stw	zero,168(sp)
  8021b0:	d8003215 	stw	zero,200(sp)
  8021b4:	003b0706 	br	800dd4 <__alt_mem_onchip_memory2+0xff7e0dd4>
  8021b8:	d8c02e17 	ldw	r3,184(sp)
  8021bc:	1cc00017 	ldw	r19,0(r3)
  8021c0:	18c00104 	addi	r3,r3,4
  8021c4:	d8c02e15 	stw	r3,184(sp)
  8021c8:	982dd7fa 	srai	r22,r19,31
  8021cc:	b005883a 	mov	r2,r22
  8021d0:	003a7706 	br	800bb0 <__alt_mem_onchip_memory2+0xff7e0bb0>
  8021d4:	d8c02e17 	ldw	r3,184(sp)
  8021d8:	d9002f17 	ldw	r4,188(sp)
  8021dc:	18800017 	ldw	r2,0(r3)
  8021e0:	18c00104 	addi	r3,r3,4
  8021e4:	d8c02e15 	stw	r3,184(sp)
  8021e8:	11000015 	stw	r4,0(r2)
  8021ec:	00395406 	br	800740 <__alt_mem_onchip_memory2+0xff7e0740>
  8021f0:	d9002e17 	ldw	r4,184(sp)
  8021f4:	002d883a 	mov	r22,zero
  8021f8:	24c00017 	ldw	r19,0(r4)
  8021fc:	21000104 	addi	r4,r4,4
  802200:	d9002e15 	stw	r4,184(sp)
  802204:	003c0706 	br	801224 <__alt_mem_onchip_memory2+0xff7e1224>
  802208:	d9402e17 	ldw	r5,184(sp)
  80220c:	d8c02a17 	ldw	r3,168(sp)
  802210:	002d883a 	mov	r22,zero
  802214:	28800104 	addi	r2,r5,4
  802218:	2cc0000b 	ldhu	r19,0(r5)
  80221c:	183dc10e 	bge	r3,zero,801924 <__alt_mem_onchip_memory2+0xff7e1924>
  802220:	003f7506 	br	801ff8 <__alt_mem_onchip_memory2+0xff7e1ff8>
  802224:	04002074 	movhi	r16,129
  802228:	8401c204 	addi	r16,r16,1800
  80222c:	003aa706 	br	800ccc <__alt_mem_onchip_memory2+0xff7e0ccc>
  802230:	d9002d17 	ldw	r4,180(sp)
  802234:	d9801e04 	addi	r6,sp,120
  802238:	b80b883a 	mov	r5,r23
  80223c:	08080300 	call	808030 <__sprint_r>
  802240:	103a0b1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  802244:	dc402617 	ldw	r17,152(sp)
  802248:	d8c02017 	ldw	r3,128(sp)
  80224c:	da000404 	addi	r8,sp,16
  802250:	003f9c06 	br	8020c4 <__alt_mem_onchip_memory2+0xff7e20c4>
  802254:	ac400043 	ldbu	r17,1(r21)
  802258:	84000814 	ori	r16,r16,32
  80225c:	ad400044 	addi	r21,r21,1
  802260:	8c403fcc 	andi	r17,r17,255
  802264:	8c40201c 	xori	r17,r17,128
  802268:	8c7fe004 	addi	r17,r17,-128
  80226c:	00395e06 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  802270:	d8c02e15 	stw	r3,184(sp)
  802274:	0039883a 	mov	fp,zero
  802278:	003e3506 	br	801b50 <__alt_mem_onchip_memory2+0xff7e1b50>
  80227c:	d9002d17 	ldw	r4,180(sp)
  802280:	d9801e04 	addi	r6,sp,120
  802284:	b80b883a 	mov	r5,r23
  802288:	08080300 	call	808030 <__sprint_r>
  80228c:	1039f81e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  802290:	d8c02017 	ldw	r3,128(sp)
  802294:	da000404 	addi	r8,sp,16
  802298:	003cd006 	br	8015dc <__alt_mem_onchip_memory2+0xff7e15dc>
  80229c:	8009883a 	mov	r4,r16
  8022a0:	df003d15 	stw	fp,244(sp)
  8022a4:	08005c80 	call	8005c8 <strlen>
  8022a8:	d8802b15 	stw	r2,172(sp)
  8022ac:	da003d17 	ldw	r8,244(sp)
  8022b0:	103c200e 	bge	r2,zero,801334 <__alt_mem_onchip_memory2+0xff7e1334>
  8022b4:	0005883a 	mov	r2,zero
  8022b8:	003c1e06 	br	801334 <__alt_mem_onchip_memory2+0xff7e1334>
  8022bc:	d9002d17 	ldw	r4,180(sp)
  8022c0:	d9801e04 	addi	r6,sp,120
  8022c4:	b80b883a 	mov	r5,r23
  8022c8:	08080300 	call	808030 <__sprint_r>
  8022cc:	1039e81e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  8022d0:	d8c02017 	ldw	r3,128(sp)
  8022d4:	d8801f17 	ldw	r2,124(sp)
  8022d8:	da000404 	addi	r8,sp,16
  8022dc:	d9403317 	ldw	r5,204(sp)
  8022e0:	10800044 	addi	r2,r2,1
  8022e4:	44000015 	stw	r16,0(r8)
  8022e8:	28c7883a 	add	r3,r5,r3
  8022ec:	003b5b06 	br	80105c <__alt_mem_onchip_memory2+0xff7e105c>
  8022f0:	01002074 	movhi	r4,129
  8022f4:	2101d684 	addi	r4,r4,1882
  8022f8:	d9003515 	stw	r4,212(sp)
  8022fc:	003af206 	br	800ec8 <__alt_mem_onchip_memory2+0xff7e0ec8>
  802300:	013fffc4 	movi	r4,-1
  802304:	003a0806 	br	800b28 <__alt_mem_onchip_memory2+0xff7e0b28>
  802308:	0023883a 	mov	r17,zero
  80230c:	003d9d06 	br	801984 <__alt_mem_onchip_memory2+0xff7e1984>
  802310:	d9002d17 	ldw	r4,180(sp)
  802314:	d9801e04 	addi	r6,sp,120
  802318:	b80b883a 	mov	r5,r23
  80231c:	08080300 	call	808030 <__sprint_r>
  802320:	1039d31e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  802324:	d8c02017 	ldw	r3,128(sp)
  802328:	da000404 	addi	r8,sp,16
  80232c:	003d9406 	br	801980 <__alt_mem_onchip_memory2+0xff7e1980>
  802330:	01002074 	movhi	r4,129
  802334:	2101d284 	addi	r4,r4,1866
  802338:	d9002c15 	stw	r4,176(sp)
  80233c:	d9002c17 	ldw	r4,176(sp)
  802340:	1c47883a 	add	r3,r3,r17
  802344:	10800044 	addi	r2,r2,1
  802348:	41000015 	stw	r4,0(r8)
  80234c:	44400115 	stw	r17,4(r8)
  802350:	d8c02015 	stw	r3,128(sp)
  802354:	d8801f15 	stw	r2,124(sp)
  802358:	010001c4 	movi	r4,7
  80235c:	20bfd716 	blt	r4,r2,8022bc <__alt_mem_onchip_memory2+0xff7e22bc>
  802360:	42000204 	addi	r8,r8,8
  802364:	003fdd06 	br	8022dc <__alt_mem_onchip_memory2+0xff7e22dc>
  802368:	d9002d17 	ldw	r4,180(sp)
  80236c:	d9801e04 	addi	r6,sp,120
  802370:	b80b883a 	mov	r5,r23
  802374:	08080300 	call	808030 <__sprint_r>
  802378:	1039bd1e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  80237c:	d8802617 	ldw	r2,152(sp)
  802380:	d8c02017 	ldw	r3,128(sp)
  802384:	da000404 	addi	r8,sp,16
  802388:	003e1006 	br	801bcc <__alt_mem_onchip_memory2+0xff7e1bcc>
  80238c:	00800044 	movi	r2,1
  802390:	10803fcc 	andi	r2,r2,255
  802394:	00c00044 	movi	r3,1
  802398:	10fa0d26 	beq	r2,r3,800bd0 <__alt_mem_onchip_memory2+0xff7e0bd0>
  80239c:	00c00084 	movi	r3,2
  8023a0:	10fbaf26 	beq	r2,r3,801260 <__alt_mem_onchip_memory2+0xff7e1260>
  8023a4:	003a6d06 	br	800d5c <__alt_mem_onchip_memory2+0xff7e0d5c>
  8023a8:	01002074 	movhi	r4,129
  8023ac:	2101d684 	addi	r4,r4,1882
  8023b0:	d9003515 	stw	r4,212(sp)
  8023b4:	003b5406 	br	801108 <__alt_mem_onchip_memory2+0xff7e1108>
  8023b8:	d8802a17 	ldw	r2,168(sp)
  8023bc:	00c00184 	movi	r3,6
  8023c0:	1880012e 	bgeu	r3,r2,8023c8 <___vfprintf_internal_r+0x1d68>
  8023c4:	1805883a 	mov	r2,r3
  8023c8:	d8802b15 	stw	r2,172(sp)
  8023cc:	1000ef16 	blt	r2,zero,80278c <___vfprintf_internal_r+0x212c>
  8023d0:	04002074 	movhi	r16,129
  8023d4:	d8802915 	stw	r2,164(sp)
  8023d8:	dcc02e15 	stw	r19,184(sp)
  8023dc:	d8002a15 	stw	zero,168(sp)
  8023e0:	d8003215 	stw	zero,200(sp)
  8023e4:	8401d004 	addi	r16,r16,1856
  8023e8:	0039883a 	mov	fp,zero
  8023ec:	003a8006 	br	800df0 <__alt_mem_onchip_memory2+0xff7e0df0>
  8023f0:	0021883a 	mov	r16,zero
  8023f4:	003e0706 	br	801c14 <__alt_mem_onchip_memory2+0xff7e1c14>
  8023f8:	d9002d17 	ldw	r4,180(sp)
  8023fc:	d9801e04 	addi	r6,sp,120
  802400:	b80b883a 	mov	r5,r23
  802404:	08080300 	call	808030 <__sprint_r>
  802408:	1039991e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  80240c:	d8802617 	ldw	r2,152(sp)
  802410:	d9403317 	ldw	r5,204(sp)
  802414:	d8c02017 	ldw	r3,128(sp)
  802418:	da000404 	addi	r8,sp,16
  80241c:	2885c83a 	sub	r2,r5,r2
  802420:	003dfb06 	br	801c10 <__alt_mem_onchip_memory2+0xff7e1c10>
  802424:	9080004c 	andi	r2,r18,1
  802428:	103e8f1e 	bne	r2,zero,801e68 <__alt_mem_onchip_memory2+0xff7e1e68>
  80242c:	d8802117 	ldw	r2,132(sp)
  802430:	003e9e06 	br	801eac <__alt_mem_onchip_memory2+0xff7e1eac>
  802434:	1025883a 	mov	r18,r2
  802438:	0039883a 	mov	fp,zero
  80243c:	00800084 	movi	r2,2
  802440:	003fd306 	br	802390 <__alt_mem_onchip_memory2+0xff7e2390>
  802444:	07000b44 	movi	fp,45
  802448:	df002785 	stb	fp,158(sp)
  80244c:	003a1b06 	br	800cbc <__alt_mem_onchip_memory2+0xff7e0cbc>
  802450:	00c00b44 	movi	r3,45
  802454:	d8c02785 	stb	r3,158(sp)
  802458:	d8802915 	stw	r2,164(sp)
  80245c:	dc802c17 	ldw	r18,176(sp)
  802460:	d8002a15 	stw	zero,168(sp)
  802464:	07000b44 	movi	fp,45
  802468:	003a5e06 	br	800de4 <__alt_mem_onchip_memory2+0xff7e0de4>
  80246c:	04002074 	movhi	r16,129
  802470:	8401c504 	addi	r16,r16,1812
  802474:	003f4706 	br	802194 <__alt_mem_onchip_memory2+0xff7e2194>
  802478:	d9002e17 	ldw	r4,184(sp)
  80247c:	d9402f17 	ldw	r5,188(sp)
  802480:	20800017 	ldw	r2,0(r4)
  802484:	21000104 	addi	r4,r4,4
  802488:	d9002e15 	stw	r4,184(sp)
  80248c:	11400015 	stw	r5,0(r2)
  802490:	0038ab06 	br	800740 <__alt_mem_onchip_memory2+0xff7e0740>
  802494:	dd802617 	ldw	r22,152(sp)
  802498:	00bfff44 	movi	r2,-3
  80249c:	b0801c16 	blt	r22,r2,802510 <___vfprintf_internal_r+0x1eb0>
  8024a0:	d9402a17 	ldw	r5,168(sp)
  8024a4:	2d801a16 	blt	r5,r22,802510 <___vfprintf_internal_r+0x1eb0>
  8024a8:	dd803215 	stw	r22,200(sp)
  8024ac:	003e8906 	br	801ed4 <__alt_mem_onchip_memory2+0xff7e1ed4>
  8024b0:	01002074 	movhi	r4,129
  8024b4:	2101d284 	addi	r4,r4,1866
  8024b8:	d9002c15 	stw	r4,176(sp)
  8024bc:	003c9106 	br	801704 <__alt_mem_onchip_memory2+0xff7e1704>
  8024c0:	e005883a 	mov	r2,fp
  8024c4:	003e7906 	br	801eac <__alt_mem_onchip_memory2+0xff7e1eac>
  8024c8:	d9002a17 	ldw	r4,168(sp)
  8024cc:	df002783 	ldbu	fp,158(sp)
  8024d0:	dcc02e15 	stw	r19,184(sp)
  8024d4:	d9002915 	stw	r4,164(sp)
  8024d8:	d9002b15 	stw	r4,172(sp)
  8024dc:	d8002a15 	stw	zero,168(sp)
  8024e0:	d8003215 	stw	zero,200(sp)
  8024e4:	003a3b06 	br	800dd4 <__alt_mem_onchip_memory2+0xff7e0dd4>
  8024e8:	9080004c 	andi	r2,r18,1
  8024ec:	0039883a 	mov	fp,zero
  8024f0:	10000426 	beq	r2,zero,802504 <___vfprintf_internal_r+0x1ea4>
  8024f4:	00800c04 	movi	r2,48
  8024f8:	dc001dc4 	addi	r16,sp,119
  8024fc:	d8801dc5 	stb	r2,119(sp)
  802500:	003b6406 	br	801294 <__alt_mem_onchip_memory2+0xff7e1294>
  802504:	d8002b15 	stw	zero,172(sp)
  802508:	dc001e04 	addi	r16,sp,120
  80250c:	003a2b06 	br	800dbc <__alt_mem_onchip_memory2+0xff7e0dbc>
  802510:	8c7fff84 	addi	r17,r17,-2
  802514:	b5bfffc4 	addi	r22,r22,-1
  802518:	dd802615 	stw	r22,152(sp)
  80251c:	dc4022c5 	stb	r17,139(sp)
  802520:	b000bf16 	blt	r22,zero,802820 <___vfprintf_internal_r+0x21c0>
  802524:	00800ac4 	movi	r2,43
  802528:	d8802305 	stb	r2,140(sp)
  80252c:	00800244 	movi	r2,9
  802530:	15807016 	blt	r2,r22,8026f4 <___vfprintf_internal_r+0x2094>
  802534:	00800c04 	movi	r2,48
  802538:	b5800c04 	addi	r22,r22,48
  80253c:	d8802345 	stb	r2,141(sp)
  802540:	dd802385 	stb	r22,142(sp)
  802544:	d88023c4 	addi	r2,sp,143
  802548:	df0022c4 	addi	fp,sp,139
  80254c:	d8c03317 	ldw	r3,204(sp)
  802550:	1739c83a 	sub	fp,r2,fp
  802554:	d9003317 	ldw	r4,204(sp)
  802558:	e0c7883a 	add	r3,fp,r3
  80255c:	df003a15 	stw	fp,232(sp)
  802560:	d8c02b15 	stw	r3,172(sp)
  802564:	00800044 	movi	r2,1
  802568:	1100b30e 	bge	r2,r4,802838 <___vfprintf_internal_r+0x21d8>
  80256c:	d8c02b17 	ldw	r3,172(sp)
  802570:	18c00044 	addi	r3,r3,1
  802574:	d8c02b15 	stw	r3,172(sp)
  802578:	1805883a 	mov	r2,r3
  80257c:	1800ac16 	blt	r3,zero,802830 <___vfprintf_internal_r+0x21d0>
  802580:	d8003215 	stw	zero,200(sp)
  802584:	003e5d06 	br	801efc <__alt_mem_onchip_memory2+0xff7e1efc>
  802588:	d9002d17 	ldw	r4,180(sp)
  80258c:	d9801e04 	addi	r6,sp,120
  802590:	b80b883a 	mov	r5,r23
  802594:	08080300 	call	808030 <__sprint_r>
  802598:	1039351e 	bne	r2,zero,800a70 <__alt_mem_onchip_memory2+0xff7e0a70>
  80259c:	dc402617 	ldw	r17,152(sp)
  8025a0:	d8c02017 	ldw	r3,128(sp)
  8025a4:	d8801f17 	ldw	r2,124(sp)
  8025a8:	da000404 	addi	r8,sp,16
  8025ac:	003ed606 	br	802108 <__alt_mem_onchip_memory2+0xff7e2108>
  8025b0:	182b883a 	mov	r21,r3
  8025b4:	d8002a15 	stw	zero,168(sp)
  8025b8:	00388c06 	br	8007ec <__alt_mem_onchip_memory2+0xff7e07ec>
  8025bc:	d8802a17 	ldw	r2,168(sp)
  8025c0:	103e071e 	bne	r2,zero,801de0 <__alt_mem_onchip_memory2+0xff7e1de0>
  8025c4:	dc002a15 	stw	r16,168(sp)
  8025c8:	003e0506 	br	801de0 <__alt_mem_onchip_memory2+0xff7e1de0>
  8025cc:	d9002a17 	ldw	r4,168(sp)
  8025d0:	20c00044 	addi	r3,r4,1
  8025d4:	003e0f06 	br	801e14 <__alt_mem_onchip_memory2+0xff7e1e14>
  8025d8:	01400184 	movi	r5,6
  8025dc:	d9402a15 	stw	r5,168(sp)
  8025e0:	003dff06 	br	801de0 <__alt_mem_onchip_memory2+0xff7e1de0>
  8025e4:	d8802104 	addi	r2,sp,132
  8025e8:	d8800315 	stw	r2,12(sp)
  8025ec:	d8802504 	addi	r2,sp,148
  8025f0:	d8800215 	stw	r2,8(sp)
  8025f4:	d8802604 	addi	r2,sp,152
  8025f8:	d8800115 	stw	r2,4(sp)
  8025fc:	d8802a17 	ldw	r2,168(sp)
  802600:	d9403617 	ldw	r5,216(sp)
  802604:	d9002d17 	ldw	r4,180(sp)
  802608:	d8800015 	stw	r2,0(sp)
  80260c:	01c000c4 	movi	r7,3
  802610:	980d883a 	mov	r6,r19
  802614:	da003d15 	stw	r8,244(sp)
  802618:	0802d900 	call	802d90 <_dtoa_r>
  80261c:	d8c02a17 	ldw	r3,168(sp)
  802620:	da003d17 	ldw	r8,244(sp)
  802624:	1021883a 	mov	r16,r2
  802628:	10f9883a 	add	fp,r2,r3
  80262c:	81000007 	ldb	r4,0(r16)
  802630:	00800c04 	movi	r2,48
  802634:	20805e26 	beq	r4,r2,8027b0 <___vfprintf_internal_r+0x2150>
  802638:	d8c02617 	ldw	r3,152(sp)
  80263c:	e0f9883a 	add	fp,fp,r3
  802640:	003e0a06 	br	801e6c <__alt_mem_onchip_memory2+0xff7e1e6c>
  802644:	00c00b44 	movi	r3,45
  802648:	24e0003c 	xorhi	r19,r4,32768
  80264c:	d8c02905 	stb	r3,164(sp)
  802650:	003de906 	br	801df8 <__alt_mem_onchip_memory2+0xff7e1df8>
  802654:	d8c03217 	ldw	r3,200(sp)
  802658:	00c07a0e 	bge	zero,r3,802844 <___vfprintf_internal_r+0x21e4>
  80265c:	00800044 	movi	r2,1
  802660:	d9003317 	ldw	r4,204(sp)
  802664:	1105883a 	add	r2,r2,r4
  802668:	d8802b15 	stw	r2,172(sp)
  80266c:	10004e16 	blt	r2,zero,8027a8 <___vfprintf_internal_r+0x2148>
  802670:	044019c4 	movi	r17,103
  802674:	003e2106 	br	801efc <__alt_mem_onchip_memory2+0xff7e1efc>
  802678:	d9002a17 	ldw	r4,168(sp)
  80267c:	d8802104 	addi	r2,sp,132
  802680:	d8800315 	stw	r2,12(sp)
  802684:	d9000015 	stw	r4,0(sp)
  802688:	d8802504 	addi	r2,sp,148
  80268c:	d9403617 	ldw	r5,216(sp)
  802690:	d9002d17 	ldw	r4,180(sp)
  802694:	d8800215 	stw	r2,8(sp)
  802698:	d8802604 	addi	r2,sp,152
  80269c:	d8800115 	stw	r2,4(sp)
  8026a0:	01c000c4 	movi	r7,3
  8026a4:	980d883a 	mov	r6,r19
  8026a8:	da003d15 	stw	r8,244(sp)
  8026ac:	0802d900 	call	802d90 <_dtoa_r>
  8026b0:	d8c02a17 	ldw	r3,168(sp)
  8026b4:	da003d17 	ldw	r8,244(sp)
  8026b8:	1021883a 	mov	r16,r2
  8026bc:	00801184 	movi	r2,70
  8026c0:	80f9883a 	add	fp,r16,r3
  8026c4:	88bfd926 	beq	r17,r2,80262c <__alt_mem_onchip_memory2+0xff7e262c>
  8026c8:	003de806 	br	801e6c <__alt_mem_onchip_memory2+0xff7e1e6c>
  8026cc:	d9002a17 	ldw	r4,168(sp)
  8026d0:	00c04d0e 	bge	zero,r3,802808 <___vfprintf_internal_r+0x21a8>
  8026d4:	2000441e 	bne	r4,zero,8027e8 <___vfprintf_internal_r+0x2188>
  8026d8:	9480004c 	andi	r18,r18,1
  8026dc:	9000421e 	bne	r18,zero,8027e8 <___vfprintf_internal_r+0x2188>
  8026e0:	1805883a 	mov	r2,r3
  8026e4:	18006f16 	blt	r3,zero,8028a4 <___vfprintf_internal_r+0x2244>
  8026e8:	d8c03217 	ldw	r3,200(sp)
  8026ec:	d8c02b15 	stw	r3,172(sp)
  8026f0:	003e0206 	br	801efc <__alt_mem_onchip_memory2+0xff7e1efc>
  8026f4:	df0022c4 	addi	fp,sp,139
  8026f8:	dc002a15 	stw	r16,168(sp)
  8026fc:	4027883a 	mov	r19,r8
  802700:	e021883a 	mov	r16,fp
  802704:	b009883a 	mov	r4,r22
  802708:	01400284 	movi	r5,10
  80270c:	080abbc0 	call	80abbc <__modsi3>
  802710:	10800c04 	addi	r2,r2,48
  802714:	843fffc4 	addi	r16,r16,-1
  802718:	b009883a 	mov	r4,r22
  80271c:	01400284 	movi	r5,10
  802720:	80800005 	stb	r2,0(r16)
  802724:	080ab380 	call	80ab38 <__divsi3>
  802728:	102d883a 	mov	r22,r2
  80272c:	00800244 	movi	r2,9
  802730:	15bff416 	blt	r2,r22,802704 <__alt_mem_onchip_memory2+0xff7e2704>
  802734:	9811883a 	mov	r8,r19
  802738:	b0800c04 	addi	r2,r22,48
  80273c:	8027883a 	mov	r19,r16
  802740:	997fffc4 	addi	r5,r19,-1
  802744:	98bfffc5 	stb	r2,-1(r19)
  802748:	dc002a17 	ldw	r16,168(sp)
  80274c:	2f006d2e 	bgeu	r5,fp,802904 <___vfprintf_internal_r+0x22a4>
  802750:	d9c02384 	addi	r7,sp,142
  802754:	3ccfc83a 	sub	r7,r7,r19
  802758:	d9002344 	addi	r4,sp,141
  80275c:	e1cf883a 	add	r7,fp,r7
  802760:	00000106 	br	802768 <___vfprintf_internal_r+0x2108>
  802764:	28800003 	ldbu	r2,0(r5)
  802768:	20800005 	stb	r2,0(r4)
  80276c:	21000044 	addi	r4,r4,1
  802770:	29400044 	addi	r5,r5,1
  802774:	393ffb1e 	bne	r7,r4,802764 <__alt_mem_onchip_memory2+0xff7e2764>
  802778:	d8802304 	addi	r2,sp,140
  80277c:	14c5c83a 	sub	r2,r2,r19
  802780:	d8c02344 	addi	r3,sp,141
  802784:	1885883a 	add	r2,r3,r2
  802788:	003f7006 	br	80254c <__alt_mem_onchip_memory2+0xff7e254c>
  80278c:	0005883a 	mov	r2,zero
  802790:	003f0f06 	br	8023d0 <__alt_mem_onchip_memory2+0xff7e23d0>
  802794:	d8c03217 	ldw	r3,200(sp)
  802798:	18c00044 	addi	r3,r3,1
  80279c:	d8c02b15 	stw	r3,172(sp)
  8027a0:	1805883a 	mov	r2,r3
  8027a4:	183fb20e 	bge	r3,zero,802670 <__alt_mem_onchip_memory2+0xff7e2670>
  8027a8:	0005883a 	mov	r2,zero
  8027ac:	003fb006 	br	802670 <__alt_mem_onchip_memory2+0xff7e2670>
  8027b0:	d9003617 	ldw	r4,216(sp)
  8027b4:	000d883a 	mov	r6,zero
  8027b8:	000f883a 	mov	r7,zero
  8027bc:	980b883a 	mov	r5,r19
  8027c0:	d8c03c15 	stw	r3,240(sp)
  8027c4:	da003d15 	stw	r8,244(sp)
  8027c8:	080bf900 	call	80bf90 <__eqdf2>
  8027cc:	d8c03c17 	ldw	r3,240(sp)
  8027d0:	da003d17 	ldw	r8,244(sp)
  8027d4:	103f9826 	beq	r2,zero,802638 <__alt_mem_onchip_memory2+0xff7e2638>
  8027d8:	00800044 	movi	r2,1
  8027dc:	10c7c83a 	sub	r3,r2,r3
  8027e0:	d8c02615 	stw	r3,152(sp)
  8027e4:	003f9506 	br	80263c <__alt_mem_onchip_memory2+0xff7e263c>
  8027e8:	d9002a17 	ldw	r4,168(sp)
  8027ec:	d8c03217 	ldw	r3,200(sp)
  8027f0:	20800044 	addi	r2,r4,1
  8027f4:	1885883a 	add	r2,r3,r2
  8027f8:	d8802b15 	stw	r2,172(sp)
  8027fc:	103dbf0e 	bge	r2,zero,801efc <__alt_mem_onchip_memory2+0xff7e1efc>
  802800:	0005883a 	mov	r2,zero
  802804:	003dbd06 	br	801efc <__alt_mem_onchip_memory2+0xff7e1efc>
  802808:	2000201e 	bne	r4,zero,80288c <___vfprintf_internal_r+0x222c>
  80280c:	9480004c 	andi	r18,r18,1
  802810:	90001e1e 	bne	r18,zero,80288c <___vfprintf_internal_r+0x222c>
  802814:	00800044 	movi	r2,1
  802818:	d8802b15 	stw	r2,172(sp)
  80281c:	003db706 	br	801efc <__alt_mem_onchip_memory2+0xff7e1efc>
  802820:	00800b44 	movi	r2,45
  802824:	05adc83a 	sub	r22,zero,r22
  802828:	d8802305 	stb	r2,140(sp)
  80282c:	003f3f06 	br	80252c <__alt_mem_onchip_memory2+0xff7e252c>
  802830:	0005883a 	mov	r2,zero
  802834:	003f5206 	br	802580 <__alt_mem_onchip_memory2+0xff7e2580>
  802838:	90a4703a 	and	r18,r18,r2
  80283c:	903f4e26 	beq	r18,zero,802578 <__alt_mem_onchip_memory2+0xff7e2578>
  802840:	003f4a06 	br	80256c <__alt_mem_onchip_memory2+0xff7e256c>
  802844:	00800084 	movi	r2,2
  802848:	10c5c83a 	sub	r2,r2,r3
  80284c:	003f8406 	br	802660 <__alt_mem_onchip_memory2+0xff7e2660>
  802850:	d9402e17 	ldw	r5,184(sp)
  802854:	d9002e17 	ldw	r4,184(sp)
  802858:	ac400043 	ldbu	r17,1(r21)
  80285c:	29400017 	ldw	r5,0(r5)
  802860:	20800104 	addi	r2,r4,4
  802864:	d8802e15 	stw	r2,184(sp)
  802868:	d9402a15 	stw	r5,168(sp)
  80286c:	182b883a 	mov	r21,r3
  802870:	283e7b0e 	bge	r5,zero,802260 <__alt_mem_onchip_memory2+0xff7e2260>
  802874:	8c403fcc 	andi	r17,r17,255
  802878:	017fffc4 	movi	r5,-1
  80287c:	8c40201c 	xori	r17,r17,128
  802880:	d9402a15 	stw	r5,168(sp)
  802884:	8c7fe004 	addi	r17,r17,-128
  802888:	0037d706 	br	8007e8 <__alt_mem_onchip_memory2+0xff7e07e8>
  80288c:	d8c02a17 	ldw	r3,168(sp)
  802890:	18c00084 	addi	r3,r3,2
  802894:	d8c02b15 	stw	r3,172(sp)
  802898:	1805883a 	mov	r2,r3
  80289c:	183d970e 	bge	r3,zero,801efc <__alt_mem_onchip_memory2+0xff7e1efc>
  8028a0:	003fd706 	br	802800 <__alt_mem_onchip_memory2+0xff7e2800>
  8028a4:	0005883a 	mov	r2,zero
  8028a8:	003f8f06 	br	8026e8 <__alt_mem_onchip_memory2+0xff7e26e8>
  8028ac:	9080004c 	andi	r2,r18,1
  8028b0:	103f821e 	bne	r2,zero,8026bc <__alt_mem_onchip_memory2+0xff7e26bc>
  8028b4:	d8802117 	ldw	r2,132(sp)
  8028b8:	1405c83a 	sub	r2,r2,r16
  8028bc:	d8803315 	stw	r2,204(sp)
  8028c0:	b47ef426 	beq	r22,r17,802494 <__alt_mem_onchip_memory2+0xff7e2494>
  8028c4:	dd802617 	ldw	r22,152(sp)
  8028c8:	003f1206 	br	802514 <__alt_mem_onchip_memory2+0xff7e2514>
  8028cc:	d8c02b03 	ldbu	r3,172(sp)
  8028d0:	d8c02785 	stb	r3,158(sp)
  8028d4:	0038df06 	br	800c54 <__alt_mem_onchip_memory2+0xff7e0c54>
  8028d8:	d8c02b03 	ldbu	r3,172(sp)
  8028dc:	d8c02785 	stb	r3,158(sp)
  8028e0:	0038aa06 	br	800b8c <__alt_mem_onchip_memory2+0xff7e0b8c>
  8028e4:	d8c02b03 	ldbu	r3,172(sp)
  8028e8:	d8c02785 	stb	r3,158(sp)
  8028ec:	003a4306 	br	8011fc <__alt_mem_onchip_memory2+0xff7e11fc>
  8028f0:	d8c02b03 	ldbu	r3,172(sp)
  8028f4:	d8c02785 	stb	r3,158(sp)
  8028f8:	003af506 	br	8014d0 <__alt_mem_onchip_memory2+0xff7e14d0>
  8028fc:	0005883a 	mov	r2,zero
  802900:	003d7b06 	br	801ef0 <__alt_mem_onchip_memory2+0xff7e1ef0>
  802904:	d8802344 	addi	r2,sp,141
  802908:	003f1006 	br	80254c <__alt_mem_onchip_memory2+0xff7e254c>
  80290c:	d8c02b03 	ldbu	r3,172(sp)
  802910:	d8c02785 	stb	r3,158(sp)
  802914:	0038fd06 	br	800d0c <__alt_mem_onchip_memory2+0xff7e0d0c>
  802918:	d8c02b03 	ldbu	r3,172(sp)
  80291c:	d8c02785 	stb	r3,158(sp)
  802920:	003a9706 	br	801380 <__alt_mem_onchip_memory2+0xff7e1380>
  802924:	d8c02b03 	ldbu	r3,172(sp)
  802928:	d8c02785 	stb	r3,158(sp)
  80292c:	003a1806 	br	801190 <__alt_mem_onchip_memory2+0xff7e1190>
  802930:	d8c02b03 	ldbu	r3,172(sp)
  802934:	d8c02785 	stb	r3,158(sp)
  802938:	003abe06 	br	801434 <__alt_mem_onchip_memory2+0xff7e1434>

0080293c <__vfprintf_internal>:
  80293c:	00802074 	movhi	r2,129
  802940:	10895e04 	addi	r2,r2,9592
  802944:	300f883a 	mov	r7,r6
  802948:	280d883a 	mov	r6,r5
  80294c:	200b883a 	mov	r5,r4
  802950:	11000017 	ldw	r4,0(r2)
  802954:	08006601 	jmpi	800660 <___vfprintf_internal_r>

00802958 <__sbprintf>:
  802958:	2880030b 	ldhu	r2,12(r5)
  80295c:	2ac01917 	ldw	r11,100(r5)
  802960:	2a80038b 	ldhu	r10,14(r5)
  802964:	2a400717 	ldw	r9,28(r5)
  802968:	2a000917 	ldw	r8,36(r5)
  80296c:	defee204 	addi	sp,sp,-1144
  802970:	00c10004 	movi	r3,1024
  802974:	dc011a15 	stw	r16,1128(sp)
  802978:	10bfff4c 	andi	r2,r2,65533
  80297c:	2821883a 	mov	r16,r5
  802980:	d8cb883a 	add	r5,sp,r3
  802984:	dc811c15 	stw	r18,1136(sp)
  802988:	dc411b15 	stw	r17,1132(sp)
  80298c:	dfc11d15 	stw	ra,1140(sp)
  802990:	2025883a 	mov	r18,r4
  802994:	d881030d 	sth	r2,1036(sp)
  802998:	dac11915 	stw	r11,1124(sp)
  80299c:	da81038d 	sth	r10,1038(sp)
  8029a0:	da410715 	stw	r9,1052(sp)
  8029a4:	da010915 	stw	r8,1060(sp)
  8029a8:	dec10015 	stw	sp,1024(sp)
  8029ac:	dec10415 	stw	sp,1040(sp)
  8029b0:	d8c10215 	stw	r3,1032(sp)
  8029b4:	d8c10515 	stw	r3,1044(sp)
  8029b8:	d8010615 	stw	zero,1048(sp)
  8029bc:	08006600 	call	800660 <___vfprintf_internal_r>
  8029c0:	1023883a 	mov	r17,r2
  8029c4:	10000416 	blt	r2,zero,8029d8 <__sbprintf+0x80>
  8029c8:	d9410004 	addi	r5,sp,1024
  8029cc:	9009883a 	mov	r4,r18
  8029d0:	08046340 	call	804634 <_fflush_r>
  8029d4:	10000d1e 	bne	r2,zero,802a0c <__sbprintf+0xb4>
  8029d8:	d881030b 	ldhu	r2,1036(sp)
  8029dc:	1080100c 	andi	r2,r2,64
  8029e0:	10000326 	beq	r2,zero,8029f0 <__sbprintf+0x98>
  8029e4:	8080030b 	ldhu	r2,12(r16)
  8029e8:	10801014 	ori	r2,r2,64
  8029ec:	8080030d 	sth	r2,12(r16)
  8029f0:	8805883a 	mov	r2,r17
  8029f4:	dfc11d17 	ldw	ra,1140(sp)
  8029f8:	dc811c17 	ldw	r18,1136(sp)
  8029fc:	dc411b17 	ldw	r17,1132(sp)
  802a00:	dc011a17 	ldw	r16,1128(sp)
  802a04:	dec11e04 	addi	sp,sp,1144
  802a08:	f800283a 	ret
  802a0c:	047fffc4 	movi	r17,-1
  802a10:	003ff106 	br	8029d8 <__alt_mem_onchip_memory2+0xff7e29d8>

00802a14 <__swsetup_r>:
  802a14:	00802074 	movhi	r2,129
  802a18:	defffd04 	addi	sp,sp,-12
  802a1c:	10895e04 	addi	r2,r2,9592
  802a20:	dc400115 	stw	r17,4(sp)
  802a24:	2023883a 	mov	r17,r4
  802a28:	11000017 	ldw	r4,0(r2)
  802a2c:	dc000015 	stw	r16,0(sp)
  802a30:	dfc00215 	stw	ra,8(sp)
  802a34:	2821883a 	mov	r16,r5
  802a38:	20000226 	beq	r4,zero,802a44 <__swsetup_r+0x30>
  802a3c:	20800e17 	ldw	r2,56(r4)
  802a40:	10003126 	beq	r2,zero,802b08 <__swsetup_r+0xf4>
  802a44:	8080030b 	ldhu	r2,12(r16)
  802a48:	10c0020c 	andi	r3,r2,8
  802a4c:	1009883a 	mov	r4,r2
  802a50:	18000f26 	beq	r3,zero,802a90 <__swsetup_r+0x7c>
  802a54:	80c00417 	ldw	r3,16(r16)
  802a58:	18001526 	beq	r3,zero,802ab0 <__swsetup_r+0x9c>
  802a5c:	1100004c 	andi	r4,r2,1
  802a60:	20001c1e 	bne	r4,zero,802ad4 <__swsetup_r+0xc0>
  802a64:	1080008c 	andi	r2,r2,2
  802a68:	1000291e 	bne	r2,zero,802b10 <__swsetup_r+0xfc>
  802a6c:	80800517 	ldw	r2,20(r16)
  802a70:	80800215 	stw	r2,8(r16)
  802a74:	18001c26 	beq	r3,zero,802ae8 <__swsetup_r+0xd4>
  802a78:	0005883a 	mov	r2,zero
  802a7c:	dfc00217 	ldw	ra,8(sp)
  802a80:	dc400117 	ldw	r17,4(sp)
  802a84:	dc000017 	ldw	r16,0(sp)
  802a88:	dec00304 	addi	sp,sp,12
  802a8c:	f800283a 	ret
  802a90:	2080040c 	andi	r2,r4,16
  802a94:	10002e26 	beq	r2,zero,802b50 <__swsetup_r+0x13c>
  802a98:	2080010c 	andi	r2,r4,4
  802a9c:	10001e1e 	bne	r2,zero,802b18 <__swsetup_r+0x104>
  802aa0:	80c00417 	ldw	r3,16(r16)
  802aa4:	20800214 	ori	r2,r4,8
  802aa8:	8080030d 	sth	r2,12(r16)
  802aac:	183feb1e 	bne	r3,zero,802a5c <__alt_mem_onchip_memory2+0xff7e2a5c>
  802ab0:	1100a00c 	andi	r4,r2,640
  802ab4:	01408004 	movi	r5,512
  802ab8:	217fe826 	beq	r4,r5,802a5c <__alt_mem_onchip_memory2+0xff7e2a5c>
  802abc:	800b883a 	mov	r5,r16
  802ac0:	8809883a 	mov	r4,r17
  802ac4:	08055d00 	call	8055d0 <__smakebuf_r>
  802ac8:	8080030b 	ldhu	r2,12(r16)
  802acc:	80c00417 	ldw	r3,16(r16)
  802ad0:	003fe206 	br	802a5c <__alt_mem_onchip_memory2+0xff7e2a5c>
  802ad4:	80800517 	ldw	r2,20(r16)
  802ad8:	80000215 	stw	zero,8(r16)
  802adc:	0085c83a 	sub	r2,zero,r2
  802ae0:	80800615 	stw	r2,24(r16)
  802ae4:	183fe41e 	bne	r3,zero,802a78 <__alt_mem_onchip_memory2+0xff7e2a78>
  802ae8:	80c0030b 	ldhu	r3,12(r16)
  802aec:	0005883a 	mov	r2,zero
  802af0:	1900200c 	andi	r4,r3,128
  802af4:	203fe126 	beq	r4,zero,802a7c <__alt_mem_onchip_memory2+0xff7e2a7c>
  802af8:	18c01014 	ori	r3,r3,64
  802afc:	80c0030d 	sth	r3,12(r16)
  802b00:	00bfffc4 	movi	r2,-1
  802b04:	003fdd06 	br	802a7c <__alt_mem_onchip_memory2+0xff7e2a7c>
  802b08:	0804a200 	call	804a20 <__sinit>
  802b0c:	003fcd06 	br	802a44 <__alt_mem_onchip_memory2+0xff7e2a44>
  802b10:	0005883a 	mov	r2,zero
  802b14:	003fd606 	br	802a70 <__alt_mem_onchip_memory2+0xff7e2a70>
  802b18:	81400c17 	ldw	r5,48(r16)
  802b1c:	28000626 	beq	r5,zero,802b38 <__swsetup_r+0x124>
  802b20:	80801004 	addi	r2,r16,64
  802b24:	28800326 	beq	r5,r2,802b34 <__swsetup_r+0x120>
  802b28:	8809883a 	mov	r4,r17
  802b2c:	0804b940 	call	804b94 <_free_r>
  802b30:	8100030b 	ldhu	r4,12(r16)
  802b34:	80000c15 	stw	zero,48(r16)
  802b38:	80c00417 	ldw	r3,16(r16)
  802b3c:	00bff6c4 	movi	r2,-37
  802b40:	1108703a 	and	r4,r2,r4
  802b44:	80000115 	stw	zero,4(r16)
  802b48:	80c00015 	stw	r3,0(r16)
  802b4c:	003fd506 	br	802aa4 <__alt_mem_onchip_memory2+0xff7e2aa4>
  802b50:	00800244 	movi	r2,9
  802b54:	88800015 	stw	r2,0(r17)
  802b58:	20801014 	ori	r2,r4,64
  802b5c:	8080030d 	sth	r2,12(r16)
  802b60:	00bfffc4 	movi	r2,-1
  802b64:	003fc506 	br	802a7c <__alt_mem_onchip_memory2+0xff7e2a7c>

00802b68 <quorem>:
  802b68:	defff204 	addi	sp,sp,-56
  802b6c:	ddc00b15 	stw	r23,44(sp)
  802b70:	20800417 	ldw	r2,16(r4)
  802b74:	2dc00417 	ldw	r23,16(r5)
  802b78:	dfc00d15 	stw	ra,52(sp)
  802b7c:	df000c15 	stw	fp,48(sp)
  802b80:	dd800a15 	stw	r22,40(sp)
  802b84:	dd400915 	stw	r21,36(sp)
  802b88:	dd000815 	stw	r20,32(sp)
  802b8c:	dcc00715 	stw	r19,28(sp)
  802b90:	dc800615 	stw	r18,24(sp)
  802b94:	dc400515 	stw	r17,20(sp)
  802b98:	dc000415 	stw	r16,16(sp)
  802b9c:	15c07a16 	blt	r2,r23,802d88 <quorem+0x220>
  802ba0:	bdffffc4 	addi	r23,r23,-1
  802ba4:	bde9883a 	add	r20,r23,r23
  802ba8:	28c00504 	addi	r3,r5,20
  802bac:	a529883a 	add	r20,r20,r20
  802bb0:	1d39883a 	add	fp,r3,r20
  802bb4:	24c00504 	addi	r19,r4,20
  802bb8:	d9400215 	stw	r5,8(sp)
  802bbc:	9d29883a 	add	r20,r19,r20
  802bc0:	e1400017 	ldw	r5,0(fp)
  802bc4:	d9000015 	stw	r4,0(sp)
  802bc8:	a1000017 	ldw	r4,0(r20)
  802bcc:	29400044 	addi	r5,r5,1
  802bd0:	d8c00115 	stw	r3,4(sp)
  802bd4:	dd000315 	stw	r20,12(sp)
  802bd8:	080ac300 	call	80ac30 <__udivsi3>
  802bdc:	1025883a 	mov	r18,r2
  802be0:	10003026 	beq	r2,zero,802ca4 <quorem+0x13c>
  802be4:	dc400117 	ldw	r17,4(sp)
  802be8:	9829883a 	mov	r20,r19
  802bec:	002d883a 	mov	r22,zero
  802bf0:	0021883a 	mov	r16,zero
  802bf4:	8d400017 	ldw	r21,0(r17)
  802bf8:	900b883a 	mov	r5,r18
  802bfc:	8c400104 	addi	r17,r17,4
  802c00:	a93fffcc 	andi	r4,r21,65535
  802c04:	080acec0 	call	80acec <__mulsi3>
  802c08:	a808d43a 	srli	r4,r21,16
  802c0c:	900b883a 	mov	r5,r18
  802c10:	15ad883a 	add	r22,r2,r22
  802c14:	080acec0 	call	80acec <__mulsi3>
  802c18:	a1000017 	ldw	r4,0(r20)
  802c1c:	b00cd43a 	srli	r6,r22,16
  802c20:	b0ffffcc 	andi	r3,r22,65535
  802c24:	217fffcc 	andi	r5,r4,65535
  802c28:	2c21883a 	add	r16,r5,r16
  802c2c:	80c7c83a 	sub	r3,r16,r3
  802c30:	2008d43a 	srli	r4,r4,16
  802c34:	1185883a 	add	r2,r2,r6
  802c38:	1821d43a 	srai	r16,r3,16
  802c3c:	117fffcc 	andi	r5,r2,65535
  802c40:	2149c83a 	sub	r4,r4,r5
  802c44:	2421883a 	add	r16,r4,r16
  802c48:	8008943a 	slli	r4,r16,16
  802c4c:	18ffffcc 	andi	r3,r3,65535
  802c50:	102cd43a 	srli	r22,r2,16
  802c54:	20c8b03a 	or	r4,r4,r3
  802c58:	a1000015 	stw	r4,0(r20)
  802c5c:	8021d43a 	srai	r16,r16,16
  802c60:	a5000104 	addi	r20,r20,4
  802c64:	e47fe32e 	bgeu	fp,r17,802bf4 <__alt_mem_onchip_memory2+0xff7e2bf4>
  802c68:	d8c00317 	ldw	r3,12(sp)
  802c6c:	18800017 	ldw	r2,0(r3)
  802c70:	10000c1e 	bne	r2,zero,802ca4 <quorem+0x13c>
  802c74:	18bfff04 	addi	r2,r3,-4
  802c78:	9880082e 	bgeu	r19,r2,802c9c <quorem+0x134>
  802c7c:	18ffff17 	ldw	r3,-4(r3)
  802c80:	18000326 	beq	r3,zero,802c90 <quorem+0x128>
  802c84:	00000506 	br	802c9c <quorem+0x134>
  802c88:	10c00017 	ldw	r3,0(r2)
  802c8c:	1800031e 	bne	r3,zero,802c9c <quorem+0x134>
  802c90:	10bfff04 	addi	r2,r2,-4
  802c94:	bdffffc4 	addi	r23,r23,-1
  802c98:	98bffb36 	bltu	r19,r2,802c88 <__alt_mem_onchip_memory2+0xff7e2c88>
  802c9c:	d8c00017 	ldw	r3,0(sp)
  802ca0:	1dc00415 	stw	r23,16(r3)
  802ca4:	d9400217 	ldw	r5,8(sp)
  802ca8:	d9000017 	ldw	r4,0(sp)
  802cac:	0806dcc0 	call	806dcc <__mcmp>
  802cb0:	10002816 	blt	r2,zero,802d54 <quorem+0x1ec>
  802cb4:	dc400117 	ldw	r17,4(sp)
  802cb8:	94800044 	addi	r18,r18,1
  802cbc:	980d883a 	mov	r6,r19
  802cc0:	0007883a 	mov	r3,zero
  802cc4:	31000017 	ldw	r4,0(r6)
  802cc8:	89400017 	ldw	r5,0(r17)
  802ccc:	31800104 	addi	r6,r6,4
  802cd0:	20bfffcc 	andi	r2,r4,65535
  802cd4:	10c7883a 	add	r3,r2,r3
  802cd8:	28bfffcc 	andi	r2,r5,65535
  802cdc:	1885c83a 	sub	r2,r3,r2
  802ce0:	280ad43a 	srli	r5,r5,16
  802ce4:	2008d43a 	srli	r4,r4,16
  802ce8:	1007d43a 	srai	r3,r2,16
  802cec:	10bfffcc 	andi	r2,r2,65535
  802cf0:	2149c83a 	sub	r4,r4,r5
  802cf4:	20c9883a 	add	r4,r4,r3
  802cf8:	200a943a 	slli	r5,r4,16
  802cfc:	8c400104 	addi	r17,r17,4
  802d00:	2007d43a 	srai	r3,r4,16
  802d04:	2884b03a 	or	r2,r5,r2
  802d08:	30bfff15 	stw	r2,-4(r6)
  802d0c:	e47fed2e 	bgeu	fp,r17,802cc4 <__alt_mem_onchip_memory2+0xff7e2cc4>
  802d10:	bdc5883a 	add	r2,r23,r23
  802d14:	1085883a 	add	r2,r2,r2
  802d18:	9887883a 	add	r3,r19,r2
  802d1c:	18800017 	ldw	r2,0(r3)
  802d20:	10000c1e 	bne	r2,zero,802d54 <quorem+0x1ec>
  802d24:	18bfff04 	addi	r2,r3,-4
  802d28:	9880082e 	bgeu	r19,r2,802d4c <quorem+0x1e4>
  802d2c:	18ffff17 	ldw	r3,-4(r3)
  802d30:	18000326 	beq	r3,zero,802d40 <quorem+0x1d8>
  802d34:	00000506 	br	802d4c <quorem+0x1e4>
  802d38:	10c00017 	ldw	r3,0(r2)
  802d3c:	1800031e 	bne	r3,zero,802d4c <quorem+0x1e4>
  802d40:	10bfff04 	addi	r2,r2,-4
  802d44:	bdffffc4 	addi	r23,r23,-1
  802d48:	98bffb36 	bltu	r19,r2,802d38 <__alt_mem_onchip_memory2+0xff7e2d38>
  802d4c:	d8c00017 	ldw	r3,0(sp)
  802d50:	1dc00415 	stw	r23,16(r3)
  802d54:	9005883a 	mov	r2,r18
  802d58:	dfc00d17 	ldw	ra,52(sp)
  802d5c:	df000c17 	ldw	fp,48(sp)
  802d60:	ddc00b17 	ldw	r23,44(sp)
  802d64:	dd800a17 	ldw	r22,40(sp)
  802d68:	dd400917 	ldw	r21,36(sp)
  802d6c:	dd000817 	ldw	r20,32(sp)
  802d70:	dcc00717 	ldw	r19,28(sp)
  802d74:	dc800617 	ldw	r18,24(sp)
  802d78:	dc400517 	ldw	r17,20(sp)
  802d7c:	dc000417 	ldw	r16,16(sp)
  802d80:	dec00e04 	addi	sp,sp,56
  802d84:	f800283a 	ret
  802d88:	0005883a 	mov	r2,zero
  802d8c:	003ff206 	br	802d58 <__alt_mem_onchip_memory2+0xff7e2d58>

00802d90 <_dtoa_r>:
  802d90:	20801017 	ldw	r2,64(r4)
  802d94:	deffde04 	addi	sp,sp,-136
  802d98:	df002015 	stw	fp,128(sp)
  802d9c:	dcc01b15 	stw	r19,108(sp)
  802da0:	dc801a15 	stw	r18,104(sp)
  802da4:	dc401915 	stw	r17,100(sp)
  802da8:	dc001815 	stw	r16,96(sp)
  802dac:	dfc02115 	stw	ra,132(sp)
  802db0:	ddc01f15 	stw	r23,124(sp)
  802db4:	dd801e15 	stw	r22,120(sp)
  802db8:	dd401d15 	stw	r21,116(sp)
  802dbc:	dd001c15 	stw	r20,112(sp)
  802dc0:	d9c00315 	stw	r7,12(sp)
  802dc4:	2039883a 	mov	fp,r4
  802dc8:	3023883a 	mov	r17,r6
  802dcc:	2825883a 	mov	r18,r5
  802dd0:	dc002417 	ldw	r16,144(sp)
  802dd4:	3027883a 	mov	r19,r6
  802dd8:	10000826 	beq	r2,zero,802dfc <_dtoa_r+0x6c>
  802ddc:	21801117 	ldw	r6,68(r4)
  802de0:	00c00044 	movi	r3,1
  802de4:	100b883a 	mov	r5,r2
  802de8:	1986983a 	sll	r3,r3,r6
  802dec:	11800115 	stw	r6,4(r2)
  802df0:	10c00215 	stw	r3,8(r2)
  802df4:	08064f00 	call	8064f0 <_Bfree>
  802df8:	e0001015 	stw	zero,64(fp)
  802dfc:	88002e16 	blt	r17,zero,802eb8 <_dtoa_r+0x128>
  802e00:	80000015 	stw	zero,0(r16)
  802e04:	889ffc2c 	andhi	r2,r17,32752
  802e08:	00dffc34 	movhi	r3,32752
  802e0c:	10c01c26 	beq	r2,r3,802e80 <_dtoa_r+0xf0>
  802e10:	000d883a 	mov	r6,zero
  802e14:	000f883a 	mov	r7,zero
  802e18:	9009883a 	mov	r4,r18
  802e1c:	980b883a 	mov	r5,r19
  802e20:	080bf900 	call	80bf90 <__eqdf2>
  802e24:	10002b1e 	bne	r2,zero,802ed4 <_dtoa_r+0x144>
  802e28:	d9c02317 	ldw	r7,140(sp)
  802e2c:	00800044 	movi	r2,1
  802e30:	38800015 	stw	r2,0(r7)
  802e34:	d8802517 	ldw	r2,148(sp)
  802e38:	10019e26 	beq	r2,zero,8034b4 <_dtoa_r+0x724>
  802e3c:	d8c02517 	ldw	r3,148(sp)
  802e40:	00802074 	movhi	r2,129
  802e44:	1081d244 	addi	r2,r2,1865
  802e48:	18800015 	stw	r2,0(r3)
  802e4c:	10bfffc4 	addi	r2,r2,-1
  802e50:	dfc02117 	ldw	ra,132(sp)
  802e54:	df002017 	ldw	fp,128(sp)
  802e58:	ddc01f17 	ldw	r23,124(sp)
  802e5c:	dd801e17 	ldw	r22,120(sp)
  802e60:	dd401d17 	ldw	r21,116(sp)
  802e64:	dd001c17 	ldw	r20,112(sp)
  802e68:	dcc01b17 	ldw	r19,108(sp)
  802e6c:	dc801a17 	ldw	r18,104(sp)
  802e70:	dc401917 	ldw	r17,100(sp)
  802e74:	dc001817 	ldw	r16,96(sp)
  802e78:	dec02204 	addi	sp,sp,136
  802e7c:	f800283a 	ret
  802e80:	d8c02317 	ldw	r3,140(sp)
  802e84:	0089c3c4 	movi	r2,9999
  802e88:	18800015 	stw	r2,0(r3)
  802e8c:	90017726 	beq	r18,zero,80346c <_dtoa_r+0x6dc>
  802e90:	00802074 	movhi	r2,129
  802e94:	1081de04 	addi	r2,r2,1912
  802e98:	d9002517 	ldw	r4,148(sp)
  802e9c:	203fec26 	beq	r4,zero,802e50 <__alt_mem_onchip_memory2+0xff7e2e50>
  802ea0:	10c000c7 	ldb	r3,3(r2)
  802ea4:	1801781e 	bne	r3,zero,803488 <_dtoa_r+0x6f8>
  802ea8:	10c000c4 	addi	r3,r2,3
  802eac:	d9802517 	ldw	r6,148(sp)
  802eb0:	30c00015 	stw	r3,0(r6)
  802eb4:	003fe606 	br	802e50 <__alt_mem_onchip_memory2+0xff7e2e50>
  802eb8:	04e00034 	movhi	r19,32768
  802ebc:	9cffffc4 	addi	r19,r19,-1
  802ec0:	00800044 	movi	r2,1
  802ec4:	8ce6703a 	and	r19,r17,r19
  802ec8:	80800015 	stw	r2,0(r16)
  802ecc:	9823883a 	mov	r17,r19
  802ed0:	003fcc06 	br	802e04 <__alt_mem_onchip_memory2+0xff7e2e04>
  802ed4:	d8800204 	addi	r2,sp,8
  802ed8:	d8800015 	stw	r2,0(sp)
  802edc:	d9c00104 	addi	r7,sp,4
  802ee0:	900b883a 	mov	r5,r18
  802ee4:	980d883a 	mov	r6,r19
  802ee8:	e009883a 	mov	r4,fp
  802eec:	8820d53a 	srli	r16,r17,20
  802ef0:	08071980 	call	807198 <__d2b>
  802ef4:	d8800915 	stw	r2,36(sp)
  802ef8:	8001651e 	bne	r16,zero,803490 <_dtoa_r+0x700>
  802efc:	dd800217 	ldw	r22,8(sp)
  802f00:	dc000117 	ldw	r16,4(sp)
  802f04:	00800804 	movi	r2,32
  802f08:	b421883a 	add	r16,r22,r16
  802f0c:	80c10c84 	addi	r3,r16,1074
  802f10:	10c2d10e 	bge	r2,r3,803a58 <_dtoa_r+0xcc8>
  802f14:	00801004 	movi	r2,64
  802f18:	81010484 	addi	r4,r16,1042
  802f1c:	10c7c83a 	sub	r3,r2,r3
  802f20:	9108d83a 	srl	r4,r18,r4
  802f24:	88e2983a 	sll	r17,r17,r3
  802f28:	2448b03a 	or	r4,r4,r17
  802f2c:	080d4ac0 	call	80d4ac <__floatunsidf>
  802f30:	017f8434 	movhi	r5,65040
  802f34:	01800044 	movi	r6,1
  802f38:	1009883a 	mov	r4,r2
  802f3c:	194b883a 	add	r5,r3,r5
  802f40:	843fffc4 	addi	r16,r16,-1
  802f44:	d9801115 	stw	r6,68(sp)
  802f48:	000d883a 	mov	r6,zero
  802f4c:	01cffe34 	movhi	r7,16376
  802f50:	080ca540 	call	80ca54 <__subdf3>
  802f54:	0198dbf4 	movhi	r6,25455
  802f58:	01cff4f4 	movhi	r7,16339
  802f5c:	3190d844 	addi	r6,r6,17249
  802f60:	39e1e9c4 	addi	r7,r7,-30809
  802f64:	1009883a 	mov	r4,r2
  802f68:	180b883a 	mov	r5,r3
  802f6c:	080c1e80 	call	80c1e8 <__muldf3>
  802f70:	01a2d874 	movhi	r6,35681
  802f74:	01cff1f4 	movhi	r7,16327
  802f78:	31b22cc4 	addi	r6,r6,-14157
  802f7c:	39e28a04 	addi	r7,r7,-30168
  802f80:	180b883a 	mov	r5,r3
  802f84:	1009883a 	mov	r4,r2
  802f88:	080ad140 	call	80ad14 <__adddf3>
  802f8c:	8009883a 	mov	r4,r16
  802f90:	1029883a 	mov	r20,r2
  802f94:	1823883a 	mov	r17,r3
  802f98:	080d3d00 	call	80d3d0 <__floatsidf>
  802f9c:	019427f4 	movhi	r6,20639
  802fa0:	01cff4f4 	movhi	r7,16339
  802fa4:	319e7ec4 	addi	r6,r6,31227
  802fa8:	39d104c4 	addi	r7,r7,17427
  802fac:	1009883a 	mov	r4,r2
  802fb0:	180b883a 	mov	r5,r3
  802fb4:	080c1e80 	call	80c1e8 <__muldf3>
  802fb8:	100d883a 	mov	r6,r2
  802fbc:	180f883a 	mov	r7,r3
  802fc0:	a009883a 	mov	r4,r20
  802fc4:	880b883a 	mov	r5,r17
  802fc8:	080ad140 	call	80ad14 <__adddf3>
  802fcc:	1009883a 	mov	r4,r2
  802fd0:	180b883a 	mov	r5,r3
  802fd4:	1029883a 	mov	r20,r2
  802fd8:	1823883a 	mov	r17,r3
  802fdc:	080d3500 	call	80d350 <__fixdfsi>
  802fe0:	000d883a 	mov	r6,zero
  802fe4:	000f883a 	mov	r7,zero
  802fe8:	a009883a 	mov	r4,r20
  802fec:	880b883a 	mov	r5,r17
  802ff0:	d8800515 	stw	r2,20(sp)
  802ff4:	080c0f40 	call	80c0f4 <__ledf2>
  802ff8:	10028716 	blt	r2,zero,803a18 <_dtoa_r+0xc88>
  802ffc:	d8c00517 	ldw	r3,20(sp)
  803000:	00800584 	movi	r2,22
  803004:	10c27536 	bltu	r2,r3,8039dc <_dtoa_r+0xc4c>
  803008:	180490fa 	slli	r2,r3,3
  80300c:	00c02074 	movhi	r3,129
  803010:	18c1f904 	addi	r3,r3,2020
  803014:	1885883a 	add	r2,r3,r2
  803018:	11000017 	ldw	r4,0(r2)
  80301c:	11400117 	ldw	r5,4(r2)
  803020:	900d883a 	mov	r6,r18
  803024:	980f883a 	mov	r7,r19
  803028:	080c0180 	call	80c018 <__gedf2>
  80302c:	00828d0e 	bge	zero,r2,803a64 <_dtoa_r+0xcd4>
  803030:	d9000517 	ldw	r4,20(sp)
  803034:	d8000e15 	stw	zero,56(sp)
  803038:	213fffc4 	addi	r4,r4,-1
  80303c:	d9000515 	stw	r4,20(sp)
  803040:	b42dc83a 	sub	r22,r22,r16
  803044:	b5bfffc4 	addi	r22,r22,-1
  803048:	b0026f16 	blt	r22,zero,803a08 <_dtoa_r+0xc78>
  80304c:	d8000815 	stw	zero,32(sp)
  803050:	d9c00517 	ldw	r7,20(sp)
  803054:	38026416 	blt	r7,zero,8039e8 <_dtoa_r+0xc58>
  803058:	b1ed883a 	add	r22,r22,r7
  80305c:	d9c00d15 	stw	r7,52(sp)
  803060:	d8000a15 	stw	zero,40(sp)
  803064:	d9800317 	ldw	r6,12(sp)
  803068:	00800244 	movi	r2,9
  80306c:	11811436 	bltu	r2,r6,8034c0 <_dtoa_r+0x730>
  803070:	00800144 	movi	r2,5
  803074:	1184e10e 	bge	r2,r6,8043fc <_dtoa_r+0x166c>
  803078:	31bfff04 	addi	r6,r6,-4
  80307c:	d9800315 	stw	r6,12(sp)
  803080:	0023883a 	mov	r17,zero
  803084:	d9800317 	ldw	r6,12(sp)
  803088:	008000c4 	movi	r2,3
  80308c:	30836726 	beq	r6,r2,803e2c <_dtoa_r+0x109c>
  803090:	1183410e 	bge	r2,r6,803d98 <_dtoa_r+0x1008>
  803094:	d9c00317 	ldw	r7,12(sp)
  803098:	00800104 	movi	r2,4
  80309c:	38827c26 	beq	r7,r2,803a90 <_dtoa_r+0xd00>
  8030a0:	00800144 	movi	r2,5
  8030a4:	3884c41e 	bne	r7,r2,8043b8 <_dtoa_r+0x1628>
  8030a8:	00800044 	movi	r2,1
  8030ac:	d8800b15 	stw	r2,44(sp)
  8030b0:	d8c00517 	ldw	r3,20(sp)
  8030b4:	d9002217 	ldw	r4,136(sp)
  8030b8:	1907883a 	add	r3,r3,r4
  8030bc:	19800044 	addi	r6,r3,1
  8030c0:	d8c00c15 	stw	r3,48(sp)
  8030c4:	d9800615 	stw	r6,24(sp)
  8030c8:	0183a40e 	bge	zero,r6,803f5c <_dtoa_r+0x11cc>
  8030cc:	d9800617 	ldw	r6,24(sp)
  8030d0:	3021883a 	mov	r16,r6
  8030d4:	e0001115 	stw	zero,68(fp)
  8030d8:	008005c4 	movi	r2,23
  8030dc:	1184c92e 	bgeu	r2,r6,804404 <_dtoa_r+0x1674>
  8030e0:	00c00044 	movi	r3,1
  8030e4:	00800104 	movi	r2,4
  8030e8:	1085883a 	add	r2,r2,r2
  8030ec:	11000504 	addi	r4,r2,20
  8030f0:	180b883a 	mov	r5,r3
  8030f4:	18c00044 	addi	r3,r3,1
  8030f8:	313ffb2e 	bgeu	r6,r4,8030e8 <__alt_mem_onchip_memory2+0xff7e30e8>
  8030fc:	e1401115 	stw	r5,68(fp)
  803100:	e009883a 	mov	r4,fp
  803104:	08064480 	call	806448 <_Balloc>
  803108:	d8800715 	stw	r2,28(sp)
  80310c:	e0801015 	stw	r2,64(fp)
  803110:	00800384 	movi	r2,14
  803114:	1400f736 	bltu	r2,r16,8034f4 <_dtoa_r+0x764>
  803118:	8800f626 	beq	r17,zero,8034f4 <_dtoa_r+0x764>
  80311c:	d9c00517 	ldw	r7,20(sp)
  803120:	01c39a0e 	bge	zero,r7,803f8c <_dtoa_r+0x11fc>
  803124:	388003cc 	andi	r2,r7,15
  803128:	100490fa 	slli	r2,r2,3
  80312c:	382bd13a 	srai	r21,r7,4
  803130:	00c02074 	movhi	r3,129
  803134:	18c1f904 	addi	r3,r3,2020
  803138:	1885883a 	add	r2,r3,r2
  80313c:	a8c0040c 	andi	r3,r21,16
  803140:	12400017 	ldw	r9,0(r2)
  803144:	12000117 	ldw	r8,4(r2)
  803148:	18037926 	beq	r3,zero,803f30 <_dtoa_r+0x11a0>
  80314c:	00802074 	movhi	r2,129
  803150:	1081ef04 	addi	r2,r2,1980
  803154:	11800817 	ldw	r6,32(r2)
  803158:	11c00917 	ldw	r7,36(r2)
  80315c:	9009883a 	mov	r4,r18
  803160:	980b883a 	mov	r5,r19
  803164:	da001715 	stw	r8,92(sp)
  803168:	da401615 	stw	r9,88(sp)
  80316c:	080b5c00 	call	80b5c0 <__divdf3>
  803170:	da001717 	ldw	r8,92(sp)
  803174:	da401617 	ldw	r9,88(sp)
  803178:	ad4003cc 	andi	r21,r21,15
  80317c:	040000c4 	movi	r16,3
  803180:	1023883a 	mov	r17,r2
  803184:	1829883a 	mov	r20,r3
  803188:	a8001126 	beq	r21,zero,8031d0 <_dtoa_r+0x440>
  80318c:	05c02074 	movhi	r23,129
  803190:	bdc1ef04 	addi	r23,r23,1980
  803194:	4805883a 	mov	r2,r9
  803198:	4007883a 	mov	r3,r8
  80319c:	a980004c 	andi	r6,r21,1
  8031a0:	1009883a 	mov	r4,r2
  8031a4:	a82bd07a 	srai	r21,r21,1
  8031a8:	180b883a 	mov	r5,r3
  8031ac:	30000426 	beq	r6,zero,8031c0 <_dtoa_r+0x430>
  8031b0:	b9800017 	ldw	r6,0(r23)
  8031b4:	b9c00117 	ldw	r7,4(r23)
  8031b8:	84000044 	addi	r16,r16,1
  8031bc:	080c1e80 	call	80c1e8 <__muldf3>
  8031c0:	bdc00204 	addi	r23,r23,8
  8031c4:	a83ff51e 	bne	r21,zero,80319c <__alt_mem_onchip_memory2+0xff7e319c>
  8031c8:	1013883a 	mov	r9,r2
  8031cc:	1811883a 	mov	r8,r3
  8031d0:	480d883a 	mov	r6,r9
  8031d4:	400f883a 	mov	r7,r8
  8031d8:	8809883a 	mov	r4,r17
  8031dc:	a00b883a 	mov	r5,r20
  8031e0:	080b5c00 	call	80b5c0 <__divdf3>
  8031e4:	d8800f15 	stw	r2,60(sp)
  8031e8:	d8c01015 	stw	r3,64(sp)
  8031ec:	d8c00e17 	ldw	r3,56(sp)
  8031f0:	18000626 	beq	r3,zero,80320c <_dtoa_r+0x47c>
  8031f4:	d9000f17 	ldw	r4,60(sp)
  8031f8:	d9401017 	ldw	r5,64(sp)
  8031fc:	000d883a 	mov	r6,zero
  803200:	01cffc34 	movhi	r7,16368
  803204:	080c0f40 	call	80c0f4 <__ledf2>
  803208:	10040b16 	blt	r2,zero,804238 <_dtoa_r+0x14a8>
  80320c:	8009883a 	mov	r4,r16
  803210:	080d3d00 	call	80d3d0 <__floatsidf>
  803214:	d9800f17 	ldw	r6,60(sp)
  803218:	d9c01017 	ldw	r7,64(sp)
  80321c:	1009883a 	mov	r4,r2
  803220:	180b883a 	mov	r5,r3
  803224:	080c1e80 	call	80c1e8 <__muldf3>
  803228:	000d883a 	mov	r6,zero
  80322c:	01d00734 	movhi	r7,16412
  803230:	1009883a 	mov	r4,r2
  803234:	180b883a 	mov	r5,r3
  803238:	080ad140 	call	80ad14 <__adddf3>
  80323c:	1021883a 	mov	r16,r2
  803240:	d8800617 	ldw	r2,24(sp)
  803244:	047f3034 	movhi	r17,64704
  803248:	1c63883a 	add	r17,r3,r17
  80324c:	10031826 	beq	r2,zero,803eb0 <_dtoa_r+0x1120>
  803250:	d8c00517 	ldw	r3,20(sp)
  803254:	db000617 	ldw	r12,24(sp)
  803258:	d8c01315 	stw	r3,76(sp)
  80325c:	d9000b17 	ldw	r4,44(sp)
  803260:	20038f26 	beq	r4,zero,8040a0 <_dtoa_r+0x1310>
  803264:	60bfffc4 	addi	r2,r12,-1
  803268:	100490fa 	slli	r2,r2,3
  80326c:	00c02074 	movhi	r3,129
  803270:	18c1f904 	addi	r3,r3,2020
  803274:	1885883a 	add	r2,r3,r2
  803278:	11800017 	ldw	r6,0(r2)
  80327c:	11c00117 	ldw	r7,4(r2)
  803280:	d8800717 	ldw	r2,28(sp)
  803284:	0009883a 	mov	r4,zero
  803288:	014ff834 	movhi	r5,16352
  80328c:	db001615 	stw	r12,88(sp)
  803290:	15c00044 	addi	r23,r2,1
  803294:	080b5c00 	call	80b5c0 <__divdf3>
  803298:	800d883a 	mov	r6,r16
  80329c:	880f883a 	mov	r7,r17
  8032a0:	1009883a 	mov	r4,r2
  8032a4:	180b883a 	mov	r5,r3
  8032a8:	080ca540 	call	80ca54 <__subdf3>
  8032ac:	d9401017 	ldw	r5,64(sp)
  8032b0:	d9000f17 	ldw	r4,60(sp)
  8032b4:	102b883a 	mov	r21,r2
  8032b8:	d8c01215 	stw	r3,72(sp)
  8032bc:	080d3500 	call	80d350 <__fixdfsi>
  8032c0:	1009883a 	mov	r4,r2
  8032c4:	1029883a 	mov	r20,r2
  8032c8:	080d3d00 	call	80d3d0 <__floatsidf>
  8032cc:	d9000f17 	ldw	r4,60(sp)
  8032d0:	d9401017 	ldw	r5,64(sp)
  8032d4:	100d883a 	mov	r6,r2
  8032d8:	180f883a 	mov	r7,r3
  8032dc:	080ca540 	call	80ca54 <__subdf3>
  8032e0:	1823883a 	mov	r17,r3
  8032e4:	d8c00717 	ldw	r3,28(sp)
  8032e8:	d9401217 	ldw	r5,72(sp)
  8032ec:	a2000c04 	addi	r8,r20,48
  8032f0:	1021883a 	mov	r16,r2
  8032f4:	1a000005 	stb	r8,0(r3)
  8032f8:	800d883a 	mov	r6,r16
  8032fc:	880f883a 	mov	r7,r17
  803300:	a809883a 	mov	r4,r21
  803304:	4029883a 	mov	r20,r8
  803308:	080c0180 	call	80c018 <__gedf2>
  80330c:	00841d16 	blt	zero,r2,804384 <_dtoa_r+0x15f4>
  803310:	800d883a 	mov	r6,r16
  803314:	880f883a 	mov	r7,r17
  803318:	0009883a 	mov	r4,zero
  80331c:	014ffc34 	movhi	r5,16368
  803320:	080ca540 	call	80ca54 <__subdf3>
  803324:	d9401217 	ldw	r5,72(sp)
  803328:	100d883a 	mov	r6,r2
  80332c:	180f883a 	mov	r7,r3
  803330:	a809883a 	mov	r4,r21
  803334:	080c0180 	call	80c018 <__gedf2>
  803338:	db001617 	ldw	r12,88(sp)
  80333c:	00840e16 	blt	zero,r2,804378 <_dtoa_r+0x15e8>
  803340:	00800044 	movi	r2,1
  803344:	13006b0e 	bge	r2,r12,8034f4 <_dtoa_r+0x764>
  803348:	d9000717 	ldw	r4,28(sp)
  80334c:	dd800f15 	stw	r22,60(sp)
  803350:	dcc01015 	stw	r19,64(sp)
  803354:	2319883a 	add	r12,r4,r12
  803358:	dcc01217 	ldw	r19,72(sp)
  80335c:	602d883a 	mov	r22,r12
  803360:	dc801215 	stw	r18,72(sp)
  803364:	b825883a 	mov	r18,r23
  803368:	00000906 	br	803390 <_dtoa_r+0x600>
  80336c:	080ca540 	call	80ca54 <__subdf3>
  803370:	a80d883a 	mov	r6,r21
  803374:	980f883a 	mov	r7,r19
  803378:	1009883a 	mov	r4,r2
  80337c:	180b883a 	mov	r5,r3
  803380:	080c0f40 	call	80c0f4 <__ledf2>
  803384:	1003e816 	blt	r2,zero,804328 <_dtoa_r+0x1598>
  803388:	b825883a 	mov	r18,r23
  80338c:	bd83e926 	beq	r23,r22,804334 <_dtoa_r+0x15a4>
  803390:	a809883a 	mov	r4,r21
  803394:	980b883a 	mov	r5,r19
  803398:	000d883a 	mov	r6,zero
  80339c:	01d00934 	movhi	r7,16420
  8033a0:	080c1e80 	call	80c1e8 <__muldf3>
  8033a4:	000d883a 	mov	r6,zero
  8033a8:	01d00934 	movhi	r7,16420
  8033ac:	8009883a 	mov	r4,r16
  8033b0:	880b883a 	mov	r5,r17
  8033b4:	102b883a 	mov	r21,r2
  8033b8:	1827883a 	mov	r19,r3
  8033bc:	080c1e80 	call	80c1e8 <__muldf3>
  8033c0:	180b883a 	mov	r5,r3
  8033c4:	1009883a 	mov	r4,r2
  8033c8:	1821883a 	mov	r16,r3
  8033cc:	1023883a 	mov	r17,r2
  8033d0:	080d3500 	call	80d350 <__fixdfsi>
  8033d4:	1009883a 	mov	r4,r2
  8033d8:	1029883a 	mov	r20,r2
  8033dc:	080d3d00 	call	80d3d0 <__floatsidf>
  8033e0:	8809883a 	mov	r4,r17
  8033e4:	800b883a 	mov	r5,r16
  8033e8:	100d883a 	mov	r6,r2
  8033ec:	180f883a 	mov	r7,r3
  8033f0:	080ca540 	call	80ca54 <__subdf3>
  8033f4:	a5000c04 	addi	r20,r20,48
  8033f8:	a80d883a 	mov	r6,r21
  8033fc:	980f883a 	mov	r7,r19
  803400:	1009883a 	mov	r4,r2
  803404:	180b883a 	mov	r5,r3
  803408:	95000005 	stb	r20,0(r18)
  80340c:	1021883a 	mov	r16,r2
  803410:	1823883a 	mov	r17,r3
  803414:	080c0f40 	call	80c0f4 <__ledf2>
  803418:	bdc00044 	addi	r23,r23,1
  80341c:	800d883a 	mov	r6,r16
  803420:	880f883a 	mov	r7,r17
  803424:	0009883a 	mov	r4,zero
  803428:	014ffc34 	movhi	r5,16368
  80342c:	103fcf0e 	bge	r2,zero,80336c <__alt_mem_onchip_memory2+0xff7e336c>
  803430:	d8c01317 	ldw	r3,76(sp)
  803434:	d8c00515 	stw	r3,20(sp)
  803438:	d9400917 	ldw	r5,36(sp)
  80343c:	e009883a 	mov	r4,fp
  803440:	08064f00 	call	8064f0 <_Bfree>
  803444:	d9000517 	ldw	r4,20(sp)
  803448:	d9802317 	ldw	r6,140(sp)
  80344c:	d9c02517 	ldw	r7,148(sp)
  803450:	b8000005 	stb	zero,0(r23)
  803454:	20800044 	addi	r2,r4,1
  803458:	30800015 	stw	r2,0(r6)
  80345c:	3802aa26 	beq	r7,zero,803f08 <_dtoa_r+0x1178>
  803460:	3dc00015 	stw	r23,0(r7)
  803464:	d8800717 	ldw	r2,28(sp)
  803468:	003e7906 	br	802e50 <__alt_mem_onchip_memory2+0xff7e2e50>
  80346c:	00800434 	movhi	r2,16
  803470:	10bfffc4 	addi	r2,r2,-1
  803474:	88a2703a 	and	r17,r17,r2
  803478:	883e851e 	bne	r17,zero,802e90 <__alt_mem_onchip_memory2+0xff7e2e90>
  80347c:	00802074 	movhi	r2,129
  803480:	1081db04 	addi	r2,r2,1900
  803484:	003e8406 	br	802e98 <__alt_mem_onchip_memory2+0xff7e2e98>
  803488:	10c00204 	addi	r3,r2,8
  80348c:	003e8706 	br	802eac <__alt_mem_onchip_memory2+0xff7e2eac>
  803490:	01400434 	movhi	r5,16
  803494:	297fffc4 	addi	r5,r5,-1
  803498:	994a703a 	and	r5,r19,r5
  80349c:	9009883a 	mov	r4,r18
  8034a0:	843f0044 	addi	r16,r16,-1023
  8034a4:	294ffc34 	orhi	r5,r5,16368
  8034a8:	dd800217 	ldw	r22,8(sp)
  8034ac:	d8001115 	stw	zero,68(sp)
  8034b0:	003ea506 	br	802f48 <__alt_mem_onchip_memory2+0xff7e2f48>
  8034b4:	00802074 	movhi	r2,129
  8034b8:	1081d204 	addi	r2,r2,1864
  8034bc:	003e6406 	br	802e50 <__alt_mem_onchip_memory2+0xff7e2e50>
  8034c0:	e0001115 	stw	zero,68(fp)
  8034c4:	000b883a 	mov	r5,zero
  8034c8:	e009883a 	mov	r4,fp
  8034cc:	08064480 	call	806448 <_Balloc>
  8034d0:	01bfffc4 	movi	r6,-1
  8034d4:	01c00044 	movi	r7,1
  8034d8:	d8800715 	stw	r2,28(sp)
  8034dc:	d9800c15 	stw	r6,48(sp)
  8034e0:	e0801015 	stw	r2,64(fp)
  8034e4:	d8000315 	stw	zero,12(sp)
  8034e8:	d9c00b15 	stw	r7,44(sp)
  8034ec:	d9800615 	stw	r6,24(sp)
  8034f0:	d8002215 	stw	zero,136(sp)
  8034f4:	d8800117 	ldw	r2,4(sp)
  8034f8:	10008916 	blt	r2,zero,803720 <_dtoa_r+0x990>
  8034fc:	d9000517 	ldw	r4,20(sp)
  803500:	00c00384 	movi	r3,14
  803504:	19008616 	blt	r3,r4,803720 <_dtoa_r+0x990>
  803508:	200490fa 	slli	r2,r4,3
  80350c:	00c02074 	movhi	r3,129
  803510:	d9802217 	ldw	r6,136(sp)
  803514:	18c1f904 	addi	r3,r3,2020
  803518:	1885883a 	add	r2,r3,r2
  80351c:	14000017 	ldw	r16,0(r2)
  803520:	14400117 	ldw	r17,4(r2)
  803524:	30016316 	blt	r6,zero,803ab4 <_dtoa_r+0xd24>
  803528:	800d883a 	mov	r6,r16
  80352c:	880f883a 	mov	r7,r17
  803530:	9009883a 	mov	r4,r18
  803534:	980b883a 	mov	r5,r19
  803538:	080b5c00 	call	80b5c0 <__divdf3>
  80353c:	180b883a 	mov	r5,r3
  803540:	1009883a 	mov	r4,r2
  803544:	080d3500 	call	80d350 <__fixdfsi>
  803548:	1009883a 	mov	r4,r2
  80354c:	102b883a 	mov	r21,r2
  803550:	080d3d00 	call	80d3d0 <__floatsidf>
  803554:	800d883a 	mov	r6,r16
  803558:	880f883a 	mov	r7,r17
  80355c:	1009883a 	mov	r4,r2
  803560:	180b883a 	mov	r5,r3
  803564:	080c1e80 	call	80c1e8 <__muldf3>
  803568:	100d883a 	mov	r6,r2
  80356c:	180f883a 	mov	r7,r3
  803570:	9009883a 	mov	r4,r18
  803574:	980b883a 	mov	r5,r19
  803578:	080ca540 	call	80ca54 <__subdf3>
  80357c:	d9c00717 	ldw	r7,28(sp)
  803580:	1009883a 	mov	r4,r2
  803584:	a8800c04 	addi	r2,r21,48
  803588:	38800005 	stb	r2,0(r7)
  80358c:	3dc00044 	addi	r23,r7,1
  803590:	d9c00617 	ldw	r7,24(sp)
  803594:	01800044 	movi	r6,1
  803598:	180b883a 	mov	r5,r3
  80359c:	2005883a 	mov	r2,r4
  8035a0:	39803826 	beq	r7,r6,803684 <_dtoa_r+0x8f4>
  8035a4:	000d883a 	mov	r6,zero
  8035a8:	01d00934 	movhi	r7,16420
  8035ac:	080c1e80 	call	80c1e8 <__muldf3>
  8035b0:	000d883a 	mov	r6,zero
  8035b4:	000f883a 	mov	r7,zero
  8035b8:	1009883a 	mov	r4,r2
  8035bc:	180b883a 	mov	r5,r3
  8035c0:	1025883a 	mov	r18,r2
  8035c4:	1827883a 	mov	r19,r3
  8035c8:	080bf900 	call	80bf90 <__eqdf2>
  8035cc:	103f9a26 	beq	r2,zero,803438 <__alt_mem_onchip_memory2+0xff7e3438>
  8035d0:	d9c00617 	ldw	r7,24(sp)
  8035d4:	d8c00717 	ldw	r3,28(sp)
  8035d8:	b829883a 	mov	r20,r23
  8035dc:	38bfffc4 	addi	r2,r7,-1
  8035e0:	18ad883a 	add	r22,r3,r2
  8035e4:	00000a06 	br	803610 <_dtoa_r+0x880>
  8035e8:	080c1e80 	call	80c1e8 <__muldf3>
  8035ec:	000d883a 	mov	r6,zero
  8035f0:	000f883a 	mov	r7,zero
  8035f4:	1009883a 	mov	r4,r2
  8035f8:	180b883a 	mov	r5,r3
  8035fc:	1025883a 	mov	r18,r2
  803600:	1827883a 	mov	r19,r3
  803604:	b829883a 	mov	r20,r23
  803608:	080bf900 	call	80bf90 <__eqdf2>
  80360c:	103f8a26 	beq	r2,zero,803438 <__alt_mem_onchip_memory2+0xff7e3438>
  803610:	800d883a 	mov	r6,r16
  803614:	880f883a 	mov	r7,r17
  803618:	9009883a 	mov	r4,r18
  80361c:	980b883a 	mov	r5,r19
  803620:	080b5c00 	call	80b5c0 <__divdf3>
  803624:	180b883a 	mov	r5,r3
  803628:	1009883a 	mov	r4,r2
  80362c:	080d3500 	call	80d350 <__fixdfsi>
  803630:	1009883a 	mov	r4,r2
  803634:	102b883a 	mov	r21,r2
  803638:	080d3d00 	call	80d3d0 <__floatsidf>
  80363c:	800d883a 	mov	r6,r16
  803640:	880f883a 	mov	r7,r17
  803644:	1009883a 	mov	r4,r2
  803648:	180b883a 	mov	r5,r3
  80364c:	080c1e80 	call	80c1e8 <__muldf3>
  803650:	100d883a 	mov	r6,r2
  803654:	180f883a 	mov	r7,r3
  803658:	9009883a 	mov	r4,r18
  80365c:	980b883a 	mov	r5,r19
  803660:	080ca540 	call	80ca54 <__subdf3>
  803664:	aa000c04 	addi	r8,r21,48
  803668:	a2000005 	stb	r8,0(r20)
  80366c:	000d883a 	mov	r6,zero
  803670:	01d00934 	movhi	r7,16420
  803674:	1009883a 	mov	r4,r2
  803678:	180b883a 	mov	r5,r3
  80367c:	a5c00044 	addi	r23,r20,1
  803680:	b53fd91e 	bne	r22,r20,8035e8 <__alt_mem_onchip_memory2+0xff7e35e8>
  803684:	100d883a 	mov	r6,r2
  803688:	180f883a 	mov	r7,r3
  80368c:	1009883a 	mov	r4,r2
  803690:	180b883a 	mov	r5,r3
  803694:	080ad140 	call	80ad14 <__adddf3>
  803698:	100d883a 	mov	r6,r2
  80369c:	180f883a 	mov	r7,r3
  8036a0:	8009883a 	mov	r4,r16
  8036a4:	880b883a 	mov	r5,r17
  8036a8:	1027883a 	mov	r19,r2
  8036ac:	1825883a 	mov	r18,r3
  8036b0:	080c0f40 	call	80c0f4 <__ledf2>
  8036b4:	10000816 	blt	r2,zero,8036d8 <_dtoa_r+0x948>
  8036b8:	980d883a 	mov	r6,r19
  8036bc:	900f883a 	mov	r7,r18
  8036c0:	8009883a 	mov	r4,r16
  8036c4:	880b883a 	mov	r5,r17
  8036c8:	080bf900 	call	80bf90 <__eqdf2>
  8036cc:	103f5a1e 	bne	r2,zero,803438 <__alt_mem_onchip_memory2+0xff7e3438>
  8036d0:	ad40004c 	andi	r21,r21,1
  8036d4:	a83f5826 	beq	r21,zero,803438 <__alt_mem_onchip_memory2+0xff7e3438>
  8036d8:	bd3fffc3 	ldbu	r20,-1(r23)
  8036dc:	b8bfffc4 	addi	r2,r23,-1
  8036e0:	1007883a 	mov	r3,r2
  8036e4:	01400e44 	movi	r5,57
  8036e8:	d9800717 	ldw	r6,28(sp)
  8036ec:	00000506 	br	803704 <_dtoa_r+0x974>
  8036f0:	18ffffc4 	addi	r3,r3,-1
  8036f4:	11824726 	beq	r2,r6,804014 <_dtoa_r+0x1284>
  8036f8:	1d000003 	ldbu	r20,0(r3)
  8036fc:	102f883a 	mov	r23,r2
  803700:	10bfffc4 	addi	r2,r2,-1
  803704:	a1003fcc 	andi	r4,r20,255
  803708:	2100201c 	xori	r4,r4,128
  80370c:	213fe004 	addi	r4,r4,-128
  803710:	217ff726 	beq	r4,r5,8036f0 <__alt_mem_onchip_memory2+0xff7e36f0>
  803714:	a2000044 	addi	r8,r20,1
  803718:	12000005 	stb	r8,0(r2)
  80371c:	003f4606 	br	803438 <__alt_mem_onchip_memory2+0xff7e3438>
  803720:	d9000b17 	ldw	r4,44(sp)
  803724:	2000c826 	beq	r4,zero,803a48 <_dtoa_r+0xcb8>
  803728:	d9800317 	ldw	r6,12(sp)
  80372c:	00c00044 	movi	r3,1
  803730:	1980f90e 	bge	r3,r6,803b18 <_dtoa_r+0xd88>
  803734:	d8800617 	ldw	r2,24(sp)
  803738:	d8c00a17 	ldw	r3,40(sp)
  80373c:	157fffc4 	addi	r21,r2,-1
  803740:	1d41f316 	blt	r3,r21,803f10 <_dtoa_r+0x1180>
  803744:	1d6bc83a 	sub	r21,r3,r21
  803748:	d9c00617 	ldw	r7,24(sp)
  80374c:	3802aa16 	blt	r7,zero,8041f8 <_dtoa_r+0x1468>
  803750:	dd000817 	ldw	r20,32(sp)
  803754:	d8800617 	ldw	r2,24(sp)
  803758:	d8c00817 	ldw	r3,32(sp)
  80375c:	01400044 	movi	r5,1
  803760:	e009883a 	mov	r4,fp
  803764:	1887883a 	add	r3,r3,r2
  803768:	d8c00815 	stw	r3,32(sp)
  80376c:	b0ad883a 	add	r22,r22,r2
  803770:	080687c0 	call	80687c <__i2b>
  803774:	1023883a 	mov	r17,r2
  803778:	a0000826 	beq	r20,zero,80379c <_dtoa_r+0xa0c>
  80377c:	0580070e 	bge	zero,r22,80379c <_dtoa_r+0xa0c>
  803780:	a005883a 	mov	r2,r20
  803784:	b500b916 	blt	r22,r20,803a6c <_dtoa_r+0xcdc>
  803788:	d9000817 	ldw	r4,32(sp)
  80378c:	a0a9c83a 	sub	r20,r20,r2
  803790:	b0adc83a 	sub	r22,r22,r2
  803794:	2089c83a 	sub	r4,r4,r2
  803798:	d9000815 	stw	r4,32(sp)
  80379c:	d9800a17 	ldw	r6,40(sp)
  8037a0:	0181810e 	bge	zero,r6,803da8 <_dtoa_r+0x1018>
  8037a4:	d9c00b17 	ldw	r7,44(sp)
  8037a8:	3800b326 	beq	r7,zero,803a78 <_dtoa_r+0xce8>
  8037ac:	a800b226 	beq	r21,zero,803a78 <_dtoa_r+0xce8>
  8037b0:	880b883a 	mov	r5,r17
  8037b4:	a80d883a 	mov	r6,r21
  8037b8:	e009883a 	mov	r4,fp
  8037bc:	0806b440 	call	806b44 <__pow5mult>
  8037c0:	d9800917 	ldw	r6,36(sp)
  8037c4:	100b883a 	mov	r5,r2
  8037c8:	e009883a 	mov	r4,fp
  8037cc:	1023883a 	mov	r17,r2
  8037d0:	08068b80 	call	8068b8 <__multiply>
  8037d4:	1021883a 	mov	r16,r2
  8037d8:	d8800a17 	ldw	r2,40(sp)
  8037dc:	d9400917 	ldw	r5,36(sp)
  8037e0:	e009883a 	mov	r4,fp
  8037e4:	1545c83a 	sub	r2,r2,r21
  8037e8:	d8800a15 	stw	r2,40(sp)
  8037ec:	08064f00 	call	8064f0 <_Bfree>
  8037f0:	d8c00a17 	ldw	r3,40(sp)
  8037f4:	18009f1e 	bne	r3,zero,803a74 <_dtoa_r+0xce4>
  8037f8:	05c00044 	movi	r23,1
  8037fc:	e009883a 	mov	r4,fp
  803800:	b80b883a 	mov	r5,r23
  803804:	080687c0 	call	80687c <__i2b>
  803808:	d9000d17 	ldw	r4,52(sp)
  80380c:	102b883a 	mov	r21,r2
  803810:	2000ce26 	beq	r4,zero,803b4c <_dtoa_r+0xdbc>
  803814:	200d883a 	mov	r6,r4
  803818:	100b883a 	mov	r5,r2
  80381c:	e009883a 	mov	r4,fp
  803820:	0806b440 	call	806b44 <__pow5mult>
  803824:	d9800317 	ldw	r6,12(sp)
  803828:	102b883a 	mov	r21,r2
  80382c:	b981810e 	bge	r23,r6,803e34 <_dtoa_r+0x10a4>
  803830:	0027883a 	mov	r19,zero
  803834:	a8800417 	ldw	r2,16(r21)
  803838:	05c00804 	movi	r23,32
  80383c:	10800104 	addi	r2,r2,4
  803840:	1085883a 	add	r2,r2,r2
  803844:	1085883a 	add	r2,r2,r2
  803848:	a885883a 	add	r2,r21,r2
  80384c:	11000017 	ldw	r4,0(r2)
  803850:	08067640 	call	806764 <__hi0bits>
  803854:	b885c83a 	sub	r2,r23,r2
  803858:	1585883a 	add	r2,r2,r22
  80385c:	108007cc 	andi	r2,r2,31
  803860:	1000b326 	beq	r2,zero,803b30 <_dtoa_r+0xda0>
  803864:	00c00804 	movi	r3,32
  803868:	1887c83a 	sub	r3,r3,r2
  80386c:	01000104 	movi	r4,4
  803870:	20c2cd0e 	bge	r4,r3,8043a8 <_dtoa_r+0x1618>
  803874:	00c00704 	movi	r3,28
  803878:	1885c83a 	sub	r2,r3,r2
  80387c:	d8c00817 	ldw	r3,32(sp)
  803880:	a0a9883a 	add	r20,r20,r2
  803884:	b0ad883a 	add	r22,r22,r2
  803888:	1887883a 	add	r3,r3,r2
  80388c:	d8c00815 	stw	r3,32(sp)
  803890:	d9800817 	ldw	r6,32(sp)
  803894:	0180040e 	bge	zero,r6,8038a8 <_dtoa_r+0xb18>
  803898:	800b883a 	mov	r5,r16
  80389c:	e009883a 	mov	r4,fp
  8038a0:	0806c840 	call	806c84 <__lshift>
  8038a4:	1021883a 	mov	r16,r2
  8038a8:	0580050e 	bge	zero,r22,8038c0 <_dtoa_r+0xb30>
  8038ac:	a80b883a 	mov	r5,r21
  8038b0:	b00d883a 	mov	r6,r22
  8038b4:	e009883a 	mov	r4,fp
  8038b8:	0806c840 	call	806c84 <__lshift>
  8038bc:	102b883a 	mov	r21,r2
  8038c0:	d9c00e17 	ldw	r7,56(sp)
  8038c4:	3801211e 	bne	r7,zero,803d4c <_dtoa_r+0xfbc>
  8038c8:	d9800617 	ldw	r6,24(sp)
  8038cc:	0181380e 	bge	zero,r6,803db0 <_dtoa_r+0x1020>
  8038d0:	d8c00b17 	ldw	r3,44(sp)
  8038d4:	1800ab1e 	bne	r3,zero,803b84 <_dtoa_r+0xdf4>
  8038d8:	dc800717 	ldw	r18,28(sp)
  8038dc:	dcc00617 	ldw	r19,24(sp)
  8038e0:	9029883a 	mov	r20,r18
  8038e4:	00000206 	br	8038f0 <_dtoa_r+0xb60>
  8038e8:	08065180 	call	806518 <__multadd>
  8038ec:	1021883a 	mov	r16,r2
  8038f0:	a80b883a 	mov	r5,r21
  8038f4:	8009883a 	mov	r4,r16
  8038f8:	0802b680 	call	802b68 <quorem>
  8038fc:	10800c04 	addi	r2,r2,48
  803900:	90800005 	stb	r2,0(r18)
  803904:	94800044 	addi	r18,r18,1
  803908:	9507c83a 	sub	r3,r18,r20
  80390c:	000f883a 	mov	r7,zero
  803910:	01800284 	movi	r6,10
  803914:	800b883a 	mov	r5,r16
  803918:	e009883a 	mov	r4,fp
  80391c:	1cfff216 	blt	r3,r19,8038e8 <__alt_mem_onchip_memory2+0xff7e38e8>
  803920:	1011883a 	mov	r8,r2
  803924:	d8800617 	ldw	r2,24(sp)
  803928:	0082370e 	bge	zero,r2,804208 <_dtoa_r+0x1478>
  80392c:	d9000717 	ldw	r4,28(sp)
  803930:	0025883a 	mov	r18,zero
  803934:	20af883a 	add	r23,r4,r2
  803938:	01800044 	movi	r6,1
  80393c:	800b883a 	mov	r5,r16
  803940:	e009883a 	mov	r4,fp
  803944:	da001715 	stw	r8,92(sp)
  803948:	0806c840 	call	806c84 <__lshift>
  80394c:	a80b883a 	mov	r5,r21
  803950:	1009883a 	mov	r4,r2
  803954:	d8800915 	stw	r2,36(sp)
  803958:	0806dcc0 	call	806dcc <__mcmp>
  80395c:	da001717 	ldw	r8,92(sp)
  803960:	0081800e 	bge	zero,r2,803f64 <_dtoa_r+0x11d4>
  803964:	b93fffc3 	ldbu	r4,-1(r23)
  803968:	b8bfffc4 	addi	r2,r23,-1
  80396c:	1007883a 	mov	r3,r2
  803970:	01800e44 	movi	r6,57
  803974:	d9c00717 	ldw	r7,28(sp)
  803978:	00000506 	br	803990 <_dtoa_r+0xc00>
  80397c:	18ffffc4 	addi	r3,r3,-1
  803980:	11c12326 	beq	r2,r7,803e10 <_dtoa_r+0x1080>
  803984:	19000003 	ldbu	r4,0(r3)
  803988:	102f883a 	mov	r23,r2
  80398c:	10bfffc4 	addi	r2,r2,-1
  803990:	21403fcc 	andi	r5,r4,255
  803994:	2940201c 	xori	r5,r5,128
  803998:	297fe004 	addi	r5,r5,-128
  80399c:	29bff726 	beq	r5,r6,80397c <__alt_mem_onchip_memory2+0xff7e397c>
  8039a0:	21000044 	addi	r4,r4,1
  8039a4:	11000005 	stb	r4,0(r2)
  8039a8:	a80b883a 	mov	r5,r21
  8039ac:	e009883a 	mov	r4,fp
  8039b0:	08064f00 	call	8064f0 <_Bfree>
  8039b4:	883ea026 	beq	r17,zero,803438 <__alt_mem_onchip_memory2+0xff7e3438>
  8039b8:	90000426 	beq	r18,zero,8039cc <_dtoa_r+0xc3c>
  8039bc:	94400326 	beq	r18,r17,8039cc <_dtoa_r+0xc3c>
  8039c0:	900b883a 	mov	r5,r18
  8039c4:	e009883a 	mov	r4,fp
  8039c8:	08064f00 	call	8064f0 <_Bfree>
  8039cc:	880b883a 	mov	r5,r17
  8039d0:	e009883a 	mov	r4,fp
  8039d4:	08064f00 	call	8064f0 <_Bfree>
  8039d8:	003e9706 	br	803438 <__alt_mem_onchip_memory2+0xff7e3438>
  8039dc:	01800044 	movi	r6,1
  8039e0:	d9800e15 	stw	r6,56(sp)
  8039e4:	003d9606 	br	803040 <__alt_mem_onchip_memory2+0xff7e3040>
  8039e8:	d8800817 	ldw	r2,32(sp)
  8039ec:	d8c00517 	ldw	r3,20(sp)
  8039f0:	d8000d15 	stw	zero,52(sp)
  8039f4:	10c5c83a 	sub	r2,r2,r3
  8039f8:	00c9c83a 	sub	r4,zero,r3
  8039fc:	d8800815 	stw	r2,32(sp)
  803a00:	d9000a15 	stw	r4,40(sp)
  803a04:	003d9706 	br	803064 <__alt_mem_onchip_memory2+0xff7e3064>
  803a08:	05adc83a 	sub	r22,zero,r22
  803a0c:	dd800815 	stw	r22,32(sp)
  803a10:	002d883a 	mov	r22,zero
  803a14:	003d8e06 	br	803050 <__alt_mem_onchip_memory2+0xff7e3050>
  803a18:	d9000517 	ldw	r4,20(sp)
  803a1c:	080d3d00 	call	80d3d0 <__floatsidf>
  803a20:	100d883a 	mov	r6,r2
  803a24:	180f883a 	mov	r7,r3
  803a28:	a009883a 	mov	r4,r20
  803a2c:	880b883a 	mov	r5,r17
  803a30:	080bf900 	call	80bf90 <__eqdf2>
  803a34:	103d7126 	beq	r2,zero,802ffc <__alt_mem_onchip_memory2+0xff7e2ffc>
  803a38:	d9c00517 	ldw	r7,20(sp)
  803a3c:	39ffffc4 	addi	r7,r7,-1
  803a40:	d9c00515 	stw	r7,20(sp)
  803a44:	003d6d06 	br	802ffc <__alt_mem_onchip_memory2+0xff7e2ffc>
  803a48:	dd400a17 	ldw	r21,40(sp)
  803a4c:	dd000817 	ldw	r20,32(sp)
  803a50:	0023883a 	mov	r17,zero
  803a54:	003f4806 	br	803778 <__alt_mem_onchip_memory2+0xff7e3778>
  803a58:	10e3c83a 	sub	r17,r2,r3
  803a5c:	9448983a 	sll	r4,r18,r17
  803a60:	003d3206 	br	802f2c <__alt_mem_onchip_memory2+0xff7e2f2c>
  803a64:	d8000e15 	stw	zero,56(sp)
  803a68:	003d7506 	br	803040 <__alt_mem_onchip_memory2+0xff7e3040>
  803a6c:	b005883a 	mov	r2,r22
  803a70:	003f4506 	br	803788 <__alt_mem_onchip_memory2+0xff7e3788>
  803a74:	dc000915 	stw	r16,36(sp)
  803a78:	d9800a17 	ldw	r6,40(sp)
  803a7c:	d9400917 	ldw	r5,36(sp)
  803a80:	e009883a 	mov	r4,fp
  803a84:	0806b440 	call	806b44 <__pow5mult>
  803a88:	1021883a 	mov	r16,r2
  803a8c:	003f5a06 	br	8037f8 <__alt_mem_onchip_memory2+0xff7e37f8>
  803a90:	01c00044 	movi	r7,1
  803a94:	d9c00b15 	stw	r7,44(sp)
  803a98:	d8802217 	ldw	r2,136(sp)
  803a9c:	0081280e 	bge	zero,r2,803f40 <_dtoa_r+0x11b0>
  803aa0:	100d883a 	mov	r6,r2
  803aa4:	1021883a 	mov	r16,r2
  803aa8:	d8800c15 	stw	r2,48(sp)
  803aac:	d8800615 	stw	r2,24(sp)
  803ab0:	003d8806 	br	8030d4 <__alt_mem_onchip_memory2+0xff7e30d4>
  803ab4:	d8800617 	ldw	r2,24(sp)
  803ab8:	00be9b16 	blt	zero,r2,803528 <__alt_mem_onchip_memory2+0xff7e3528>
  803abc:	10010f1e 	bne	r2,zero,803efc <_dtoa_r+0x116c>
  803ac0:	880b883a 	mov	r5,r17
  803ac4:	000d883a 	mov	r6,zero
  803ac8:	01d00534 	movhi	r7,16404
  803acc:	8009883a 	mov	r4,r16
  803ad0:	080c1e80 	call	80c1e8 <__muldf3>
  803ad4:	900d883a 	mov	r6,r18
  803ad8:	980f883a 	mov	r7,r19
  803adc:	1009883a 	mov	r4,r2
  803ae0:	180b883a 	mov	r5,r3
  803ae4:	080c0180 	call	80c018 <__gedf2>
  803ae8:	002b883a 	mov	r21,zero
  803aec:	0023883a 	mov	r17,zero
  803af0:	1000bf16 	blt	r2,zero,803df0 <_dtoa_r+0x1060>
  803af4:	d9802217 	ldw	r6,136(sp)
  803af8:	ddc00717 	ldw	r23,28(sp)
  803afc:	018c303a 	nor	r6,zero,r6
  803b00:	d9800515 	stw	r6,20(sp)
  803b04:	a80b883a 	mov	r5,r21
  803b08:	e009883a 	mov	r4,fp
  803b0c:	08064f00 	call	8064f0 <_Bfree>
  803b10:	883e4926 	beq	r17,zero,803438 <__alt_mem_onchip_memory2+0xff7e3438>
  803b14:	003fad06 	br	8039cc <__alt_mem_onchip_memory2+0xff7e39cc>
  803b18:	d9c01117 	ldw	r7,68(sp)
  803b1c:	3801bc26 	beq	r7,zero,804210 <_dtoa_r+0x1480>
  803b20:	10810cc4 	addi	r2,r2,1075
  803b24:	dd400a17 	ldw	r21,40(sp)
  803b28:	dd000817 	ldw	r20,32(sp)
  803b2c:	003f0a06 	br	803758 <__alt_mem_onchip_memory2+0xff7e3758>
  803b30:	00800704 	movi	r2,28
  803b34:	d9000817 	ldw	r4,32(sp)
  803b38:	a0a9883a 	add	r20,r20,r2
  803b3c:	b0ad883a 	add	r22,r22,r2
  803b40:	2089883a 	add	r4,r4,r2
  803b44:	d9000815 	stw	r4,32(sp)
  803b48:	003f5106 	br	803890 <__alt_mem_onchip_memory2+0xff7e3890>
  803b4c:	d8c00317 	ldw	r3,12(sp)
  803b50:	b8c1fc0e 	bge	r23,r3,804344 <_dtoa_r+0x15b4>
  803b54:	0027883a 	mov	r19,zero
  803b58:	b805883a 	mov	r2,r23
  803b5c:	003f3e06 	br	803858 <__alt_mem_onchip_memory2+0xff7e3858>
  803b60:	880b883a 	mov	r5,r17
  803b64:	e009883a 	mov	r4,fp
  803b68:	000f883a 	mov	r7,zero
  803b6c:	01800284 	movi	r6,10
  803b70:	08065180 	call	806518 <__multadd>
  803b74:	d9000c17 	ldw	r4,48(sp)
  803b78:	1023883a 	mov	r17,r2
  803b7c:	0102040e 	bge	zero,r4,804390 <_dtoa_r+0x1600>
  803b80:	d9000615 	stw	r4,24(sp)
  803b84:	0500050e 	bge	zero,r20,803b9c <_dtoa_r+0xe0c>
  803b88:	880b883a 	mov	r5,r17
  803b8c:	a00d883a 	mov	r6,r20
  803b90:	e009883a 	mov	r4,fp
  803b94:	0806c840 	call	806c84 <__lshift>
  803b98:	1023883a 	mov	r17,r2
  803b9c:	9801241e 	bne	r19,zero,804030 <_dtoa_r+0x12a0>
  803ba0:	8829883a 	mov	r20,r17
  803ba4:	d9000617 	ldw	r4,24(sp)
  803ba8:	dcc00717 	ldw	r19,28(sp)
  803bac:	9480004c 	andi	r18,r18,1
  803bb0:	20bfffc4 	addi	r2,r4,-1
  803bb4:	9885883a 	add	r2,r19,r2
  803bb8:	d8800415 	stw	r2,16(sp)
  803bbc:	dc800615 	stw	r18,24(sp)
  803bc0:	a80b883a 	mov	r5,r21
  803bc4:	8009883a 	mov	r4,r16
  803bc8:	0802b680 	call	802b68 <quorem>
  803bcc:	880b883a 	mov	r5,r17
  803bd0:	8009883a 	mov	r4,r16
  803bd4:	102f883a 	mov	r23,r2
  803bd8:	0806dcc0 	call	806dcc <__mcmp>
  803bdc:	a80b883a 	mov	r5,r21
  803be0:	a00d883a 	mov	r6,r20
  803be4:	e009883a 	mov	r4,fp
  803be8:	102d883a 	mov	r22,r2
  803bec:	0806e2c0 	call	806e2c <__mdiff>
  803bf0:	1007883a 	mov	r3,r2
  803bf4:	10800317 	ldw	r2,12(r2)
  803bf8:	bc800c04 	addi	r18,r23,48
  803bfc:	180b883a 	mov	r5,r3
  803c00:	10004e1e 	bne	r2,zero,803d3c <_dtoa_r+0xfac>
  803c04:	8009883a 	mov	r4,r16
  803c08:	d8c01615 	stw	r3,88(sp)
  803c0c:	0806dcc0 	call	806dcc <__mcmp>
  803c10:	d8c01617 	ldw	r3,88(sp)
  803c14:	e009883a 	mov	r4,fp
  803c18:	d8801615 	stw	r2,88(sp)
  803c1c:	180b883a 	mov	r5,r3
  803c20:	08064f00 	call	8064f0 <_Bfree>
  803c24:	d8801617 	ldw	r2,88(sp)
  803c28:	1000041e 	bne	r2,zero,803c3c <_dtoa_r+0xeac>
  803c2c:	d9800317 	ldw	r6,12(sp)
  803c30:	3000021e 	bne	r6,zero,803c3c <_dtoa_r+0xeac>
  803c34:	d8c00617 	ldw	r3,24(sp)
  803c38:	18003726 	beq	r3,zero,803d18 <_dtoa_r+0xf88>
  803c3c:	b0002016 	blt	r22,zero,803cc0 <_dtoa_r+0xf30>
  803c40:	b000041e 	bne	r22,zero,803c54 <_dtoa_r+0xec4>
  803c44:	d9000317 	ldw	r4,12(sp)
  803c48:	2000021e 	bne	r4,zero,803c54 <_dtoa_r+0xec4>
  803c4c:	d8c00617 	ldw	r3,24(sp)
  803c50:	18001b26 	beq	r3,zero,803cc0 <_dtoa_r+0xf30>
  803c54:	00810716 	blt	zero,r2,804074 <_dtoa_r+0x12e4>
  803c58:	d8c00417 	ldw	r3,16(sp)
  803c5c:	9d800044 	addi	r22,r19,1
  803c60:	9c800005 	stb	r18,0(r19)
  803c64:	b02f883a 	mov	r23,r22
  803c68:	98c10626 	beq	r19,r3,804084 <_dtoa_r+0x12f4>
  803c6c:	800b883a 	mov	r5,r16
  803c70:	000f883a 	mov	r7,zero
  803c74:	01800284 	movi	r6,10
  803c78:	e009883a 	mov	r4,fp
  803c7c:	08065180 	call	806518 <__multadd>
  803c80:	1021883a 	mov	r16,r2
  803c84:	000f883a 	mov	r7,zero
  803c88:	01800284 	movi	r6,10
  803c8c:	880b883a 	mov	r5,r17
  803c90:	e009883a 	mov	r4,fp
  803c94:	8d002526 	beq	r17,r20,803d2c <_dtoa_r+0xf9c>
  803c98:	08065180 	call	806518 <__multadd>
  803c9c:	a00b883a 	mov	r5,r20
  803ca0:	000f883a 	mov	r7,zero
  803ca4:	01800284 	movi	r6,10
  803ca8:	e009883a 	mov	r4,fp
  803cac:	1023883a 	mov	r17,r2
  803cb0:	08065180 	call	806518 <__multadd>
  803cb4:	1029883a 	mov	r20,r2
  803cb8:	b027883a 	mov	r19,r22
  803cbc:	003fc006 	br	803bc0 <__alt_mem_onchip_memory2+0xff7e3bc0>
  803cc0:	9011883a 	mov	r8,r18
  803cc4:	00800e0e 	bge	zero,r2,803d00 <_dtoa_r+0xf70>
  803cc8:	800b883a 	mov	r5,r16
  803ccc:	01800044 	movi	r6,1
  803cd0:	e009883a 	mov	r4,fp
  803cd4:	da001715 	stw	r8,92(sp)
  803cd8:	0806c840 	call	806c84 <__lshift>
  803cdc:	a80b883a 	mov	r5,r21
  803ce0:	1009883a 	mov	r4,r2
  803ce4:	1021883a 	mov	r16,r2
  803ce8:	0806dcc0 	call	806dcc <__mcmp>
  803cec:	da001717 	ldw	r8,92(sp)
  803cf0:	0081960e 	bge	zero,r2,80434c <_dtoa_r+0x15bc>
  803cf4:	00800e44 	movi	r2,57
  803cf8:	40817026 	beq	r8,r2,8042bc <_dtoa_r+0x152c>
  803cfc:	ba000c44 	addi	r8,r23,49
  803d00:	8825883a 	mov	r18,r17
  803d04:	9dc00044 	addi	r23,r19,1
  803d08:	9a000005 	stb	r8,0(r19)
  803d0c:	a023883a 	mov	r17,r20
  803d10:	dc000915 	stw	r16,36(sp)
  803d14:	003f2406 	br	8039a8 <__alt_mem_onchip_memory2+0xff7e39a8>
  803d18:	00800e44 	movi	r2,57
  803d1c:	9011883a 	mov	r8,r18
  803d20:	90816626 	beq	r18,r2,8042bc <_dtoa_r+0x152c>
  803d24:	05bff516 	blt	zero,r22,803cfc <__alt_mem_onchip_memory2+0xff7e3cfc>
  803d28:	003ff506 	br	803d00 <__alt_mem_onchip_memory2+0xff7e3d00>
  803d2c:	08065180 	call	806518 <__multadd>
  803d30:	1023883a 	mov	r17,r2
  803d34:	1029883a 	mov	r20,r2
  803d38:	003fdf06 	br	803cb8 <__alt_mem_onchip_memory2+0xff7e3cb8>
  803d3c:	e009883a 	mov	r4,fp
  803d40:	08064f00 	call	8064f0 <_Bfree>
  803d44:	00800044 	movi	r2,1
  803d48:	003fbc06 	br	803c3c <__alt_mem_onchip_memory2+0xff7e3c3c>
  803d4c:	a80b883a 	mov	r5,r21
  803d50:	8009883a 	mov	r4,r16
  803d54:	0806dcc0 	call	806dcc <__mcmp>
  803d58:	103edb0e 	bge	r2,zero,8038c8 <__alt_mem_onchip_memory2+0xff7e38c8>
  803d5c:	800b883a 	mov	r5,r16
  803d60:	000f883a 	mov	r7,zero
  803d64:	01800284 	movi	r6,10
  803d68:	e009883a 	mov	r4,fp
  803d6c:	08065180 	call	806518 <__multadd>
  803d70:	1021883a 	mov	r16,r2
  803d74:	d8800517 	ldw	r2,20(sp)
  803d78:	d8c00b17 	ldw	r3,44(sp)
  803d7c:	10bfffc4 	addi	r2,r2,-1
  803d80:	d8800515 	stw	r2,20(sp)
  803d84:	183f761e 	bne	r3,zero,803b60 <__alt_mem_onchip_memory2+0xff7e3b60>
  803d88:	d9000c17 	ldw	r4,48(sp)
  803d8c:	0101730e 	bge	zero,r4,80435c <_dtoa_r+0x15cc>
  803d90:	d9000615 	stw	r4,24(sp)
  803d94:	003ed006 	br	8038d8 <__alt_mem_onchip_memory2+0xff7e38d8>
  803d98:	00800084 	movi	r2,2
  803d9c:	3081861e 	bne	r6,r2,8043b8 <_dtoa_r+0x1628>
  803da0:	d8000b15 	stw	zero,44(sp)
  803da4:	003f3c06 	br	803a98 <__alt_mem_onchip_memory2+0xff7e3a98>
  803da8:	dc000917 	ldw	r16,36(sp)
  803dac:	003e9206 	br	8037f8 <__alt_mem_onchip_memory2+0xff7e37f8>
  803db0:	d9c00317 	ldw	r7,12(sp)
  803db4:	00800084 	movi	r2,2
  803db8:	11fec50e 	bge	r2,r7,8038d0 <__alt_mem_onchip_memory2+0xff7e38d0>
  803dbc:	d9000617 	ldw	r4,24(sp)
  803dc0:	20013c1e 	bne	r4,zero,8042b4 <_dtoa_r+0x1524>
  803dc4:	a80b883a 	mov	r5,r21
  803dc8:	000f883a 	mov	r7,zero
  803dcc:	01800144 	movi	r6,5
  803dd0:	e009883a 	mov	r4,fp
  803dd4:	08065180 	call	806518 <__multadd>
  803dd8:	100b883a 	mov	r5,r2
  803ddc:	8009883a 	mov	r4,r16
  803de0:	102b883a 	mov	r21,r2
  803de4:	0806dcc0 	call	806dcc <__mcmp>
  803de8:	dc000915 	stw	r16,36(sp)
  803dec:	00bf410e 	bge	zero,r2,803af4 <__alt_mem_onchip_memory2+0xff7e3af4>
  803df0:	d9c00717 	ldw	r7,28(sp)
  803df4:	00800c44 	movi	r2,49
  803df8:	38800005 	stb	r2,0(r7)
  803dfc:	d8800517 	ldw	r2,20(sp)
  803e00:	3dc00044 	addi	r23,r7,1
  803e04:	10800044 	addi	r2,r2,1
  803e08:	d8800515 	stw	r2,20(sp)
  803e0c:	003f3d06 	br	803b04 <__alt_mem_onchip_memory2+0xff7e3b04>
  803e10:	d9800517 	ldw	r6,20(sp)
  803e14:	d9c00717 	ldw	r7,28(sp)
  803e18:	00800c44 	movi	r2,49
  803e1c:	31800044 	addi	r6,r6,1
  803e20:	d9800515 	stw	r6,20(sp)
  803e24:	38800005 	stb	r2,0(r7)
  803e28:	003edf06 	br	8039a8 <__alt_mem_onchip_memory2+0xff7e39a8>
  803e2c:	d8000b15 	stw	zero,44(sp)
  803e30:	003c9f06 	br	8030b0 <__alt_mem_onchip_memory2+0xff7e30b0>
  803e34:	903e7e1e 	bne	r18,zero,803830 <__alt_mem_onchip_memory2+0xff7e3830>
  803e38:	00800434 	movhi	r2,16
  803e3c:	10bfffc4 	addi	r2,r2,-1
  803e40:	9884703a 	and	r2,r19,r2
  803e44:	1000ea1e 	bne	r2,zero,8041f0 <_dtoa_r+0x1460>
  803e48:	9cdffc2c 	andhi	r19,r19,32752
  803e4c:	9800e826 	beq	r19,zero,8041f0 <_dtoa_r+0x1460>
  803e50:	d9c00817 	ldw	r7,32(sp)
  803e54:	b5800044 	addi	r22,r22,1
  803e58:	04c00044 	movi	r19,1
  803e5c:	39c00044 	addi	r7,r7,1
  803e60:	d9c00815 	stw	r7,32(sp)
  803e64:	d8800d17 	ldw	r2,52(sp)
  803e68:	103e721e 	bne	r2,zero,803834 <__alt_mem_onchip_memory2+0xff7e3834>
  803e6c:	00800044 	movi	r2,1
  803e70:	003e7906 	br	803858 <__alt_mem_onchip_memory2+0xff7e3858>
  803e74:	8009883a 	mov	r4,r16
  803e78:	080d3d00 	call	80d3d0 <__floatsidf>
  803e7c:	d9800f17 	ldw	r6,60(sp)
  803e80:	d9c01017 	ldw	r7,64(sp)
  803e84:	1009883a 	mov	r4,r2
  803e88:	180b883a 	mov	r5,r3
  803e8c:	080c1e80 	call	80c1e8 <__muldf3>
  803e90:	000d883a 	mov	r6,zero
  803e94:	01d00734 	movhi	r7,16412
  803e98:	1009883a 	mov	r4,r2
  803e9c:	180b883a 	mov	r5,r3
  803ea0:	080ad140 	call	80ad14 <__adddf3>
  803ea4:	047f3034 	movhi	r17,64704
  803ea8:	1021883a 	mov	r16,r2
  803eac:	1c63883a 	add	r17,r3,r17
  803eb0:	d9000f17 	ldw	r4,60(sp)
  803eb4:	d9401017 	ldw	r5,64(sp)
  803eb8:	000d883a 	mov	r6,zero
  803ebc:	01d00534 	movhi	r7,16404
  803ec0:	080ca540 	call	80ca54 <__subdf3>
  803ec4:	800d883a 	mov	r6,r16
  803ec8:	880f883a 	mov	r7,r17
  803ecc:	1009883a 	mov	r4,r2
  803ed0:	180b883a 	mov	r5,r3
  803ed4:	102b883a 	mov	r21,r2
  803ed8:	1829883a 	mov	r20,r3
  803edc:	080c0180 	call	80c018 <__gedf2>
  803ee0:	00806c16 	blt	zero,r2,804094 <_dtoa_r+0x1304>
  803ee4:	89e0003c 	xorhi	r7,r17,32768
  803ee8:	800d883a 	mov	r6,r16
  803eec:	a809883a 	mov	r4,r21
  803ef0:	a00b883a 	mov	r5,r20
  803ef4:	080c0f40 	call	80c0f4 <__ledf2>
  803ef8:	103d7e0e 	bge	r2,zero,8034f4 <__alt_mem_onchip_memory2+0xff7e34f4>
  803efc:	002b883a 	mov	r21,zero
  803f00:	0023883a 	mov	r17,zero
  803f04:	003efb06 	br	803af4 <__alt_mem_onchip_memory2+0xff7e3af4>
  803f08:	d8800717 	ldw	r2,28(sp)
  803f0c:	003bd006 	br	802e50 <__alt_mem_onchip_memory2+0xff7e2e50>
  803f10:	d9000a17 	ldw	r4,40(sp)
  803f14:	d9800d17 	ldw	r6,52(sp)
  803f18:	dd400a15 	stw	r21,40(sp)
  803f1c:	a905c83a 	sub	r2,r21,r4
  803f20:	308d883a 	add	r6,r6,r2
  803f24:	d9800d15 	stw	r6,52(sp)
  803f28:	002b883a 	mov	r21,zero
  803f2c:	003e0606 	br	803748 <__alt_mem_onchip_memory2+0xff7e3748>
  803f30:	9023883a 	mov	r17,r18
  803f34:	9829883a 	mov	r20,r19
  803f38:	04000084 	movi	r16,2
  803f3c:	003c9206 	br	803188 <__alt_mem_onchip_memory2+0xff7e3188>
  803f40:	04000044 	movi	r16,1
  803f44:	dc000c15 	stw	r16,48(sp)
  803f48:	dc000615 	stw	r16,24(sp)
  803f4c:	dc002215 	stw	r16,136(sp)
  803f50:	e0001115 	stw	zero,68(fp)
  803f54:	000b883a 	mov	r5,zero
  803f58:	003c6906 	br	803100 <__alt_mem_onchip_memory2+0xff7e3100>
  803f5c:	3021883a 	mov	r16,r6
  803f60:	003ffb06 	br	803f50 <__alt_mem_onchip_memory2+0xff7e3f50>
  803f64:	1000021e 	bne	r2,zero,803f70 <_dtoa_r+0x11e0>
  803f68:	4200004c 	andi	r8,r8,1
  803f6c:	403e7d1e 	bne	r8,zero,803964 <__alt_mem_onchip_memory2+0xff7e3964>
  803f70:	01000c04 	movi	r4,48
  803f74:	00000106 	br	803f7c <_dtoa_r+0x11ec>
  803f78:	102f883a 	mov	r23,r2
  803f7c:	b8bfffc4 	addi	r2,r23,-1
  803f80:	10c00007 	ldb	r3,0(r2)
  803f84:	193ffc26 	beq	r3,r4,803f78 <__alt_mem_onchip_memory2+0xff7e3f78>
  803f88:	003e8706 	br	8039a8 <__alt_mem_onchip_memory2+0xff7e39a8>
  803f8c:	d8800517 	ldw	r2,20(sp)
  803f90:	00a3c83a 	sub	r17,zero,r2
  803f94:	8800a426 	beq	r17,zero,804228 <_dtoa_r+0x1498>
  803f98:	888003cc 	andi	r2,r17,15
  803f9c:	100490fa 	slli	r2,r2,3
  803fa0:	00c02074 	movhi	r3,129
  803fa4:	18c1f904 	addi	r3,r3,2020
  803fa8:	1885883a 	add	r2,r3,r2
  803fac:	11800017 	ldw	r6,0(r2)
  803fb0:	11c00117 	ldw	r7,4(r2)
  803fb4:	9009883a 	mov	r4,r18
  803fb8:	980b883a 	mov	r5,r19
  803fbc:	8823d13a 	srai	r17,r17,4
  803fc0:	080c1e80 	call	80c1e8 <__muldf3>
  803fc4:	d8800f15 	stw	r2,60(sp)
  803fc8:	d8c01015 	stw	r3,64(sp)
  803fcc:	8800e826 	beq	r17,zero,804370 <_dtoa_r+0x15e0>
  803fd0:	05002074 	movhi	r20,129
  803fd4:	a501ef04 	addi	r20,r20,1980
  803fd8:	04000084 	movi	r16,2
  803fdc:	8980004c 	andi	r6,r17,1
  803fe0:	1009883a 	mov	r4,r2
  803fe4:	8823d07a 	srai	r17,r17,1
  803fe8:	180b883a 	mov	r5,r3
  803fec:	30000426 	beq	r6,zero,804000 <_dtoa_r+0x1270>
  803ff0:	a1800017 	ldw	r6,0(r20)
  803ff4:	a1c00117 	ldw	r7,4(r20)
  803ff8:	84000044 	addi	r16,r16,1
  803ffc:	080c1e80 	call	80c1e8 <__muldf3>
  804000:	a5000204 	addi	r20,r20,8
  804004:	883ff51e 	bne	r17,zero,803fdc <__alt_mem_onchip_memory2+0xff7e3fdc>
  804008:	d8800f15 	stw	r2,60(sp)
  80400c:	d8c01015 	stw	r3,64(sp)
  804010:	003c7606 	br	8031ec <__alt_mem_onchip_memory2+0xff7e31ec>
  804014:	00c00c04 	movi	r3,48
  804018:	10c00005 	stb	r3,0(r2)
  80401c:	d8c00517 	ldw	r3,20(sp)
  804020:	bd3fffc3 	ldbu	r20,-1(r23)
  804024:	18c00044 	addi	r3,r3,1
  804028:	d8c00515 	stw	r3,20(sp)
  80402c:	003db906 	br	803714 <__alt_mem_onchip_memory2+0xff7e3714>
  804030:	89400117 	ldw	r5,4(r17)
  804034:	e009883a 	mov	r4,fp
  804038:	08064480 	call	806448 <_Balloc>
  80403c:	89800417 	ldw	r6,16(r17)
  804040:	89400304 	addi	r5,r17,12
  804044:	11000304 	addi	r4,r2,12
  804048:	31800084 	addi	r6,r6,2
  80404c:	318d883a 	add	r6,r6,r6
  804050:	318d883a 	add	r6,r6,r6
  804054:	1027883a 	mov	r19,r2
  804058:	080607c0 	call	80607c <memcpy>
  80405c:	01800044 	movi	r6,1
  804060:	980b883a 	mov	r5,r19
  804064:	e009883a 	mov	r4,fp
  804068:	0806c840 	call	806c84 <__lshift>
  80406c:	1029883a 	mov	r20,r2
  804070:	003ecc06 	br	803ba4 <__alt_mem_onchip_memory2+0xff7e3ba4>
  804074:	00800e44 	movi	r2,57
  804078:	90809026 	beq	r18,r2,8042bc <_dtoa_r+0x152c>
  80407c:	92000044 	addi	r8,r18,1
  804080:	003f1f06 	br	803d00 <__alt_mem_onchip_memory2+0xff7e3d00>
  804084:	9011883a 	mov	r8,r18
  804088:	8825883a 	mov	r18,r17
  80408c:	a023883a 	mov	r17,r20
  804090:	003e2906 	br	803938 <__alt_mem_onchip_memory2+0xff7e3938>
  804094:	002b883a 	mov	r21,zero
  804098:	0023883a 	mov	r17,zero
  80409c:	003f5406 	br	803df0 <__alt_mem_onchip_memory2+0xff7e3df0>
  8040a0:	61bfffc4 	addi	r6,r12,-1
  8040a4:	300490fa 	slli	r2,r6,3
  8040a8:	00c02074 	movhi	r3,129
  8040ac:	18c1f904 	addi	r3,r3,2020
  8040b0:	1885883a 	add	r2,r3,r2
  8040b4:	11000017 	ldw	r4,0(r2)
  8040b8:	11400117 	ldw	r5,4(r2)
  8040bc:	d8800717 	ldw	r2,28(sp)
  8040c0:	880f883a 	mov	r7,r17
  8040c4:	d9801215 	stw	r6,72(sp)
  8040c8:	800d883a 	mov	r6,r16
  8040cc:	db001615 	stw	r12,88(sp)
  8040d0:	15c00044 	addi	r23,r2,1
  8040d4:	080c1e80 	call	80c1e8 <__muldf3>
  8040d8:	d9401017 	ldw	r5,64(sp)
  8040dc:	d9000f17 	ldw	r4,60(sp)
  8040e0:	d8c01515 	stw	r3,84(sp)
  8040e4:	d8801415 	stw	r2,80(sp)
  8040e8:	080d3500 	call	80d350 <__fixdfsi>
  8040ec:	1009883a 	mov	r4,r2
  8040f0:	1021883a 	mov	r16,r2
  8040f4:	080d3d00 	call	80d3d0 <__floatsidf>
  8040f8:	d9000f17 	ldw	r4,60(sp)
  8040fc:	d9401017 	ldw	r5,64(sp)
  804100:	100d883a 	mov	r6,r2
  804104:	180f883a 	mov	r7,r3
  804108:	080ca540 	call	80ca54 <__subdf3>
  80410c:	1829883a 	mov	r20,r3
  804110:	d8c00717 	ldw	r3,28(sp)
  804114:	84000c04 	addi	r16,r16,48
  804118:	1023883a 	mov	r17,r2
  80411c:	1c000005 	stb	r16,0(r3)
  804120:	db001617 	ldw	r12,88(sp)
  804124:	00800044 	movi	r2,1
  804128:	60802226 	beq	r12,r2,8041b4 <_dtoa_r+0x1424>
  80412c:	d9c00717 	ldw	r7,28(sp)
  804130:	8805883a 	mov	r2,r17
  804134:	b82b883a 	mov	r21,r23
  804138:	3b19883a 	add	r12,r7,r12
  80413c:	6023883a 	mov	r17,r12
  804140:	a007883a 	mov	r3,r20
  804144:	dc800f15 	stw	r18,60(sp)
  804148:	000d883a 	mov	r6,zero
  80414c:	01d00934 	movhi	r7,16420
  804150:	1009883a 	mov	r4,r2
  804154:	180b883a 	mov	r5,r3
  804158:	080c1e80 	call	80c1e8 <__muldf3>
  80415c:	180b883a 	mov	r5,r3
  804160:	1009883a 	mov	r4,r2
  804164:	1829883a 	mov	r20,r3
  804168:	1025883a 	mov	r18,r2
  80416c:	080d3500 	call	80d350 <__fixdfsi>
  804170:	1009883a 	mov	r4,r2
  804174:	1021883a 	mov	r16,r2
  804178:	080d3d00 	call	80d3d0 <__floatsidf>
  80417c:	100d883a 	mov	r6,r2
  804180:	180f883a 	mov	r7,r3
  804184:	9009883a 	mov	r4,r18
  804188:	a00b883a 	mov	r5,r20
  80418c:	84000c04 	addi	r16,r16,48
  804190:	080ca540 	call	80ca54 <__subdf3>
  804194:	ad400044 	addi	r21,r21,1
  804198:	ac3fffc5 	stb	r16,-1(r21)
  80419c:	ac7fea1e 	bne	r21,r17,804148 <__alt_mem_onchip_memory2+0xff7e4148>
  8041a0:	1023883a 	mov	r17,r2
  8041a4:	d8801217 	ldw	r2,72(sp)
  8041a8:	dc800f17 	ldw	r18,60(sp)
  8041ac:	1829883a 	mov	r20,r3
  8041b0:	b8af883a 	add	r23,r23,r2
  8041b4:	d9001417 	ldw	r4,80(sp)
  8041b8:	d9401517 	ldw	r5,84(sp)
  8041bc:	000d883a 	mov	r6,zero
  8041c0:	01cff834 	movhi	r7,16352
  8041c4:	080ad140 	call	80ad14 <__adddf3>
  8041c8:	880d883a 	mov	r6,r17
  8041cc:	a00f883a 	mov	r7,r20
  8041d0:	1009883a 	mov	r4,r2
  8041d4:	180b883a 	mov	r5,r3
  8041d8:	080c0f40 	call	80c0f4 <__ledf2>
  8041dc:	10003e0e 	bge	r2,zero,8042d8 <_dtoa_r+0x1548>
  8041e0:	d9001317 	ldw	r4,76(sp)
  8041e4:	bd3fffc3 	ldbu	r20,-1(r23)
  8041e8:	d9000515 	stw	r4,20(sp)
  8041ec:	003d3b06 	br	8036dc <__alt_mem_onchip_memory2+0xff7e36dc>
  8041f0:	0027883a 	mov	r19,zero
  8041f4:	003f1b06 	br	803e64 <__alt_mem_onchip_memory2+0xff7e3e64>
  8041f8:	d8800817 	ldw	r2,32(sp)
  8041fc:	11e9c83a 	sub	r20,r2,r7
  804200:	0005883a 	mov	r2,zero
  804204:	003d5406 	br	803758 <__alt_mem_onchip_memory2+0xff7e3758>
  804208:	00800044 	movi	r2,1
  80420c:	003dc706 	br	80392c <__alt_mem_onchip_memory2+0xff7e392c>
  804210:	d8c00217 	ldw	r3,8(sp)
  804214:	00800d84 	movi	r2,54
  804218:	dd400a17 	ldw	r21,40(sp)
  80421c:	10c5c83a 	sub	r2,r2,r3
  804220:	dd000817 	ldw	r20,32(sp)
  804224:	003d4c06 	br	803758 <__alt_mem_onchip_memory2+0xff7e3758>
  804228:	dc800f15 	stw	r18,60(sp)
  80422c:	dcc01015 	stw	r19,64(sp)
  804230:	04000084 	movi	r16,2
  804234:	003bed06 	br	8031ec <__alt_mem_onchip_memory2+0xff7e31ec>
  804238:	d9000617 	ldw	r4,24(sp)
  80423c:	203f0d26 	beq	r4,zero,803e74 <__alt_mem_onchip_memory2+0xff7e3e74>
  804240:	d9800c17 	ldw	r6,48(sp)
  804244:	01bcab0e 	bge	zero,r6,8034f4 <__alt_mem_onchip_memory2+0xff7e34f4>
  804248:	d9401017 	ldw	r5,64(sp)
  80424c:	d9000f17 	ldw	r4,60(sp)
  804250:	000d883a 	mov	r6,zero
  804254:	01d00934 	movhi	r7,16420
  804258:	080c1e80 	call	80c1e8 <__muldf3>
  80425c:	81000044 	addi	r4,r16,1
  804260:	d8800f15 	stw	r2,60(sp)
  804264:	d8c01015 	stw	r3,64(sp)
  804268:	080d3d00 	call	80d3d0 <__floatsidf>
  80426c:	d9800f17 	ldw	r6,60(sp)
  804270:	d9c01017 	ldw	r7,64(sp)
  804274:	1009883a 	mov	r4,r2
  804278:	180b883a 	mov	r5,r3
  80427c:	080c1e80 	call	80c1e8 <__muldf3>
  804280:	01d00734 	movhi	r7,16412
  804284:	000d883a 	mov	r6,zero
  804288:	1009883a 	mov	r4,r2
  80428c:	180b883a 	mov	r5,r3
  804290:	080ad140 	call	80ad14 <__adddf3>
  804294:	d9c00517 	ldw	r7,20(sp)
  804298:	047f3034 	movhi	r17,64704
  80429c:	1021883a 	mov	r16,r2
  8042a0:	39ffffc4 	addi	r7,r7,-1
  8042a4:	d9c01315 	stw	r7,76(sp)
  8042a8:	1c63883a 	add	r17,r3,r17
  8042ac:	db000c17 	ldw	r12,48(sp)
  8042b0:	003bea06 	br	80325c <__alt_mem_onchip_memory2+0xff7e325c>
  8042b4:	dc000915 	stw	r16,36(sp)
  8042b8:	003e0e06 	br	803af4 <__alt_mem_onchip_memory2+0xff7e3af4>
  8042bc:	01000e44 	movi	r4,57
  8042c0:	8825883a 	mov	r18,r17
  8042c4:	9dc00044 	addi	r23,r19,1
  8042c8:	99000005 	stb	r4,0(r19)
  8042cc:	a023883a 	mov	r17,r20
  8042d0:	dc000915 	stw	r16,36(sp)
  8042d4:	003da406 	br	803968 <__alt_mem_onchip_memory2+0xff7e3968>
  8042d8:	d9801417 	ldw	r6,80(sp)
  8042dc:	d9c01517 	ldw	r7,84(sp)
  8042e0:	0009883a 	mov	r4,zero
  8042e4:	014ff834 	movhi	r5,16352
  8042e8:	080ca540 	call	80ca54 <__subdf3>
  8042ec:	880d883a 	mov	r6,r17
  8042f0:	a00f883a 	mov	r7,r20
  8042f4:	1009883a 	mov	r4,r2
  8042f8:	180b883a 	mov	r5,r3
  8042fc:	080c0180 	call	80c018 <__gedf2>
  804300:	00bc7c0e 	bge	zero,r2,8034f4 <__alt_mem_onchip_memory2+0xff7e34f4>
  804304:	01000c04 	movi	r4,48
  804308:	00000106 	br	804310 <_dtoa_r+0x1580>
  80430c:	102f883a 	mov	r23,r2
  804310:	b8bfffc4 	addi	r2,r23,-1
  804314:	10c00007 	ldb	r3,0(r2)
  804318:	193ffc26 	beq	r3,r4,80430c <__alt_mem_onchip_memory2+0xff7e430c>
  80431c:	d9801317 	ldw	r6,76(sp)
  804320:	d9800515 	stw	r6,20(sp)
  804324:	003c4406 	br	803438 <__alt_mem_onchip_memory2+0xff7e3438>
  804328:	d9801317 	ldw	r6,76(sp)
  80432c:	d9800515 	stw	r6,20(sp)
  804330:	003cea06 	br	8036dc <__alt_mem_onchip_memory2+0xff7e36dc>
  804334:	dd800f17 	ldw	r22,60(sp)
  804338:	dcc01017 	ldw	r19,64(sp)
  80433c:	dc801217 	ldw	r18,72(sp)
  804340:	003c6c06 	br	8034f4 <__alt_mem_onchip_memory2+0xff7e34f4>
  804344:	903e031e 	bne	r18,zero,803b54 <__alt_mem_onchip_memory2+0xff7e3b54>
  804348:	003ebb06 	br	803e38 <__alt_mem_onchip_memory2+0xff7e3e38>
  80434c:	103e6c1e 	bne	r2,zero,803d00 <__alt_mem_onchip_memory2+0xff7e3d00>
  804350:	4080004c 	andi	r2,r8,1
  804354:	103e6a26 	beq	r2,zero,803d00 <__alt_mem_onchip_memory2+0xff7e3d00>
  804358:	003e6606 	br	803cf4 <__alt_mem_onchip_memory2+0xff7e3cf4>
  80435c:	d8c00317 	ldw	r3,12(sp)
  804360:	00800084 	movi	r2,2
  804364:	10c02916 	blt	r2,r3,80440c <_dtoa_r+0x167c>
  804368:	d9000c17 	ldw	r4,48(sp)
  80436c:	003e8806 	br	803d90 <__alt_mem_onchip_memory2+0xff7e3d90>
  804370:	04000084 	movi	r16,2
  804374:	003b9d06 	br	8031ec <__alt_mem_onchip_memory2+0xff7e31ec>
  804378:	d9001317 	ldw	r4,76(sp)
  80437c:	d9000515 	stw	r4,20(sp)
  804380:	003cd606 	br	8036dc <__alt_mem_onchip_memory2+0xff7e36dc>
  804384:	d8801317 	ldw	r2,76(sp)
  804388:	d8800515 	stw	r2,20(sp)
  80438c:	003c2a06 	br	803438 <__alt_mem_onchip_memory2+0xff7e3438>
  804390:	d9800317 	ldw	r6,12(sp)
  804394:	00800084 	movi	r2,2
  804398:	11801516 	blt	r2,r6,8043f0 <_dtoa_r+0x1660>
  80439c:	d9c00c17 	ldw	r7,48(sp)
  8043a0:	d9c00615 	stw	r7,24(sp)
  8043a4:	003df706 	br	803b84 <__alt_mem_onchip_memory2+0xff7e3b84>
  8043a8:	193d3926 	beq	r3,r4,803890 <__alt_mem_onchip_memory2+0xff7e3890>
  8043ac:	00c00f04 	movi	r3,60
  8043b0:	1885c83a 	sub	r2,r3,r2
  8043b4:	003ddf06 	br	803b34 <__alt_mem_onchip_memory2+0xff7e3b34>
  8043b8:	e009883a 	mov	r4,fp
  8043bc:	e0001115 	stw	zero,68(fp)
  8043c0:	000b883a 	mov	r5,zero
  8043c4:	08064480 	call	806448 <_Balloc>
  8043c8:	d8800715 	stw	r2,28(sp)
  8043cc:	d8c00717 	ldw	r3,28(sp)
  8043d0:	00bfffc4 	movi	r2,-1
  8043d4:	01000044 	movi	r4,1
  8043d8:	d8800c15 	stw	r2,48(sp)
  8043dc:	e0c01015 	stw	r3,64(fp)
  8043e0:	d9000b15 	stw	r4,44(sp)
  8043e4:	d8800615 	stw	r2,24(sp)
  8043e8:	d8002215 	stw	zero,136(sp)
  8043ec:	003c4106 	br	8034f4 <__alt_mem_onchip_memory2+0xff7e34f4>
  8043f0:	d8c00c17 	ldw	r3,48(sp)
  8043f4:	d8c00615 	stw	r3,24(sp)
  8043f8:	003e7006 	br	803dbc <__alt_mem_onchip_memory2+0xff7e3dbc>
  8043fc:	04400044 	movi	r17,1
  804400:	003b2006 	br	803084 <__alt_mem_onchip_memory2+0xff7e3084>
  804404:	000b883a 	mov	r5,zero
  804408:	003b3d06 	br	803100 <__alt_mem_onchip_memory2+0xff7e3100>
  80440c:	d8800c17 	ldw	r2,48(sp)
  804410:	d8800615 	stw	r2,24(sp)
  804414:	003e6906 	br	803dbc <__alt_mem_onchip_memory2+0xff7e3dbc>

00804418 <__sflush_r>:
  804418:	2880030b 	ldhu	r2,12(r5)
  80441c:	defffb04 	addi	sp,sp,-20
  804420:	dcc00315 	stw	r19,12(sp)
  804424:	dc400115 	stw	r17,4(sp)
  804428:	dfc00415 	stw	ra,16(sp)
  80442c:	dc800215 	stw	r18,8(sp)
  804430:	dc000015 	stw	r16,0(sp)
  804434:	10c0020c 	andi	r3,r2,8
  804438:	2823883a 	mov	r17,r5
  80443c:	2027883a 	mov	r19,r4
  804440:	1800311e 	bne	r3,zero,804508 <__sflush_r+0xf0>
  804444:	28c00117 	ldw	r3,4(r5)
  804448:	10820014 	ori	r2,r2,2048
  80444c:	2880030d 	sth	r2,12(r5)
  804450:	00c04b0e 	bge	zero,r3,804580 <__sflush_r+0x168>
  804454:	8a000a17 	ldw	r8,40(r17)
  804458:	40002326 	beq	r8,zero,8044e8 <__sflush_r+0xd0>
  80445c:	9c000017 	ldw	r16,0(r19)
  804460:	10c4000c 	andi	r3,r2,4096
  804464:	98000015 	stw	zero,0(r19)
  804468:	18004826 	beq	r3,zero,80458c <__sflush_r+0x174>
  80446c:	89801417 	ldw	r6,80(r17)
  804470:	10c0010c 	andi	r3,r2,4
  804474:	18000626 	beq	r3,zero,804490 <__sflush_r+0x78>
  804478:	88c00117 	ldw	r3,4(r17)
  80447c:	88800c17 	ldw	r2,48(r17)
  804480:	30cdc83a 	sub	r6,r6,r3
  804484:	10000226 	beq	r2,zero,804490 <__sflush_r+0x78>
  804488:	88800f17 	ldw	r2,60(r17)
  80448c:	308dc83a 	sub	r6,r6,r2
  804490:	89400717 	ldw	r5,28(r17)
  804494:	000f883a 	mov	r7,zero
  804498:	9809883a 	mov	r4,r19
  80449c:	403ee83a 	callr	r8
  8044a0:	00ffffc4 	movi	r3,-1
  8044a4:	10c04426 	beq	r2,r3,8045b8 <__sflush_r+0x1a0>
  8044a8:	88c0030b 	ldhu	r3,12(r17)
  8044ac:	89000417 	ldw	r4,16(r17)
  8044b0:	88000115 	stw	zero,4(r17)
  8044b4:	197dffcc 	andi	r5,r3,63487
  8044b8:	8940030d 	sth	r5,12(r17)
  8044bc:	89000015 	stw	r4,0(r17)
  8044c0:	18c4000c 	andi	r3,r3,4096
  8044c4:	18002c1e 	bne	r3,zero,804578 <__sflush_r+0x160>
  8044c8:	89400c17 	ldw	r5,48(r17)
  8044cc:	9c000015 	stw	r16,0(r19)
  8044d0:	28000526 	beq	r5,zero,8044e8 <__sflush_r+0xd0>
  8044d4:	88801004 	addi	r2,r17,64
  8044d8:	28800226 	beq	r5,r2,8044e4 <__sflush_r+0xcc>
  8044dc:	9809883a 	mov	r4,r19
  8044e0:	0804b940 	call	804b94 <_free_r>
  8044e4:	88000c15 	stw	zero,48(r17)
  8044e8:	0005883a 	mov	r2,zero
  8044ec:	dfc00417 	ldw	ra,16(sp)
  8044f0:	dcc00317 	ldw	r19,12(sp)
  8044f4:	dc800217 	ldw	r18,8(sp)
  8044f8:	dc400117 	ldw	r17,4(sp)
  8044fc:	dc000017 	ldw	r16,0(sp)
  804500:	dec00504 	addi	sp,sp,20
  804504:	f800283a 	ret
  804508:	2c800417 	ldw	r18,16(r5)
  80450c:	903ff626 	beq	r18,zero,8044e8 <__alt_mem_onchip_memory2+0xff7e44e8>
  804510:	2c000017 	ldw	r16,0(r5)
  804514:	108000cc 	andi	r2,r2,3
  804518:	2c800015 	stw	r18,0(r5)
  80451c:	84a1c83a 	sub	r16,r16,r18
  804520:	1000131e 	bne	r2,zero,804570 <__sflush_r+0x158>
  804524:	28800517 	ldw	r2,20(r5)
  804528:	88800215 	stw	r2,8(r17)
  80452c:	04000316 	blt	zero,r16,80453c <__sflush_r+0x124>
  804530:	003fed06 	br	8044e8 <__alt_mem_onchip_memory2+0xff7e44e8>
  804534:	90a5883a 	add	r18,r18,r2
  804538:	043feb0e 	bge	zero,r16,8044e8 <__alt_mem_onchip_memory2+0xff7e44e8>
  80453c:	88800917 	ldw	r2,36(r17)
  804540:	89400717 	ldw	r5,28(r17)
  804544:	800f883a 	mov	r7,r16
  804548:	900d883a 	mov	r6,r18
  80454c:	9809883a 	mov	r4,r19
  804550:	103ee83a 	callr	r2
  804554:	80a1c83a 	sub	r16,r16,r2
  804558:	00bff616 	blt	zero,r2,804534 <__alt_mem_onchip_memory2+0xff7e4534>
  80455c:	88c0030b 	ldhu	r3,12(r17)
  804560:	00bfffc4 	movi	r2,-1
  804564:	18c01014 	ori	r3,r3,64
  804568:	88c0030d 	sth	r3,12(r17)
  80456c:	003fdf06 	br	8044ec <__alt_mem_onchip_memory2+0xff7e44ec>
  804570:	0005883a 	mov	r2,zero
  804574:	003fec06 	br	804528 <__alt_mem_onchip_memory2+0xff7e4528>
  804578:	88801415 	stw	r2,80(r17)
  80457c:	003fd206 	br	8044c8 <__alt_mem_onchip_memory2+0xff7e44c8>
  804580:	28c00f17 	ldw	r3,60(r5)
  804584:	00ffb316 	blt	zero,r3,804454 <__alt_mem_onchip_memory2+0xff7e4454>
  804588:	003fd706 	br	8044e8 <__alt_mem_onchip_memory2+0xff7e44e8>
  80458c:	89400717 	ldw	r5,28(r17)
  804590:	000d883a 	mov	r6,zero
  804594:	01c00044 	movi	r7,1
  804598:	9809883a 	mov	r4,r19
  80459c:	403ee83a 	callr	r8
  8045a0:	100d883a 	mov	r6,r2
  8045a4:	00bfffc4 	movi	r2,-1
  8045a8:	30801426 	beq	r6,r2,8045fc <__sflush_r+0x1e4>
  8045ac:	8880030b 	ldhu	r2,12(r17)
  8045b0:	8a000a17 	ldw	r8,40(r17)
  8045b4:	003fae06 	br	804470 <__alt_mem_onchip_memory2+0xff7e4470>
  8045b8:	98c00017 	ldw	r3,0(r19)
  8045bc:	183fba26 	beq	r3,zero,8044a8 <__alt_mem_onchip_memory2+0xff7e44a8>
  8045c0:	01000744 	movi	r4,29
  8045c4:	19000626 	beq	r3,r4,8045e0 <__sflush_r+0x1c8>
  8045c8:	01000584 	movi	r4,22
  8045cc:	19000426 	beq	r3,r4,8045e0 <__sflush_r+0x1c8>
  8045d0:	88c0030b 	ldhu	r3,12(r17)
  8045d4:	18c01014 	ori	r3,r3,64
  8045d8:	88c0030d 	sth	r3,12(r17)
  8045dc:	003fc306 	br	8044ec <__alt_mem_onchip_memory2+0xff7e44ec>
  8045e0:	8880030b 	ldhu	r2,12(r17)
  8045e4:	88c00417 	ldw	r3,16(r17)
  8045e8:	88000115 	stw	zero,4(r17)
  8045ec:	10bdffcc 	andi	r2,r2,63487
  8045f0:	8880030d 	sth	r2,12(r17)
  8045f4:	88c00015 	stw	r3,0(r17)
  8045f8:	003fb306 	br	8044c8 <__alt_mem_onchip_memory2+0xff7e44c8>
  8045fc:	98800017 	ldw	r2,0(r19)
  804600:	103fea26 	beq	r2,zero,8045ac <__alt_mem_onchip_memory2+0xff7e45ac>
  804604:	00c00744 	movi	r3,29
  804608:	10c00226 	beq	r2,r3,804614 <__sflush_r+0x1fc>
  80460c:	00c00584 	movi	r3,22
  804610:	10c0031e 	bne	r2,r3,804620 <__sflush_r+0x208>
  804614:	9c000015 	stw	r16,0(r19)
  804618:	0005883a 	mov	r2,zero
  80461c:	003fb306 	br	8044ec <__alt_mem_onchip_memory2+0xff7e44ec>
  804620:	88c0030b 	ldhu	r3,12(r17)
  804624:	3005883a 	mov	r2,r6
  804628:	18c01014 	ori	r3,r3,64
  80462c:	88c0030d 	sth	r3,12(r17)
  804630:	003fae06 	br	8044ec <__alt_mem_onchip_memory2+0xff7e44ec>

00804634 <_fflush_r>:
  804634:	defffd04 	addi	sp,sp,-12
  804638:	dc000115 	stw	r16,4(sp)
  80463c:	dfc00215 	stw	ra,8(sp)
  804640:	2021883a 	mov	r16,r4
  804644:	20000226 	beq	r4,zero,804650 <_fflush_r+0x1c>
  804648:	20800e17 	ldw	r2,56(r4)
  80464c:	10000c26 	beq	r2,zero,804680 <_fflush_r+0x4c>
  804650:	2880030f 	ldh	r2,12(r5)
  804654:	1000051e 	bne	r2,zero,80466c <_fflush_r+0x38>
  804658:	0005883a 	mov	r2,zero
  80465c:	dfc00217 	ldw	ra,8(sp)
  804660:	dc000117 	ldw	r16,4(sp)
  804664:	dec00304 	addi	sp,sp,12
  804668:	f800283a 	ret
  80466c:	8009883a 	mov	r4,r16
  804670:	dfc00217 	ldw	ra,8(sp)
  804674:	dc000117 	ldw	r16,4(sp)
  804678:	dec00304 	addi	sp,sp,12
  80467c:	08044181 	jmpi	804418 <__sflush_r>
  804680:	d9400015 	stw	r5,0(sp)
  804684:	0804a200 	call	804a20 <__sinit>
  804688:	d9400017 	ldw	r5,0(sp)
  80468c:	003ff006 	br	804650 <__alt_mem_onchip_memory2+0xff7e4650>

00804690 <fflush>:
  804690:	20000526 	beq	r4,zero,8046a8 <fflush+0x18>
  804694:	00802074 	movhi	r2,129
  804698:	10895e04 	addi	r2,r2,9592
  80469c:	200b883a 	mov	r5,r4
  8046a0:	11000017 	ldw	r4,0(r2)
  8046a4:	08046341 	jmpi	804634 <_fflush_r>
  8046a8:	00802074 	movhi	r2,129
  8046ac:	10895d04 	addi	r2,r2,9588
  8046b0:	11000017 	ldw	r4,0(r2)
  8046b4:	01402034 	movhi	r5,128
  8046b8:	29518d04 	addi	r5,r5,17972
  8046bc:	08054301 	jmpi	805430 <_fwalk_reent>

008046c0 <__fp_unlock>:
  8046c0:	0005883a 	mov	r2,zero
  8046c4:	f800283a 	ret

008046c8 <_cleanup_r>:
  8046c8:	01402074 	movhi	r5,129
  8046cc:	2965ef04 	addi	r5,r5,-26692
  8046d0:	08054301 	jmpi	805430 <_fwalk_reent>

008046d4 <__sinit.part.1>:
  8046d4:	defff704 	addi	sp,sp,-36
  8046d8:	00c02034 	movhi	r3,128
  8046dc:	dfc00815 	stw	ra,32(sp)
  8046e0:	ddc00715 	stw	r23,28(sp)
  8046e4:	dd800615 	stw	r22,24(sp)
  8046e8:	dd400515 	stw	r21,20(sp)
  8046ec:	dd000415 	stw	r20,16(sp)
  8046f0:	dcc00315 	stw	r19,12(sp)
  8046f4:	dc800215 	stw	r18,8(sp)
  8046f8:	dc400115 	stw	r17,4(sp)
  8046fc:	dc000015 	stw	r16,0(sp)
  804700:	18d1b204 	addi	r3,r3,18120
  804704:	24000117 	ldw	r16,4(r4)
  804708:	20c00f15 	stw	r3,60(r4)
  80470c:	2080bb04 	addi	r2,r4,748
  804710:	00c000c4 	movi	r3,3
  804714:	20c0b915 	stw	r3,740(r4)
  804718:	2080ba15 	stw	r2,744(r4)
  80471c:	2000b815 	stw	zero,736(r4)
  804720:	05c00204 	movi	r23,8
  804724:	00800104 	movi	r2,4
  804728:	2025883a 	mov	r18,r4
  80472c:	b80d883a 	mov	r6,r23
  804730:	81001704 	addi	r4,r16,92
  804734:	000b883a 	mov	r5,zero
  804738:	80000015 	stw	zero,0(r16)
  80473c:	80000115 	stw	zero,4(r16)
  804740:	80000215 	stw	zero,8(r16)
  804744:	8080030d 	sth	r2,12(r16)
  804748:	80001915 	stw	zero,100(r16)
  80474c:	8000038d 	sth	zero,14(r16)
  804750:	80000415 	stw	zero,16(r16)
  804754:	80000515 	stw	zero,20(r16)
  804758:	80000615 	stw	zero,24(r16)
  80475c:	08063200 	call	806320 <memset>
  804760:	05802034 	movhi	r22,128
  804764:	94400217 	ldw	r17,8(r18)
  804768:	05402034 	movhi	r21,128
  80476c:	05002034 	movhi	r20,128
  804770:	04c02034 	movhi	r19,128
  804774:	b59f4704 	addi	r22,r22,32028
  804778:	ad5f5e04 	addi	r21,r21,32120
  80477c:	a51f7d04 	addi	r20,r20,32244
  804780:	9cdf9404 	addi	r19,r19,32336
  804784:	85800815 	stw	r22,32(r16)
  804788:	85400915 	stw	r21,36(r16)
  80478c:	85000a15 	stw	r20,40(r16)
  804790:	84c00b15 	stw	r19,44(r16)
  804794:	84000715 	stw	r16,28(r16)
  804798:	00800284 	movi	r2,10
  80479c:	8880030d 	sth	r2,12(r17)
  8047a0:	00800044 	movi	r2,1
  8047a4:	b80d883a 	mov	r6,r23
  8047a8:	89001704 	addi	r4,r17,92
  8047ac:	000b883a 	mov	r5,zero
  8047b0:	88000015 	stw	zero,0(r17)
  8047b4:	88000115 	stw	zero,4(r17)
  8047b8:	88000215 	stw	zero,8(r17)
  8047bc:	88001915 	stw	zero,100(r17)
  8047c0:	8880038d 	sth	r2,14(r17)
  8047c4:	88000415 	stw	zero,16(r17)
  8047c8:	88000515 	stw	zero,20(r17)
  8047cc:	88000615 	stw	zero,24(r17)
  8047d0:	08063200 	call	806320 <memset>
  8047d4:	94000317 	ldw	r16,12(r18)
  8047d8:	00800484 	movi	r2,18
  8047dc:	8c400715 	stw	r17,28(r17)
  8047e0:	8d800815 	stw	r22,32(r17)
  8047e4:	8d400915 	stw	r21,36(r17)
  8047e8:	8d000a15 	stw	r20,40(r17)
  8047ec:	8cc00b15 	stw	r19,44(r17)
  8047f0:	8080030d 	sth	r2,12(r16)
  8047f4:	00800084 	movi	r2,2
  8047f8:	80000015 	stw	zero,0(r16)
  8047fc:	80000115 	stw	zero,4(r16)
  804800:	80000215 	stw	zero,8(r16)
  804804:	80001915 	stw	zero,100(r16)
  804808:	8080038d 	sth	r2,14(r16)
  80480c:	80000415 	stw	zero,16(r16)
  804810:	80000515 	stw	zero,20(r16)
  804814:	80000615 	stw	zero,24(r16)
  804818:	b80d883a 	mov	r6,r23
  80481c:	000b883a 	mov	r5,zero
  804820:	81001704 	addi	r4,r16,92
  804824:	08063200 	call	806320 <memset>
  804828:	00800044 	movi	r2,1
  80482c:	84000715 	stw	r16,28(r16)
  804830:	85800815 	stw	r22,32(r16)
  804834:	85400915 	stw	r21,36(r16)
  804838:	85000a15 	stw	r20,40(r16)
  80483c:	84c00b15 	stw	r19,44(r16)
  804840:	90800e15 	stw	r2,56(r18)
  804844:	dfc00817 	ldw	ra,32(sp)
  804848:	ddc00717 	ldw	r23,28(sp)
  80484c:	dd800617 	ldw	r22,24(sp)
  804850:	dd400517 	ldw	r21,20(sp)
  804854:	dd000417 	ldw	r20,16(sp)
  804858:	dcc00317 	ldw	r19,12(sp)
  80485c:	dc800217 	ldw	r18,8(sp)
  804860:	dc400117 	ldw	r17,4(sp)
  804864:	dc000017 	ldw	r16,0(sp)
  804868:	dec00904 	addi	sp,sp,36
  80486c:	f800283a 	ret

00804870 <__fp_lock>:
  804870:	0005883a 	mov	r2,zero
  804874:	f800283a 	ret

00804878 <__sfmoreglue>:
  804878:	defffc04 	addi	sp,sp,-16
  80487c:	dc800215 	stw	r18,8(sp)
  804880:	2825883a 	mov	r18,r5
  804884:	dc000015 	stw	r16,0(sp)
  804888:	01401a04 	movi	r5,104
  80488c:	2021883a 	mov	r16,r4
  804890:	913fffc4 	addi	r4,r18,-1
  804894:	dfc00315 	stw	ra,12(sp)
  804898:	dc400115 	stw	r17,4(sp)
  80489c:	080acec0 	call	80acec <__mulsi3>
  8048a0:	8009883a 	mov	r4,r16
  8048a4:	11401d04 	addi	r5,r2,116
  8048a8:	1023883a 	mov	r17,r2
  8048ac:	080578c0 	call	80578c <_malloc_r>
  8048b0:	1021883a 	mov	r16,r2
  8048b4:	10000726 	beq	r2,zero,8048d4 <__sfmoreglue+0x5c>
  8048b8:	11000304 	addi	r4,r2,12
  8048bc:	10000015 	stw	zero,0(r2)
  8048c0:	14800115 	stw	r18,4(r2)
  8048c4:	11000215 	stw	r4,8(r2)
  8048c8:	89801a04 	addi	r6,r17,104
  8048cc:	000b883a 	mov	r5,zero
  8048d0:	08063200 	call	806320 <memset>
  8048d4:	8005883a 	mov	r2,r16
  8048d8:	dfc00317 	ldw	ra,12(sp)
  8048dc:	dc800217 	ldw	r18,8(sp)
  8048e0:	dc400117 	ldw	r17,4(sp)
  8048e4:	dc000017 	ldw	r16,0(sp)
  8048e8:	dec00404 	addi	sp,sp,16
  8048ec:	f800283a 	ret

008048f0 <__sfp>:
  8048f0:	defffb04 	addi	sp,sp,-20
  8048f4:	dc000015 	stw	r16,0(sp)
  8048f8:	04002074 	movhi	r16,129
  8048fc:	84095d04 	addi	r16,r16,9588
  804900:	dcc00315 	stw	r19,12(sp)
  804904:	2027883a 	mov	r19,r4
  804908:	81000017 	ldw	r4,0(r16)
  80490c:	dfc00415 	stw	ra,16(sp)
  804910:	dc800215 	stw	r18,8(sp)
  804914:	20800e17 	ldw	r2,56(r4)
  804918:	dc400115 	stw	r17,4(sp)
  80491c:	1000021e 	bne	r2,zero,804928 <__sfp+0x38>
  804920:	08046d40 	call	8046d4 <__sinit.part.1>
  804924:	81000017 	ldw	r4,0(r16)
  804928:	2480b804 	addi	r18,r4,736
  80492c:	047fffc4 	movi	r17,-1
  804930:	91000117 	ldw	r4,4(r18)
  804934:	94000217 	ldw	r16,8(r18)
  804938:	213fffc4 	addi	r4,r4,-1
  80493c:	20000a16 	blt	r4,zero,804968 <__sfp+0x78>
  804940:	8080030f 	ldh	r2,12(r16)
  804944:	10000c26 	beq	r2,zero,804978 <__sfp+0x88>
  804948:	80c01d04 	addi	r3,r16,116
  80494c:	00000206 	br	804958 <__sfp+0x68>
  804950:	18bfe60f 	ldh	r2,-104(r3)
  804954:	10000826 	beq	r2,zero,804978 <__sfp+0x88>
  804958:	213fffc4 	addi	r4,r4,-1
  80495c:	1c3ffd04 	addi	r16,r3,-12
  804960:	18c01a04 	addi	r3,r3,104
  804964:	247ffa1e 	bne	r4,r17,804950 <__alt_mem_onchip_memory2+0xff7e4950>
  804968:	90800017 	ldw	r2,0(r18)
  80496c:	10001d26 	beq	r2,zero,8049e4 <__sfp+0xf4>
  804970:	1025883a 	mov	r18,r2
  804974:	003fee06 	br	804930 <__alt_mem_onchip_memory2+0xff7e4930>
  804978:	00bfffc4 	movi	r2,-1
  80497c:	8080038d 	sth	r2,14(r16)
  804980:	00800044 	movi	r2,1
  804984:	8080030d 	sth	r2,12(r16)
  804988:	80001915 	stw	zero,100(r16)
  80498c:	80000015 	stw	zero,0(r16)
  804990:	80000215 	stw	zero,8(r16)
  804994:	80000115 	stw	zero,4(r16)
  804998:	80000415 	stw	zero,16(r16)
  80499c:	80000515 	stw	zero,20(r16)
  8049a0:	80000615 	stw	zero,24(r16)
  8049a4:	01800204 	movi	r6,8
  8049a8:	000b883a 	mov	r5,zero
  8049ac:	81001704 	addi	r4,r16,92
  8049b0:	08063200 	call	806320 <memset>
  8049b4:	8005883a 	mov	r2,r16
  8049b8:	80000c15 	stw	zero,48(r16)
  8049bc:	80000d15 	stw	zero,52(r16)
  8049c0:	80001115 	stw	zero,68(r16)
  8049c4:	80001215 	stw	zero,72(r16)
  8049c8:	dfc00417 	ldw	ra,16(sp)
  8049cc:	dcc00317 	ldw	r19,12(sp)
  8049d0:	dc800217 	ldw	r18,8(sp)
  8049d4:	dc400117 	ldw	r17,4(sp)
  8049d8:	dc000017 	ldw	r16,0(sp)
  8049dc:	dec00504 	addi	sp,sp,20
  8049e0:	f800283a 	ret
  8049e4:	01400104 	movi	r5,4
  8049e8:	9809883a 	mov	r4,r19
  8049ec:	08048780 	call	804878 <__sfmoreglue>
  8049f0:	90800015 	stw	r2,0(r18)
  8049f4:	103fde1e 	bne	r2,zero,804970 <__alt_mem_onchip_memory2+0xff7e4970>
  8049f8:	00800304 	movi	r2,12
  8049fc:	98800015 	stw	r2,0(r19)
  804a00:	0005883a 	mov	r2,zero
  804a04:	003ff006 	br	8049c8 <__alt_mem_onchip_memory2+0xff7e49c8>

00804a08 <_cleanup>:
  804a08:	00802074 	movhi	r2,129
  804a0c:	10895d04 	addi	r2,r2,9588
  804a10:	11000017 	ldw	r4,0(r2)
  804a14:	01402074 	movhi	r5,129
  804a18:	2965ef04 	addi	r5,r5,-26692
  804a1c:	08054301 	jmpi	805430 <_fwalk_reent>

00804a20 <__sinit>:
  804a20:	20800e17 	ldw	r2,56(r4)
  804a24:	10000126 	beq	r2,zero,804a2c <__sinit+0xc>
  804a28:	f800283a 	ret
  804a2c:	08046d41 	jmpi	8046d4 <__sinit.part.1>

00804a30 <__sfp_lock_acquire>:
  804a30:	f800283a 	ret

00804a34 <__sfp_lock_release>:
  804a34:	f800283a 	ret

00804a38 <__sinit_lock_acquire>:
  804a38:	f800283a 	ret

00804a3c <__sinit_lock_release>:
  804a3c:	f800283a 	ret

00804a40 <__fp_lock_all>:
  804a40:	00802074 	movhi	r2,129
  804a44:	10895e04 	addi	r2,r2,9592
  804a48:	11000017 	ldw	r4,0(r2)
  804a4c:	01402034 	movhi	r5,128
  804a50:	29521c04 	addi	r5,r5,18544
  804a54:	080536c1 	jmpi	80536c <_fwalk>

00804a58 <__fp_unlock_all>:
  804a58:	00802074 	movhi	r2,129
  804a5c:	10895e04 	addi	r2,r2,9592
  804a60:	11000017 	ldw	r4,0(r2)
  804a64:	01402034 	movhi	r5,128
  804a68:	2951b004 	addi	r5,r5,18112
  804a6c:	080536c1 	jmpi	80536c <_fwalk>

00804a70 <_malloc_trim_r>:
  804a70:	defffb04 	addi	sp,sp,-20
  804a74:	dcc00315 	stw	r19,12(sp)
  804a78:	04c02074 	movhi	r19,129
  804a7c:	dc800215 	stw	r18,8(sp)
  804a80:	dc400115 	stw	r17,4(sp)
  804a84:	dc000015 	stw	r16,0(sp)
  804a88:	dfc00415 	stw	ra,16(sp)
  804a8c:	2821883a 	mov	r16,r5
  804a90:	9cc3a804 	addi	r19,r19,3744
  804a94:	2025883a 	mov	r18,r4
  804a98:	080db540 	call	80db54 <__malloc_lock>
  804a9c:	98800217 	ldw	r2,8(r19)
  804aa0:	14400117 	ldw	r17,4(r2)
  804aa4:	00bfff04 	movi	r2,-4
  804aa8:	88a2703a 	and	r17,r17,r2
  804aac:	8c21c83a 	sub	r16,r17,r16
  804ab0:	8403fbc4 	addi	r16,r16,4079
  804ab4:	8020d33a 	srli	r16,r16,12
  804ab8:	0083ffc4 	movi	r2,4095
  804abc:	843fffc4 	addi	r16,r16,-1
  804ac0:	8020933a 	slli	r16,r16,12
  804ac4:	1400060e 	bge	r2,r16,804ae0 <_malloc_trim_r+0x70>
  804ac8:	000b883a 	mov	r5,zero
  804acc:	9009883a 	mov	r4,r18
  804ad0:	0807cc80 	call	807cc8 <_sbrk_r>
  804ad4:	98c00217 	ldw	r3,8(r19)
  804ad8:	1c47883a 	add	r3,r3,r17
  804adc:	10c00a26 	beq	r2,r3,804b08 <_malloc_trim_r+0x98>
  804ae0:	9009883a 	mov	r4,r18
  804ae4:	080db780 	call	80db78 <__malloc_unlock>
  804ae8:	0005883a 	mov	r2,zero
  804aec:	dfc00417 	ldw	ra,16(sp)
  804af0:	dcc00317 	ldw	r19,12(sp)
  804af4:	dc800217 	ldw	r18,8(sp)
  804af8:	dc400117 	ldw	r17,4(sp)
  804afc:	dc000017 	ldw	r16,0(sp)
  804b00:	dec00504 	addi	sp,sp,20
  804b04:	f800283a 	ret
  804b08:	040bc83a 	sub	r5,zero,r16
  804b0c:	9009883a 	mov	r4,r18
  804b10:	0807cc80 	call	807cc8 <_sbrk_r>
  804b14:	00ffffc4 	movi	r3,-1
  804b18:	10c00d26 	beq	r2,r3,804b50 <_malloc_trim_r+0xe0>
  804b1c:	00c02074 	movhi	r3,129
  804b20:	18d06704 	addi	r3,r3,16796
  804b24:	18800017 	ldw	r2,0(r3)
  804b28:	99000217 	ldw	r4,8(r19)
  804b2c:	8c23c83a 	sub	r17,r17,r16
  804b30:	8c400054 	ori	r17,r17,1
  804b34:	1421c83a 	sub	r16,r2,r16
  804b38:	24400115 	stw	r17,4(r4)
  804b3c:	9009883a 	mov	r4,r18
  804b40:	1c000015 	stw	r16,0(r3)
  804b44:	080db780 	call	80db78 <__malloc_unlock>
  804b48:	00800044 	movi	r2,1
  804b4c:	003fe706 	br	804aec <__alt_mem_onchip_memory2+0xff7e4aec>
  804b50:	000b883a 	mov	r5,zero
  804b54:	9009883a 	mov	r4,r18
  804b58:	0807cc80 	call	807cc8 <_sbrk_r>
  804b5c:	99000217 	ldw	r4,8(r19)
  804b60:	014003c4 	movi	r5,15
  804b64:	1107c83a 	sub	r3,r2,r4
  804b68:	28ffdd0e 	bge	r5,r3,804ae0 <__alt_mem_onchip_memory2+0xff7e4ae0>
  804b6c:	01402074 	movhi	r5,129
  804b70:	29496004 	addi	r5,r5,9600
  804b74:	29400017 	ldw	r5,0(r5)
  804b78:	18c00054 	ori	r3,r3,1
  804b7c:	20c00115 	stw	r3,4(r4)
  804b80:	00c02074 	movhi	r3,129
  804b84:	1145c83a 	sub	r2,r2,r5
  804b88:	18d06704 	addi	r3,r3,16796
  804b8c:	18800015 	stw	r2,0(r3)
  804b90:	003fd306 	br	804ae0 <__alt_mem_onchip_memory2+0xff7e4ae0>

00804b94 <_free_r>:
  804b94:	28004126 	beq	r5,zero,804c9c <_free_r+0x108>
  804b98:	defffd04 	addi	sp,sp,-12
  804b9c:	dc400115 	stw	r17,4(sp)
  804ba0:	dc000015 	stw	r16,0(sp)
  804ba4:	2023883a 	mov	r17,r4
  804ba8:	2821883a 	mov	r16,r5
  804bac:	dfc00215 	stw	ra,8(sp)
  804bb0:	080db540 	call	80db54 <__malloc_lock>
  804bb4:	81ffff17 	ldw	r7,-4(r16)
  804bb8:	00bfff84 	movi	r2,-2
  804bbc:	01002074 	movhi	r4,129
  804bc0:	81bffe04 	addi	r6,r16,-8
  804bc4:	3884703a 	and	r2,r7,r2
  804bc8:	2103a804 	addi	r4,r4,3744
  804bcc:	308b883a 	add	r5,r6,r2
  804bd0:	2a400117 	ldw	r9,4(r5)
  804bd4:	22000217 	ldw	r8,8(r4)
  804bd8:	00ffff04 	movi	r3,-4
  804bdc:	48c6703a 	and	r3,r9,r3
  804be0:	2a005726 	beq	r5,r8,804d40 <_free_r+0x1ac>
  804be4:	28c00115 	stw	r3,4(r5)
  804be8:	39c0004c 	andi	r7,r7,1
  804bec:	3800091e 	bne	r7,zero,804c14 <_free_r+0x80>
  804bf0:	823ffe17 	ldw	r8,-8(r16)
  804bf4:	22400204 	addi	r9,r4,8
  804bf8:	320dc83a 	sub	r6,r6,r8
  804bfc:	31c00217 	ldw	r7,8(r6)
  804c00:	1205883a 	add	r2,r2,r8
  804c04:	3a406526 	beq	r7,r9,804d9c <_free_r+0x208>
  804c08:	32000317 	ldw	r8,12(r6)
  804c0c:	3a000315 	stw	r8,12(r7)
  804c10:	41c00215 	stw	r7,8(r8)
  804c14:	28cf883a 	add	r7,r5,r3
  804c18:	39c00117 	ldw	r7,4(r7)
  804c1c:	39c0004c 	andi	r7,r7,1
  804c20:	38003a26 	beq	r7,zero,804d0c <_free_r+0x178>
  804c24:	10c00054 	ori	r3,r2,1
  804c28:	30c00115 	stw	r3,4(r6)
  804c2c:	3087883a 	add	r3,r6,r2
  804c30:	18800015 	stw	r2,0(r3)
  804c34:	00c07fc4 	movi	r3,511
  804c38:	18801936 	bltu	r3,r2,804ca0 <_free_r+0x10c>
  804c3c:	1004d0fa 	srli	r2,r2,3
  804c40:	01c00044 	movi	r7,1
  804c44:	21400117 	ldw	r5,4(r4)
  804c48:	10c00044 	addi	r3,r2,1
  804c4c:	18c7883a 	add	r3,r3,r3
  804c50:	1005d0ba 	srai	r2,r2,2
  804c54:	18c7883a 	add	r3,r3,r3
  804c58:	18c7883a 	add	r3,r3,r3
  804c5c:	1907883a 	add	r3,r3,r4
  804c60:	3884983a 	sll	r2,r7,r2
  804c64:	19c00017 	ldw	r7,0(r3)
  804c68:	1a3ffe04 	addi	r8,r3,-8
  804c6c:	1144b03a 	or	r2,r2,r5
  804c70:	32000315 	stw	r8,12(r6)
  804c74:	31c00215 	stw	r7,8(r6)
  804c78:	20800115 	stw	r2,4(r4)
  804c7c:	19800015 	stw	r6,0(r3)
  804c80:	39800315 	stw	r6,12(r7)
  804c84:	8809883a 	mov	r4,r17
  804c88:	dfc00217 	ldw	ra,8(sp)
  804c8c:	dc400117 	ldw	r17,4(sp)
  804c90:	dc000017 	ldw	r16,0(sp)
  804c94:	dec00304 	addi	sp,sp,12
  804c98:	080db781 	jmpi	80db78 <__malloc_unlock>
  804c9c:	f800283a 	ret
  804ca0:	100ad27a 	srli	r5,r2,9
  804ca4:	00c00104 	movi	r3,4
  804ca8:	19404a36 	bltu	r3,r5,804dd4 <_free_r+0x240>
  804cac:	100ad1ba 	srli	r5,r2,6
  804cb0:	28c00e44 	addi	r3,r5,57
  804cb4:	18c7883a 	add	r3,r3,r3
  804cb8:	29400e04 	addi	r5,r5,56
  804cbc:	18c7883a 	add	r3,r3,r3
  804cc0:	18c7883a 	add	r3,r3,r3
  804cc4:	1909883a 	add	r4,r3,r4
  804cc8:	20c00017 	ldw	r3,0(r4)
  804ccc:	01c02074 	movhi	r7,129
  804cd0:	213ffe04 	addi	r4,r4,-8
  804cd4:	39c3a804 	addi	r7,r7,3744
  804cd8:	20c04426 	beq	r4,r3,804dec <_free_r+0x258>
  804cdc:	01ffff04 	movi	r7,-4
  804ce0:	19400117 	ldw	r5,4(r3)
  804ce4:	29ca703a 	and	r5,r5,r7
  804ce8:	1140022e 	bgeu	r2,r5,804cf4 <_free_r+0x160>
  804cec:	18c00217 	ldw	r3,8(r3)
  804cf0:	20fffb1e 	bne	r4,r3,804ce0 <__alt_mem_onchip_memory2+0xff7e4ce0>
  804cf4:	19000317 	ldw	r4,12(r3)
  804cf8:	31000315 	stw	r4,12(r6)
  804cfc:	30c00215 	stw	r3,8(r6)
  804d00:	21800215 	stw	r6,8(r4)
  804d04:	19800315 	stw	r6,12(r3)
  804d08:	003fde06 	br	804c84 <__alt_mem_onchip_memory2+0xff7e4c84>
  804d0c:	29c00217 	ldw	r7,8(r5)
  804d10:	10c5883a 	add	r2,r2,r3
  804d14:	00c02074 	movhi	r3,129
  804d18:	18c3aa04 	addi	r3,r3,3752
  804d1c:	38c03b26 	beq	r7,r3,804e0c <_free_r+0x278>
  804d20:	2a000317 	ldw	r8,12(r5)
  804d24:	11400054 	ori	r5,r2,1
  804d28:	3087883a 	add	r3,r6,r2
  804d2c:	3a000315 	stw	r8,12(r7)
  804d30:	41c00215 	stw	r7,8(r8)
  804d34:	31400115 	stw	r5,4(r6)
  804d38:	18800015 	stw	r2,0(r3)
  804d3c:	003fbd06 	br	804c34 <__alt_mem_onchip_memory2+0xff7e4c34>
  804d40:	39c0004c 	andi	r7,r7,1
  804d44:	10c5883a 	add	r2,r2,r3
  804d48:	3800071e 	bne	r7,zero,804d68 <_free_r+0x1d4>
  804d4c:	81fffe17 	ldw	r7,-8(r16)
  804d50:	31cdc83a 	sub	r6,r6,r7
  804d54:	30c00317 	ldw	r3,12(r6)
  804d58:	31400217 	ldw	r5,8(r6)
  804d5c:	11c5883a 	add	r2,r2,r7
  804d60:	28c00315 	stw	r3,12(r5)
  804d64:	19400215 	stw	r5,8(r3)
  804d68:	10c00054 	ori	r3,r2,1
  804d6c:	30c00115 	stw	r3,4(r6)
  804d70:	00c02074 	movhi	r3,129
  804d74:	18c96104 	addi	r3,r3,9604
  804d78:	18c00017 	ldw	r3,0(r3)
  804d7c:	21800215 	stw	r6,8(r4)
  804d80:	10ffc036 	bltu	r2,r3,804c84 <__alt_mem_onchip_memory2+0xff7e4c84>
  804d84:	00802074 	movhi	r2,129
  804d88:	10905e04 	addi	r2,r2,16760
  804d8c:	11400017 	ldw	r5,0(r2)
  804d90:	8809883a 	mov	r4,r17
  804d94:	0804a700 	call	804a70 <_malloc_trim_r>
  804d98:	003fba06 	br	804c84 <__alt_mem_onchip_memory2+0xff7e4c84>
  804d9c:	28c9883a 	add	r4,r5,r3
  804da0:	21000117 	ldw	r4,4(r4)
  804da4:	2100004c 	andi	r4,r4,1
  804da8:	2000391e 	bne	r4,zero,804e90 <_free_r+0x2fc>
  804dac:	29c00217 	ldw	r7,8(r5)
  804db0:	29000317 	ldw	r4,12(r5)
  804db4:	1885883a 	add	r2,r3,r2
  804db8:	10c00054 	ori	r3,r2,1
  804dbc:	39000315 	stw	r4,12(r7)
  804dc0:	21c00215 	stw	r7,8(r4)
  804dc4:	30c00115 	stw	r3,4(r6)
  804dc8:	308d883a 	add	r6,r6,r2
  804dcc:	30800015 	stw	r2,0(r6)
  804dd0:	003fac06 	br	804c84 <__alt_mem_onchip_memory2+0xff7e4c84>
  804dd4:	00c00504 	movi	r3,20
  804dd8:	19401536 	bltu	r3,r5,804e30 <_free_r+0x29c>
  804ddc:	28c01704 	addi	r3,r5,92
  804de0:	18c7883a 	add	r3,r3,r3
  804de4:	294016c4 	addi	r5,r5,91
  804de8:	003fb406 	br	804cbc <__alt_mem_onchip_memory2+0xff7e4cbc>
  804dec:	280bd0ba 	srai	r5,r5,2
  804df0:	00c00044 	movi	r3,1
  804df4:	38800117 	ldw	r2,4(r7)
  804df8:	194a983a 	sll	r5,r3,r5
  804dfc:	2007883a 	mov	r3,r4
  804e00:	2884b03a 	or	r2,r5,r2
  804e04:	38800115 	stw	r2,4(r7)
  804e08:	003fbb06 	br	804cf8 <__alt_mem_onchip_memory2+0xff7e4cf8>
  804e0c:	21800515 	stw	r6,20(r4)
  804e10:	21800415 	stw	r6,16(r4)
  804e14:	10c00054 	ori	r3,r2,1
  804e18:	31c00315 	stw	r7,12(r6)
  804e1c:	31c00215 	stw	r7,8(r6)
  804e20:	30c00115 	stw	r3,4(r6)
  804e24:	308d883a 	add	r6,r6,r2
  804e28:	30800015 	stw	r2,0(r6)
  804e2c:	003f9506 	br	804c84 <__alt_mem_onchip_memory2+0xff7e4c84>
  804e30:	00c01504 	movi	r3,84
  804e34:	19400536 	bltu	r3,r5,804e4c <_free_r+0x2b8>
  804e38:	100ad33a 	srli	r5,r2,12
  804e3c:	28c01bc4 	addi	r3,r5,111
  804e40:	18c7883a 	add	r3,r3,r3
  804e44:	29401b84 	addi	r5,r5,110
  804e48:	003f9c06 	br	804cbc <__alt_mem_onchip_memory2+0xff7e4cbc>
  804e4c:	00c05504 	movi	r3,340
  804e50:	19400536 	bltu	r3,r5,804e68 <_free_r+0x2d4>
  804e54:	100ad3fa 	srli	r5,r2,15
  804e58:	28c01e04 	addi	r3,r5,120
  804e5c:	18c7883a 	add	r3,r3,r3
  804e60:	29401dc4 	addi	r5,r5,119
  804e64:	003f9506 	br	804cbc <__alt_mem_onchip_memory2+0xff7e4cbc>
  804e68:	00c15504 	movi	r3,1364
  804e6c:	19400536 	bltu	r3,r5,804e84 <_free_r+0x2f0>
  804e70:	100ad4ba 	srli	r5,r2,18
  804e74:	28c01f44 	addi	r3,r5,125
  804e78:	18c7883a 	add	r3,r3,r3
  804e7c:	29401f04 	addi	r5,r5,124
  804e80:	003f8e06 	br	804cbc <__alt_mem_onchip_memory2+0xff7e4cbc>
  804e84:	00c03f84 	movi	r3,254
  804e88:	01401f84 	movi	r5,126
  804e8c:	003f8b06 	br	804cbc <__alt_mem_onchip_memory2+0xff7e4cbc>
  804e90:	10c00054 	ori	r3,r2,1
  804e94:	30c00115 	stw	r3,4(r6)
  804e98:	308d883a 	add	r6,r6,r2
  804e9c:	30800015 	stw	r2,0(r6)
  804ea0:	003f7806 	br	804c84 <__alt_mem_onchip_memory2+0xff7e4c84>

00804ea4 <__sfvwrite_r>:
  804ea4:	30800217 	ldw	r2,8(r6)
  804ea8:	10006726 	beq	r2,zero,805048 <__sfvwrite_r+0x1a4>
  804eac:	28c0030b 	ldhu	r3,12(r5)
  804eb0:	defff404 	addi	sp,sp,-48
  804eb4:	dd400715 	stw	r21,28(sp)
  804eb8:	dd000615 	stw	r20,24(sp)
  804ebc:	dc000215 	stw	r16,8(sp)
  804ec0:	dfc00b15 	stw	ra,44(sp)
  804ec4:	df000a15 	stw	fp,40(sp)
  804ec8:	ddc00915 	stw	r23,36(sp)
  804ecc:	dd800815 	stw	r22,32(sp)
  804ed0:	dcc00515 	stw	r19,20(sp)
  804ed4:	dc800415 	stw	r18,16(sp)
  804ed8:	dc400315 	stw	r17,12(sp)
  804edc:	1880020c 	andi	r2,r3,8
  804ee0:	2821883a 	mov	r16,r5
  804ee4:	202b883a 	mov	r21,r4
  804ee8:	3029883a 	mov	r20,r6
  804eec:	10002726 	beq	r2,zero,804f8c <__sfvwrite_r+0xe8>
  804ef0:	28800417 	ldw	r2,16(r5)
  804ef4:	10002526 	beq	r2,zero,804f8c <__sfvwrite_r+0xe8>
  804ef8:	1880008c 	andi	r2,r3,2
  804efc:	a4400017 	ldw	r17,0(r20)
  804f00:	10002a26 	beq	r2,zero,804fac <__sfvwrite_r+0x108>
  804f04:	05a00034 	movhi	r22,32768
  804f08:	0027883a 	mov	r19,zero
  804f0c:	0025883a 	mov	r18,zero
  804f10:	b5bf0004 	addi	r22,r22,-1024
  804f14:	980d883a 	mov	r6,r19
  804f18:	a809883a 	mov	r4,r21
  804f1c:	90004626 	beq	r18,zero,805038 <__sfvwrite_r+0x194>
  804f20:	900f883a 	mov	r7,r18
  804f24:	b480022e 	bgeu	r22,r18,804f30 <__sfvwrite_r+0x8c>
  804f28:	01e00034 	movhi	r7,32768
  804f2c:	39ff0004 	addi	r7,r7,-1024
  804f30:	80800917 	ldw	r2,36(r16)
  804f34:	81400717 	ldw	r5,28(r16)
  804f38:	103ee83a 	callr	r2
  804f3c:	00805a0e 	bge	zero,r2,8050a8 <__sfvwrite_r+0x204>
  804f40:	a0c00217 	ldw	r3,8(r20)
  804f44:	98a7883a 	add	r19,r19,r2
  804f48:	90a5c83a 	sub	r18,r18,r2
  804f4c:	1885c83a 	sub	r2,r3,r2
  804f50:	a0800215 	stw	r2,8(r20)
  804f54:	103fef1e 	bne	r2,zero,804f14 <__alt_mem_onchip_memory2+0xff7e4f14>
  804f58:	0005883a 	mov	r2,zero
  804f5c:	dfc00b17 	ldw	ra,44(sp)
  804f60:	df000a17 	ldw	fp,40(sp)
  804f64:	ddc00917 	ldw	r23,36(sp)
  804f68:	dd800817 	ldw	r22,32(sp)
  804f6c:	dd400717 	ldw	r21,28(sp)
  804f70:	dd000617 	ldw	r20,24(sp)
  804f74:	dcc00517 	ldw	r19,20(sp)
  804f78:	dc800417 	ldw	r18,16(sp)
  804f7c:	dc400317 	ldw	r17,12(sp)
  804f80:	dc000217 	ldw	r16,8(sp)
  804f84:	dec00c04 	addi	sp,sp,48
  804f88:	f800283a 	ret
  804f8c:	800b883a 	mov	r5,r16
  804f90:	a809883a 	mov	r4,r21
  804f94:	0802a140 	call	802a14 <__swsetup_r>
  804f98:	1000ee1e 	bne	r2,zero,805354 <__sfvwrite_r+0x4b0>
  804f9c:	80c0030b 	ldhu	r3,12(r16)
  804fa0:	a4400017 	ldw	r17,0(r20)
  804fa4:	1880008c 	andi	r2,r3,2
  804fa8:	103fd61e 	bne	r2,zero,804f04 <__alt_mem_onchip_memory2+0xff7e4f04>
  804fac:	1880004c 	andi	r2,r3,1
  804fb0:	1000421e 	bne	r2,zero,8050bc <__sfvwrite_r+0x218>
  804fb4:	0039883a 	mov	fp,zero
  804fb8:	0025883a 	mov	r18,zero
  804fbc:	90001a26 	beq	r18,zero,805028 <__sfvwrite_r+0x184>
  804fc0:	1880800c 	andi	r2,r3,512
  804fc4:	84c00217 	ldw	r19,8(r16)
  804fc8:	10002126 	beq	r2,zero,805050 <__sfvwrite_r+0x1ac>
  804fcc:	982f883a 	mov	r23,r19
  804fd0:	94c09636 	bltu	r18,r19,80522c <__sfvwrite_r+0x388>
  804fd4:	1881200c 	andi	r2,r3,1152
  804fd8:	1000a11e 	bne	r2,zero,805260 <__sfvwrite_r+0x3bc>
  804fdc:	81000017 	ldw	r4,0(r16)
  804fe0:	b80d883a 	mov	r6,r23
  804fe4:	e00b883a 	mov	r5,fp
  804fe8:	08061c40 	call	8061c4 <memmove>
  804fec:	80c00217 	ldw	r3,8(r16)
  804ff0:	81000017 	ldw	r4,0(r16)
  804ff4:	9005883a 	mov	r2,r18
  804ff8:	1ce7c83a 	sub	r19,r3,r19
  804ffc:	25cf883a 	add	r7,r4,r23
  805000:	84c00215 	stw	r19,8(r16)
  805004:	81c00015 	stw	r7,0(r16)
  805008:	a0c00217 	ldw	r3,8(r20)
  80500c:	e0b9883a 	add	fp,fp,r2
  805010:	90a5c83a 	sub	r18,r18,r2
  805014:	18a7c83a 	sub	r19,r3,r2
  805018:	a4c00215 	stw	r19,8(r20)
  80501c:	983fce26 	beq	r19,zero,804f58 <__alt_mem_onchip_memory2+0xff7e4f58>
  805020:	80c0030b 	ldhu	r3,12(r16)
  805024:	903fe61e 	bne	r18,zero,804fc0 <__alt_mem_onchip_memory2+0xff7e4fc0>
  805028:	8f000017 	ldw	fp,0(r17)
  80502c:	8c800117 	ldw	r18,4(r17)
  805030:	8c400204 	addi	r17,r17,8
  805034:	003fe106 	br	804fbc <__alt_mem_onchip_memory2+0xff7e4fbc>
  805038:	8cc00017 	ldw	r19,0(r17)
  80503c:	8c800117 	ldw	r18,4(r17)
  805040:	8c400204 	addi	r17,r17,8
  805044:	003fb306 	br	804f14 <__alt_mem_onchip_memory2+0xff7e4f14>
  805048:	0005883a 	mov	r2,zero
  80504c:	f800283a 	ret
  805050:	81000017 	ldw	r4,0(r16)
  805054:	80800417 	ldw	r2,16(r16)
  805058:	11005a36 	bltu	r2,r4,8051c4 <__sfvwrite_r+0x320>
  80505c:	85c00517 	ldw	r23,20(r16)
  805060:	95c05836 	bltu	r18,r23,8051c4 <__sfvwrite_r+0x320>
  805064:	00a00034 	movhi	r2,32768
  805068:	10bfffc4 	addi	r2,r2,-1
  80506c:	9009883a 	mov	r4,r18
  805070:	1480012e 	bgeu	r2,r18,805078 <__sfvwrite_r+0x1d4>
  805074:	1009883a 	mov	r4,r2
  805078:	b80b883a 	mov	r5,r23
  80507c:	080ab380 	call	80ab38 <__divsi3>
  805080:	b80b883a 	mov	r5,r23
  805084:	1009883a 	mov	r4,r2
  805088:	080acec0 	call	80acec <__mulsi3>
  80508c:	81400717 	ldw	r5,28(r16)
  805090:	80c00917 	ldw	r3,36(r16)
  805094:	100f883a 	mov	r7,r2
  805098:	e00d883a 	mov	r6,fp
  80509c:	a809883a 	mov	r4,r21
  8050a0:	183ee83a 	callr	r3
  8050a4:	00bfd816 	blt	zero,r2,805008 <__alt_mem_onchip_memory2+0xff7e5008>
  8050a8:	8080030b 	ldhu	r2,12(r16)
  8050ac:	10801014 	ori	r2,r2,64
  8050b0:	8080030d 	sth	r2,12(r16)
  8050b4:	00bfffc4 	movi	r2,-1
  8050b8:	003fa806 	br	804f5c <__alt_mem_onchip_memory2+0xff7e4f5c>
  8050bc:	0027883a 	mov	r19,zero
  8050c0:	0011883a 	mov	r8,zero
  8050c4:	0039883a 	mov	fp,zero
  8050c8:	0025883a 	mov	r18,zero
  8050cc:	90001f26 	beq	r18,zero,80514c <__sfvwrite_r+0x2a8>
  8050d0:	40005a26 	beq	r8,zero,80523c <__sfvwrite_r+0x398>
  8050d4:	982d883a 	mov	r22,r19
  8050d8:	94c0012e 	bgeu	r18,r19,8050e0 <__sfvwrite_r+0x23c>
  8050dc:	902d883a 	mov	r22,r18
  8050e0:	81000017 	ldw	r4,0(r16)
  8050e4:	80800417 	ldw	r2,16(r16)
  8050e8:	b02f883a 	mov	r23,r22
  8050ec:	81c00517 	ldw	r7,20(r16)
  8050f0:	1100032e 	bgeu	r2,r4,805100 <__sfvwrite_r+0x25c>
  8050f4:	80c00217 	ldw	r3,8(r16)
  8050f8:	38c7883a 	add	r3,r7,r3
  8050fc:	1d801816 	blt	r3,r22,805160 <__sfvwrite_r+0x2bc>
  805100:	b1c03e16 	blt	r22,r7,8051fc <__sfvwrite_r+0x358>
  805104:	80800917 	ldw	r2,36(r16)
  805108:	81400717 	ldw	r5,28(r16)
  80510c:	e00d883a 	mov	r6,fp
  805110:	da000115 	stw	r8,4(sp)
  805114:	a809883a 	mov	r4,r21
  805118:	103ee83a 	callr	r2
  80511c:	102f883a 	mov	r23,r2
  805120:	da000117 	ldw	r8,4(sp)
  805124:	00bfe00e 	bge	zero,r2,8050a8 <__alt_mem_onchip_memory2+0xff7e50a8>
  805128:	9de7c83a 	sub	r19,r19,r23
  80512c:	98001f26 	beq	r19,zero,8051ac <__sfvwrite_r+0x308>
  805130:	a0800217 	ldw	r2,8(r20)
  805134:	e5f9883a 	add	fp,fp,r23
  805138:	95e5c83a 	sub	r18,r18,r23
  80513c:	15efc83a 	sub	r23,r2,r23
  805140:	a5c00215 	stw	r23,8(r20)
  805144:	b83f8426 	beq	r23,zero,804f58 <__alt_mem_onchip_memory2+0xff7e4f58>
  805148:	903fe11e 	bne	r18,zero,8050d0 <__alt_mem_onchip_memory2+0xff7e50d0>
  80514c:	8f000017 	ldw	fp,0(r17)
  805150:	8c800117 	ldw	r18,4(r17)
  805154:	0011883a 	mov	r8,zero
  805158:	8c400204 	addi	r17,r17,8
  80515c:	003fdb06 	br	8050cc <__alt_mem_onchip_memory2+0xff7e50cc>
  805160:	180d883a 	mov	r6,r3
  805164:	e00b883a 	mov	r5,fp
  805168:	da000115 	stw	r8,4(sp)
  80516c:	d8c00015 	stw	r3,0(sp)
  805170:	08061c40 	call	8061c4 <memmove>
  805174:	d8c00017 	ldw	r3,0(sp)
  805178:	80800017 	ldw	r2,0(r16)
  80517c:	800b883a 	mov	r5,r16
  805180:	a809883a 	mov	r4,r21
  805184:	10c5883a 	add	r2,r2,r3
  805188:	80800015 	stw	r2,0(r16)
  80518c:	d8c00015 	stw	r3,0(sp)
  805190:	08046340 	call	804634 <_fflush_r>
  805194:	d8c00017 	ldw	r3,0(sp)
  805198:	da000117 	ldw	r8,4(sp)
  80519c:	103fc21e 	bne	r2,zero,8050a8 <__alt_mem_onchip_memory2+0xff7e50a8>
  8051a0:	182f883a 	mov	r23,r3
  8051a4:	9de7c83a 	sub	r19,r19,r23
  8051a8:	983fe11e 	bne	r19,zero,805130 <__alt_mem_onchip_memory2+0xff7e5130>
  8051ac:	800b883a 	mov	r5,r16
  8051b0:	a809883a 	mov	r4,r21
  8051b4:	08046340 	call	804634 <_fflush_r>
  8051b8:	103fbb1e 	bne	r2,zero,8050a8 <__alt_mem_onchip_memory2+0xff7e50a8>
  8051bc:	0011883a 	mov	r8,zero
  8051c0:	003fdb06 	br	805130 <__alt_mem_onchip_memory2+0xff7e5130>
  8051c4:	94c0012e 	bgeu	r18,r19,8051cc <__sfvwrite_r+0x328>
  8051c8:	9027883a 	mov	r19,r18
  8051cc:	980d883a 	mov	r6,r19
  8051d0:	e00b883a 	mov	r5,fp
  8051d4:	08061c40 	call	8061c4 <memmove>
  8051d8:	80800217 	ldw	r2,8(r16)
  8051dc:	80c00017 	ldw	r3,0(r16)
  8051e0:	14c5c83a 	sub	r2,r2,r19
  8051e4:	1cc7883a 	add	r3,r3,r19
  8051e8:	80800215 	stw	r2,8(r16)
  8051ec:	80c00015 	stw	r3,0(r16)
  8051f0:	10004326 	beq	r2,zero,805300 <__sfvwrite_r+0x45c>
  8051f4:	9805883a 	mov	r2,r19
  8051f8:	003f8306 	br	805008 <__alt_mem_onchip_memory2+0xff7e5008>
  8051fc:	b00d883a 	mov	r6,r22
  805200:	e00b883a 	mov	r5,fp
  805204:	da000115 	stw	r8,4(sp)
  805208:	08061c40 	call	8061c4 <memmove>
  80520c:	80800217 	ldw	r2,8(r16)
  805210:	80c00017 	ldw	r3,0(r16)
  805214:	da000117 	ldw	r8,4(sp)
  805218:	1585c83a 	sub	r2,r2,r22
  80521c:	1dad883a 	add	r22,r3,r22
  805220:	80800215 	stw	r2,8(r16)
  805224:	85800015 	stw	r22,0(r16)
  805228:	003fbf06 	br	805128 <__alt_mem_onchip_memory2+0xff7e5128>
  80522c:	81000017 	ldw	r4,0(r16)
  805230:	9027883a 	mov	r19,r18
  805234:	902f883a 	mov	r23,r18
  805238:	003f6906 	br	804fe0 <__alt_mem_onchip_memory2+0xff7e4fe0>
  80523c:	900d883a 	mov	r6,r18
  805240:	01400284 	movi	r5,10
  805244:	e009883a 	mov	r4,fp
  805248:	0805f980 	call	805f98 <memchr>
  80524c:	10003e26 	beq	r2,zero,805348 <__sfvwrite_r+0x4a4>
  805250:	10800044 	addi	r2,r2,1
  805254:	1727c83a 	sub	r19,r2,fp
  805258:	02000044 	movi	r8,1
  80525c:	003f9d06 	br	8050d4 <__alt_mem_onchip_memory2+0xff7e50d4>
  805260:	80800517 	ldw	r2,20(r16)
  805264:	81400417 	ldw	r5,16(r16)
  805268:	81c00017 	ldw	r7,0(r16)
  80526c:	10a7883a 	add	r19,r2,r2
  805270:	9885883a 	add	r2,r19,r2
  805274:	1026d7fa 	srli	r19,r2,31
  805278:	396dc83a 	sub	r22,r7,r5
  80527c:	b1000044 	addi	r4,r22,1
  805280:	9885883a 	add	r2,r19,r2
  805284:	1027d07a 	srai	r19,r2,1
  805288:	2485883a 	add	r2,r4,r18
  80528c:	980d883a 	mov	r6,r19
  805290:	9880022e 	bgeu	r19,r2,80529c <__sfvwrite_r+0x3f8>
  805294:	1027883a 	mov	r19,r2
  805298:	100d883a 	mov	r6,r2
  80529c:	18c1000c 	andi	r3,r3,1024
  8052a0:	18001c26 	beq	r3,zero,805314 <__sfvwrite_r+0x470>
  8052a4:	300b883a 	mov	r5,r6
  8052a8:	a809883a 	mov	r4,r21
  8052ac:	080578c0 	call	80578c <_malloc_r>
  8052b0:	102f883a 	mov	r23,r2
  8052b4:	10002926 	beq	r2,zero,80535c <__sfvwrite_r+0x4b8>
  8052b8:	81400417 	ldw	r5,16(r16)
  8052bc:	b00d883a 	mov	r6,r22
  8052c0:	1009883a 	mov	r4,r2
  8052c4:	080607c0 	call	80607c <memcpy>
  8052c8:	8080030b 	ldhu	r2,12(r16)
  8052cc:	00fedfc4 	movi	r3,-1153
  8052d0:	10c4703a 	and	r2,r2,r3
  8052d4:	10802014 	ori	r2,r2,128
  8052d8:	8080030d 	sth	r2,12(r16)
  8052dc:	bd89883a 	add	r4,r23,r22
  8052e0:	9d8fc83a 	sub	r7,r19,r22
  8052e4:	85c00415 	stw	r23,16(r16)
  8052e8:	84c00515 	stw	r19,20(r16)
  8052ec:	81000015 	stw	r4,0(r16)
  8052f0:	9027883a 	mov	r19,r18
  8052f4:	81c00215 	stw	r7,8(r16)
  8052f8:	902f883a 	mov	r23,r18
  8052fc:	003f3806 	br	804fe0 <__alt_mem_onchip_memory2+0xff7e4fe0>
  805300:	800b883a 	mov	r5,r16
  805304:	a809883a 	mov	r4,r21
  805308:	08046340 	call	804634 <_fflush_r>
  80530c:	103fb926 	beq	r2,zero,8051f4 <__alt_mem_onchip_memory2+0xff7e51f4>
  805310:	003f6506 	br	8050a8 <__alt_mem_onchip_memory2+0xff7e50a8>
  805314:	a809883a 	mov	r4,r21
  805318:	08075000 	call	807500 <_realloc_r>
  80531c:	102f883a 	mov	r23,r2
  805320:	103fee1e 	bne	r2,zero,8052dc <__alt_mem_onchip_memory2+0xff7e52dc>
  805324:	81400417 	ldw	r5,16(r16)
  805328:	a809883a 	mov	r4,r21
  80532c:	0804b940 	call	804b94 <_free_r>
  805330:	8080030b 	ldhu	r2,12(r16)
  805334:	00ffdfc4 	movi	r3,-129
  805338:	1884703a 	and	r2,r3,r2
  80533c:	00c00304 	movi	r3,12
  805340:	a8c00015 	stw	r3,0(r21)
  805344:	003f5906 	br	8050ac <__alt_mem_onchip_memory2+0xff7e50ac>
  805348:	94c00044 	addi	r19,r18,1
  80534c:	02000044 	movi	r8,1
  805350:	003f6006 	br	8050d4 <__alt_mem_onchip_memory2+0xff7e50d4>
  805354:	00bfffc4 	movi	r2,-1
  805358:	003f0006 	br	804f5c <__alt_mem_onchip_memory2+0xff7e4f5c>
  80535c:	00800304 	movi	r2,12
  805360:	a8800015 	stw	r2,0(r21)
  805364:	8080030b 	ldhu	r2,12(r16)
  805368:	003f5006 	br	8050ac <__alt_mem_onchip_memory2+0xff7e50ac>

0080536c <_fwalk>:
  80536c:	defff704 	addi	sp,sp,-36
  805370:	dd000415 	stw	r20,16(sp)
  805374:	dfc00815 	stw	ra,32(sp)
  805378:	ddc00715 	stw	r23,28(sp)
  80537c:	dd800615 	stw	r22,24(sp)
  805380:	dd400515 	stw	r21,20(sp)
  805384:	dcc00315 	stw	r19,12(sp)
  805388:	dc800215 	stw	r18,8(sp)
  80538c:	dc400115 	stw	r17,4(sp)
  805390:	dc000015 	stw	r16,0(sp)
  805394:	2500b804 	addi	r20,r4,736
  805398:	a0002326 	beq	r20,zero,805428 <_fwalk+0xbc>
  80539c:	282b883a 	mov	r21,r5
  8053a0:	002f883a 	mov	r23,zero
  8053a4:	05800044 	movi	r22,1
  8053a8:	04ffffc4 	movi	r19,-1
  8053ac:	a4400117 	ldw	r17,4(r20)
  8053b0:	a4800217 	ldw	r18,8(r20)
  8053b4:	8c7fffc4 	addi	r17,r17,-1
  8053b8:	88000d16 	blt	r17,zero,8053f0 <_fwalk+0x84>
  8053bc:	94000304 	addi	r16,r18,12
  8053c0:	94800384 	addi	r18,r18,14
  8053c4:	8080000b 	ldhu	r2,0(r16)
  8053c8:	8c7fffc4 	addi	r17,r17,-1
  8053cc:	813ffd04 	addi	r4,r16,-12
  8053d0:	b080042e 	bgeu	r22,r2,8053e4 <_fwalk+0x78>
  8053d4:	9080000f 	ldh	r2,0(r18)
  8053d8:	14c00226 	beq	r2,r19,8053e4 <_fwalk+0x78>
  8053dc:	a83ee83a 	callr	r21
  8053e0:	b8aeb03a 	or	r23,r23,r2
  8053e4:	84001a04 	addi	r16,r16,104
  8053e8:	94801a04 	addi	r18,r18,104
  8053ec:	8cfff51e 	bne	r17,r19,8053c4 <__alt_mem_onchip_memory2+0xff7e53c4>
  8053f0:	a5000017 	ldw	r20,0(r20)
  8053f4:	a03fed1e 	bne	r20,zero,8053ac <__alt_mem_onchip_memory2+0xff7e53ac>
  8053f8:	b805883a 	mov	r2,r23
  8053fc:	dfc00817 	ldw	ra,32(sp)
  805400:	ddc00717 	ldw	r23,28(sp)
  805404:	dd800617 	ldw	r22,24(sp)
  805408:	dd400517 	ldw	r21,20(sp)
  80540c:	dd000417 	ldw	r20,16(sp)
  805410:	dcc00317 	ldw	r19,12(sp)
  805414:	dc800217 	ldw	r18,8(sp)
  805418:	dc400117 	ldw	r17,4(sp)
  80541c:	dc000017 	ldw	r16,0(sp)
  805420:	dec00904 	addi	sp,sp,36
  805424:	f800283a 	ret
  805428:	002f883a 	mov	r23,zero
  80542c:	003ff206 	br	8053f8 <__alt_mem_onchip_memory2+0xff7e53f8>

00805430 <_fwalk_reent>:
  805430:	defff704 	addi	sp,sp,-36
  805434:	dd000415 	stw	r20,16(sp)
  805438:	dfc00815 	stw	ra,32(sp)
  80543c:	ddc00715 	stw	r23,28(sp)
  805440:	dd800615 	stw	r22,24(sp)
  805444:	dd400515 	stw	r21,20(sp)
  805448:	dcc00315 	stw	r19,12(sp)
  80544c:	dc800215 	stw	r18,8(sp)
  805450:	dc400115 	stw	r17,4(sp)
  805454:	dc000015 	stw	r16,0(sp)
  805458:	2500b804 	addi	r20,r4,736
  80545c:	a0002326 	beq	r20,zero,8054ec <_fwalk_reent+0xbc>
  805460:	282b883a 	mov	r21,r5
  805464:	2027883a 	mov	r19,r4
  805468:	002f883a 	mov	r23,zero
  80546c:	05800044 	movi	r22,1
  805470:	04bfffc4 	movi	r18,-1
  805474:	a4400117 	ldw	r17,4(r20)
  805478:	a4000217 	ldw	r16,8(r20)
  80547c:	8c7fffc4 	addi	r17,r17,-1
  805480:	88000c16 	blt	r17,zero,8054b4 <_fwalk_reent+0x84>
  805484:	84000304 	addi	r16,r16,12
  805488:	8080000b 	ldhu	r2,0(r16)
  80548c:	8c7fffc4 	addi	r17,r17,-1
  805490:	817ffd04 	addi	r5,r16,-12
  805494:	b080052e 	bgeu	r22,r2,8054ac <_fwalk_reent+0x7c>
  805498:	8080008f 	ldh	r2,2(r16)
  80549c:	9809883a 	mov	r4,r19
  8054a0:	14800226 	beq	r2,r18,8054ac <_fwalk_reent+0x7c>
  8054a4:	a83ee83a 	callr	r21
  8054a8:	b8aeb03a 	or	r23,r23,r2
  8054ac:	84001a04 	addi	r16,r16,104
  8054b0:	8cbff51e 	bne	r17,r18,805488 <__alt_mem_onchip_memory2+0xff7e5488>
  8054b4:	a5000017 	ldw	r20,0(r20)
  8054b8:	a03fee1e 	bne	r20,zero,805474 <__alt_mem_onchip_memory2+0xff7e5474>
  8054bc:	b805883a 	mov	r2,r23
  8054c0:	dfc00817 	ldw	ra,32(sp)
  8054c4:	ddc00717 	ldw	r23,28(sp)
  8054c8:	dd800617 	ldw	r22,24(sp)
  8054cc:	dd400517 	ldw	r21,20(sp)
  8054d0:	dd000417 	ldw	r20,16(sp)
  8054d4:	dcc00317 	ldw	r19,12(sp)
  8054d8:	dc800217 	ldw	r18,8(sp)
  8054dc:	dc400117 	ldw	r17,4(sp)
  8054e0:	dc000017 	ldw	r16,0(sp)
  8054e4:	dec00904 	addi	sp,sp,36
  8054e8:	f800283a 	ret
  8054ec:	002f883a 	mov	r23,zero
  8054f0:	003ff206 	br	8054bc <__alt_mem_onchip_memory2+0xff7e54bc>

008054f4 <_setlocale_r>:
  8054f4:	30001b26 	beq	r6,zero,805564 <_setlocale_r+0x70>
  8054f8:	01402074 	movhi	r5,129
  8054fc:	defffe04 	addi	sp,sp,-8
  805500:	2941df04 	addi	r5,r5,1916
  805504:	3009883a 	mov	r4,r6
  805508:	dc000015 	stw	r16,0(sp)
  80550c:	dfc00115 	stw	ra,4(sp)
  805510:	3021883a 	mov	r16,r6
  805514:	0807e580 	call	807e58 <strcmp>
  805518:	1000061e 	bne	r2,zero,805534 <_setlocale_r+0x40>
  80551c:	00802074 	movhi	r2,129
  805520:	1081c004 	addi	r2,r2,1792
  805524:	dfc00117 	ldw	ra,4(sp)
  805528:	dc000017 	ldw	r16,0(sp)
  80552c:	dec00204 	addi	sp,sp,8
  805530:	f800283a 	ret
  805534:	01402074 	movhi	r5,129
  805538:	2941c004 	addi	r5,r5,1792
  80553c:	8009883a 	mov	r4,r16
  805540:	0807e580 	call	807e58 <strcmp>
  805544:	103ff526 	beq	r2,zero,80551c <__alt_mem_onchip_memory2+0xff7e551c>
  805548:	01402074 	movhi	r5,129
  80554c:	2941ca04 	addi	r5,r5,1832
  805550:	8009883a 	mov	r4,r16
  805554:	0807e580 	call	807e58 <strcmp>
  805558:	103ff026 	beq	r2,zero,80551c <__alt_mem_onchip_memory2+0xff7e551c>
  80555c:	0005883a 	mov	r2,zero
  805560:	003ff006 	br	805524 <__alt_mem_onchip_memory2+0xff7e5524>
  805564:	00802074 	movhi	r2,129
  805568:	1081c004 	addi	r2,r2,1792
  80556c:	f800283a 	ret

00805570 <__locale_charset>:
  805570:	00802074 	movhi	r2,129
  805574:	10839204 	addi	r2,r2,3656
  805578:	f800283a 	ret

0080557c <__locale_mb_cur_max>:
  80557c:	00802074 	movhi	r2,129
  805580:	10895f04 	addi	r2,r2,9596
  805584:	10800017 	ldw	r2,0(r2)
  805588:	f800283a 	ret

0080558c <__locale_msgcharset>:
  80558c:	00802074 	movhi	r2,129
  805590:	10838a04 	addi	r2,r2,3624
  805594:	f800283a 	ret

00805598 <__locale_cjk_lang>:
  805598:	0005883a 	mov	r2,zero
  80559c:	f800283a 	ret

008055a0 <_localeconv_r>:
  8055a0:	00802074 	movhi	r2,129
  8055a4:	10839a04 	addi	r2,r2,3688
  8055a8:	f800283a 	ret

008055ac <setlocale>:
  8055ac:	00802074 	movhi	r2,129
  8055b0:	10895e04 	addi	r2,r2,9592
  8055b4:	280d883a 	mov	r6,r5
  8055b8:	200b883a 	mov	r5,r4
  8055bc:	11000017 	ldw	r4,0(r2)
  8055c0:	08054f41 	jmpi	8054f4 <_setlocale_r>

008055c4 <localeconv>:
  8055c4:	00802074 	movhi	r2,129
  8055c8:	10839a04 	addi	r2,r2,3688
  8055cc:	f800283a 	ret

008055d0 <__smakebuf_r>:
  8055d0:	2880030b 	ldhu	r2,12(r5)
  8055d4:	10c0008c 	andi	r3,r2,2
  8055d8:	1800411e 	bne	r3,zero,8056e0 <__smakebuf_r+0x110>
  8055dc:	deffec04 	addi	sp,sp,-80
  8055e0:	dc000f15 	stw	r16,60(sp)
  8055e4:	2821883a 	mov	r16,r5
  8055e8:	2940038f 	ldh	r5,14(r5)
  8055ec:	dc401015 	stw	r17,64(sp)
  8055f0:	dfc01315 	stw	ra,76(sp)
  8055f4:	dcc01215 	stw	r19,72(sp)
  8055f8:	dc801115 	stw	r18,68(sp)
  8055fc:	2023883a 	mov	r17,r4
  805600:	28001c16 	blt	r5,zero,805674 <__smakebuf_r+0xa4>
  805604:	d80d883a 	mov	r6,sp
  805608:	0809ac80 	call	809ac8 <_fstat_r>
  80560c:	10001816 	blt	r2,zero,805670 <__smakebuf_r+0xa0>
  805610:	d8800117 	ldw	r2,4(sp)
  805614:	00e00014 	movui	r3,32768
  805618:	10bc000c 	andi	r2,r2,61440
  80561c:	14c80020 	cmpeqi	r19,r2,8192
  805620:	10c03726 	beq	r2,r3,805700 <__smakebuf_r+0x130>
  805624:	80c0030b 	ldhu	r3,12(r16)
  805628:	18c20014 	ori	r3,r3,2048
  80562c:	80c0030d 	sth	r3,12(r16)
  805630:	00c80004 	movi	r3,8192
  805634:	10c0521e 	bne	r2,r3,805780 <__smakebuf_r+0x1b0>
  805638:	8140038f 	ldh	r5,14(r16)
  80563c:	8809883a 	mov	r4,r17
  805640:	0809b240 	call	809b24 <_isatty_r>
  805644:	10004c26 	beq	r2,zero,805778 <__smakebuf_r+0x1a8>
  805648:	8080030b 	ldhu	r2,12(r16)
  80564c:	80c010c4 	addi	r3,r16,67
  805650:	80c00015 	stw	r3,0(r16)
  805654:	10800054 	ori	r2,r2,1
  805658:	8080030d 	sth	r2,12(r16)
  80565c:	00800044 	movi	r2,1
  805660:	80c00415 	stw	r3,16(r16)
  805664:	80800515 	stw	r2,20(r16)
  805668:	04810004 	movi	r18,1024
  80566c:	00000706 	br	80568c <__smakebuf_r+0xbc>
  805670:	8080030b 	ldhu	r2,12(r16)
  805674:	10c0200c 	andi	r3,r2,128
  805678:	18001f1e 	bne	r3,zero,8056f8 <__smakebuf_r+0x128>
  80567c:	04810004 	movi	r18,1024
  805680:	10820014 	ori	r2,r2,2048
  805684:	8080030d 	sth	r2,12(r16)
  805688:	0027883a 	mov	r19,zero
  80568c:	900b883a 	mov	r5,r18
  805690:	8809883a 	mov	r4,r17
  805694:	080578c0 	call	80578c <_malloc_r>
  805698:	10002c26 	beq	r2,zero,80574c <__smakebuf_r+0x17c>
  80569c:	80c0030b 	ldhu	r3,12(r16)
  8056a0:	01002034 	movhi	r4,128
  8056a4:	2111b204 	addi	r4,r4,18120
  8056a8:	89000f15 	stw	r4,60(r17)
  8056ac:	18c02014 	ori	r3,r3,128
  8056b0:	80c0030d 	sth	r3,12(r16)
  8056b4:	80800015 	stw	r2,0(r16)
  8056b8:	80800415 	stw	r2,16(r16)
  8056bc:	84800515 	stw	r18,20(r16)
  8056c0:	98001a1e 	bne	r19,zero,80572c <__smakebuf_r+0x15c>
  8056c4:	dfc01317 	ldw	ra,76(sp)
  8056c8:	dcc01217 	ldw	r19,72(sp)
  8056cc:	dc801117 	ldw	r18,68(sp)
  8056d0:	dc401017 	ldw	r17,64(sp)
  8056d4:	dc000f17 	ldw	r16,60(sp)
  8056d8:	dec01404 	addi	sp,sp,80
  8056dc:	f800283a 	ret
  8056e0:	288010c4 	addi	r2,r5,67
  8056e4:	28800015 	stw	r2,0(r5)
  8056e8:	28800415 	stw	r2,16(r5)
  8056ec:	00800044 	movi	r2,1
  8056f0:	28800515 	stw	r2,20(r5)
  8056f4:	f800283a 	ret
  8056f8:	04801004 	movi	r18,64
  8056fc:	003fe006 	br	805680 <__alt_mem_onchip_memory2+0xff7e5680>
  805700:	81000a17 	ldw	r4,40(r16)
  805704:	00c02034 	movhi	r3,128
  805708:	18df7d04 	addi	r3,r3,32244
  80570c:	20ffc51e 	bne	r4,r3,805624 <__alt_mem_onchip_memory2+0xff7e5624>
  805710:	8080030b 	ldhu	r2,12(r16)
  805714:	04810004 	movi	r18,1024
  805718:	84801315 	stw	r18,76(r16)
  80571c:	1484b03a 	or	r2,r2,r18
  805720:	8080030d 	sth	r2,12(r16)
  805724:	0027883a 	mov	r19,zero
  805728:	003fd806 	br	80568c <__alt_mem_onchip_memory2+0xff7e568c>
  80572c:	8140038f 	ldh	r5,14(r16)
  805730:	8809883a 	mov	r4,r17
  805734:	0809b240 	call	809b24 <_isatty_r>
  805738:	103fe226 	beq	r2,zero,8056c4 <__alt_mem_onchip_memory2+0xff7e56c4>
  80573c:	8080030b 	ldhu	r2,12(r16)
  805740:	10800054 	ori	r2,r2,1
  805744:	8080030d 	sth	r2,12(r16)
  805748:	003fde06 	br	8056c4 <__alt_mem_onchip_memory2+0xff7e56c4>
  80574c:	8080030b 	ldhu	r2,12(r16)
  805750:	10c0800c 	andi	r3,r2,512
  805754:	183fdb1e 	bne	r3,zero,8056c4 <__alt_mem_onchip_memory2+0xff7e56c4>
  805758:	10800094 	ori	r2,r2,2
  80575c:	80c010c4 	addi	r3,r16,67
  805760:	8080030d 	sth	r2,12(r16)
  805764:	00800044 	movi	r2,1
  805768:	80c00015 	stw	r3,0(r16)
  80576c:	80c00415 	stw	r3,16(r16)
  805770:	80800515 	stw	r2,20(r16)
  805774:	003fd306 	br	8056c4 <__alt_mem_onchip_memory2+0xff7e56c4>
  805778:	04810004 	movi	r18,1024
  80577c:	003fc306 	br	80568c <__alt_mem_onchip_memory2+0xff7e568c>
  805780:	0027883a 	mov	r19,zero
  805784:	04810004 	movi	r18,1024
  805788:	003fc006 	br	80568c <__alt_mem_onchip_memory2+0xff7e568c>

0080578c <_malloc_r>:
  80578c:	defff504 	addi	sp,sp,-44
  805790:	dc800315 	stw	r18,12(sp)
  805794:	dfc00a15 	stw	ra,40(sp)
  805798:	df000915 	stw	fp,36(sp)
  80579c:	ddc00815 	stw	r23,32(sp)
  8057a0:	dd800715 	stw	r22,28(sp)
  8057a4:	dd400615 	stw	r21,24(sp)
  8057a8:	dd000515 	stw	r20,20(sp)
  8057ac:	dcc00415 	stw	r19,16(sp)
  8057b0:	dc400215 	stw	r17,8(sp)
  8057b4:	dc000115 	stw	r16,4(sp)
  8057b8:	288002c4 	addi	r2,r5,11
  8057bc:	00c00584 	movi	r3,22
  8057c0:	2025883a 	mov	r18,r4
  8057c4:	18807f2e 	bgeu	r3,r2,8059c4 <_malloc_r+0x238>
  8057c8:	047ffe04 	movi	r17,-8
  8057cc:	1462703a 	and	r17,r2,r17
  8057d0:	8800a316 	blt	r17,zero,805a60 <_malloc_r+0x2d4>
  8057d4:	8940a236 	bltu	r17,r5,805a60 <_malloc_r+0x2d4>
  8057d8:	080db540 	call	80db54 <__malloc_lock>
  8057dc:	00807dc4 	movi	r2,503
  8057e0:	1441e92e 	bgeu	r2,r17,805f88 <_malloc_r+0x7fc>
  8057e4:	8804d27a 	srli	r2,r17,9
  8057e8:	1000a126 	beq	r2,zero,805a70 <_malloc_r+0x2e4>
  8057ec:	00c00104 	movi	r3,4
  8057f0:	18811e36 	bltu	r3,r2,805c6c <_malloc_r+0x4e0>
  8057f4:	8804d1ba 	srli	r2,r17,6
  8057f8:	12000e44 	addi	r8,r2,57
  8057fc:	11c00e04 	addi	r7,r2,56
  805800:	4209883a 	add	r4,r8,r8
  805804:	04c02074 	movhi	r19,129
  805808:	2109883a 	add	r4,r4,r4
  80580c:	9cc3a804 	addi	r19,r19,3744
  805810:	2109883a 	add	r4,r4,r4
  805814:	9909883a 	add	r4,r19,r4
  805818:	24000117 	ldw	r16,4(r4)
  80581c:	213ffe04 	addi	r4,r4,-8
  805820:	24009726 	beq	r4,r16,805a80 <_malloc_r+0x2f4>
  805824:	80800117 	ldw	r2,4(r16)
  805828:	01bfff04 	movi	r6,-4
  80582c:	014003c4 	movi	r5,15
  805830:	1184703a 	and	r2,r2,r6
  805834:	1447c83a 	sub	r3,r2,r17
  805838:	28c00716 	blt	r5,r3,805858 <_malloc_r+0xcc>
  80583c:	1800920e 	bge	r3,zero,805a88 <_malloc_r+0x2fc>
  805840:	84000317 	ldw	r16,12(r16)
  805844:	24008e26 	beq	r4,r16,805a80 <_malloc_r+0x2f4>
  805848:	80800117 	ldw	r2,4(r16)
  80584c:	1184703a 	and	r2,r2,r6
  805850:	1447c83a 	sub	r3,r2,r17
  805854:	28fff90e 	bge	r5,r3,80583c <__alt_mem_onchip_memory2+0xff7e583c>
  805858:	3809883a 	mov	r4,r7
  80585c:	01802074 	movhi	r6,129
  805860:	9c000417 	ldw	r16,16(r19)
  805864:	3183a804 	addi	r6,r6,3744
  805868:	32000204 	addi	r8,r6,8
  80586c:	82013426 	beq	r16,r8,805d40 <_malloc_r+0x5b4>
  805870:	80c00117 	ldw	r3,4(r16)
  805874:	00bfff04 	movi	r2,-4
  805878:	188e703a 	and	r7,r3,r2
  80587c:	3c45c83a 	sub	r2,r7,r17
  805880:	00c003c4 	movi	r3,15
  805884:	18811f16 	blt	r3,r2,805d04 <_malloc_r+0x578>
  805888:	32000515 	stw	r8,20(r6)
  80588c:	32000415 	stw	r8,16(r6)
  805890:	10007f0e 	bge	r2,zero,805a90 <_malloc_r+0x304>
  805894:	00807fc4 	movi	r2,511
  805898:	11c0fd36 	bltu	r2,r7,805c90 <_malloc_r+0x504>
  80589c:	3806d0fa 	srli	r3,r7,3
  8058a0:	01c00044 	movi	r7,1
  8058a4:	30800117 	ldw	r2,4(r6)
  8058a8:	19400044 	addi	r5,r3,1
  8058ac:	294b883a 	add	r5,r5,r5
  8058b0:	1807d0ba 	srai	r3,r3,2
  8058b4:	294b883a 	add	r5,r5,r5
  8058b8:	294b883a 	add	r5,r5,r5
  8058bc:	298b883a 	add	r5,r5,r6
  8058c0:	38c6983a 	sll	r3,r7,r3
  8058c4:	29c00017 	ldw	r7,0(r5)
  8058c8:	2a7ffe04 	addi	r9,r5,-8
  8058cc:	1886b03a 	or	r3,r3,r2
  8058d0:	82400315 	stw	r9,12(r16)
  8058d4:	81c00215 	stw	r7,8(r16)
  8058d8:	30c00115 	stw	r3,4(r6)
  8058dc:	2c000015 	stw	r16,0(r5)
  8058e0:	3c000315 	stw	r16,12(r7)
  8058e4:	2005d0ba 	srai	r2,r4,2
  8058e8:	01400044 	movi	r5,1
  8058ec:	288a983a 	sll	r5,r5,r2
  8058f0:	19406f36 	bltu	r3,r5,805ab0 <_malloc_r+0x324>
  8058f4:	28c4703a 	and	r2,r5,r3
  8058f8:	10000a1e 	bne	r2,zero,805924 <_malloc_r+0x198>
  8058fc:	00bfff04 	movi	r2,-4
  805900:	294b883a 	add	r5,r5,r5
  805904:	2088703a 	and	r4,r4,r2
  805908:	28c4703a 	and	r2,r5,r3
  80590c:	21000104 	addi	r4,r4,4
  805910:	1000041e 	bne	r2,zero,805924 <_malloc_r+0x198>
  805914:	294b883a 	add	r5,r5,r5
  805918:	28c4703a 	and	r2,r5,r3
  80591c:	21000104 	addi	r4,r4,4
  805920:	103ffc26 	beq	r2,zero,805914 <__alt_mem_onchip_memory2+0xff7e5914>
  805924:	02bfff04 	movi	r10,-4
  805928:	024003c4 	movi	r9,15
  80592c:	21800044 	addi	r6,r4,1
  805930:	318d883a 	add	r6,r6,r6
  805934:	318d883a 	add	r6,r6,r6
  805938:	318d883a 	add	r6,r6,r6
  80593c:	998d883a 	add	r6,r19,r6
  805940:	333ffe04 	addi	r12,r6,-8
  805944:	2017883a 	mov	r11,r4
  805948:	31800104 	addi	r6,r6,4
  80594c:	34000017 	ldw	r16,0(r6)
  805950:	31fffd04 	addi	r7,r6,-12
  805954:	81c0041e 	bne	r16,r7,805968 <_malloc_r+0x1dc>
  805958:	0000fb06 	br	805d48 <_malloc_r+0x5bc>
  80595c:	1801030e 	bge	r3,zero,805d6c <_malloc_r+0x5e0>
  805960:	84000317 	ldw	r16,12(r16)
  805964:	81c0f826 	beq	r16,r7,805d48 <_malloc_r+0x5bc>
  805968:	80800117 	ldw	r2,4(r16)
  80596c:	1284703a 	and	r2,r2,r10
  805970:	1447c83a 	sub	r3,r2,r17
  805974:	48fff90e 	bge	r9,r3,80595c <__alt_mem_onchip_memory2+0xff7e595c>
  805978:	80800317 	ldw	r2,12(r16)
  80597c:	81000217 	ldw	r4,8(r16)
  805980:	89400054 	ori	r5,r17,1
  805984:	81400115 	stw	r5,4(r16)
  805988:	20800315 	stw	r2,12(r4)
  80598c:	11000215 	stw	r4,8(r2)
  805990:	8463883a 	add	r17,r16,r17
  805994:	9c400515 	stw	r17,20(r19)
  805998:	9c400415 	stw	r17,16(r19)
  80599c:	18800054 	ori	r2,r3,1
  8059a0:	88800115 	stw	r2,4(r17)
  8059a4:	8a000315 	stw	r8,12(r17)
  8059a8:	8a000215 	stw	r8,8(r17)
  8059ac:	88e3883a 	add	r17,r17,r3
  8059b0:	88c00015 	stw	r3,0(r17)
  8059b4:	9009883a 	mov	r4,r18
  8059b8:	080db780 	call	80db78 <__malloc_unlock>
  8059bc:	80800204 	addi	r2,r16,8
  8059c0:	00001b06 	br	805a30 <_malloc_r+0x2a4>
  8059c4:	04400404 	movi	r17,16
  8059c8:	89402536 	bltu	r17,r5,805a60 <_malloc_r+0x2d4>
  8059cc:	080db540 	call	80db54 <__malloc_lock>
  8059d0:	00800184 	movi	r2,6
  8059d4:	01000084 	movi	r4,2
  8059d8:	04c02074 	movhi	r19,129
  8059dc:	1085883a 	add	r2,r2,r2
  8059e0:	9cc3a804 	addi	r19,r19,3744
  8059e4:	1085883a 	add	r2,r2,r2
  8059e8:	9885883a 	add	r2,r19,r2
  8059ec:	14000117 	ldw	r16,4(r2)
  8059f0:	10fffe04 	addi	r3,r2,-8
  8059f4:	80c0d926 	beq	r16,r3,805d5c <_malloc_r+0x5d0>
  8059f8:	80c00117 	ldw	r3,4(r16)
  8059fc:	81000317 	ldw	r4,12(r16)
  805a00:	00bfff04 	movi	r2,-4
  805a04:	1884703a 	and	r2,r3,r2
  805a08:	81400217 	ldw	r5,8(r16)
  805a0c:	8085883a 	add	r2,r16,r2
  805a10:	10c00117 	ldw	r3,4(r2)
  805a14:	29000315 	stw	r4,12(r5)
  805a18:	21400215 	stw	r5,8(r4)
  805a1c:	18c00054 	ori	r3,r3,1
  805a20:	10c00115 	stw	r3,4(r2)
  805a24:	9009883a 	mov	r4,r18
  805a28:	080db780 	call	80db78 <__malloc_unlock>
  805a2c:	80800204 	addi	r2,r16,8
  805a30:	dfc00a17 	ldw	ra,40(sp)
  805a34:	df000917 	ldw	fp,36(sp)
  805a38:	ddc00817 	ldw	r23,32(sp)
  805a3c:	dd800717 	ldw	r22,28(sp)
  805a40:	dd400617 	ldw	r21,24(sp)
  805a44:	dd000517 	ldw	r20,20(sp)
  805a48:	dcc00417 	ldw	r19,16(sp)
  805a4c:	dc800317 	ldw	r18,12(sp)
  805a50:	dc400217 	ldw	r17,8(sp)
  805a54:	dc000117 	ldw	r16,4(sp)
  805a58:	dec00b04 	addi	sp,sp,44
  805a5c:	f800283a 	ret
  805a60:	00800304 	movi	r2,12
  805a64:	90800015 	stw	r2,0(r18)
  805a68:	0005883a 	mov	r2,zero
  805a6c:	003ff006 	br	805a30 <__alt_mem_onchip_memory2+0xff7e5a30>
  805a70:	01002004 	movi	r4,128
  805a74:	02001004 	movi	r8,64
  805a78:	01c00fc4 	movi	r7,63
  805a7c:	003f6106 	br	805804 <__alt_mem_onchip_memory2+0xff7e5804>
  805a80:	4009883a 	mov	r4,r8
  805a84:	003f7506 	br	80585c <__alt_mem_onchip_memory2+0xff7e585c>
  805a88:	81000317 	ldw	r4,12(r16)
  805a8c:	003fde06 	br	805a08 <__alt_mem_onchip_memory2+0xff7e5a08>
  805a90:	81c5883a 	add	r2,r16,r7
  805a94:	11400117 	ldw	r5,4(r2)
  805a98:	9009883a 	mov	r4,r18
  805a9c:	29400054 	ori	r5,r5,1
  805aa0:	11400115 	stw	r5,4(r2)
  805aa4:	080db780 	call	80db78 <__malloc_unlock>
  805aa8:	80800204 	addi	r2,r16,8
  805aac:	003fe006 	br	805a30 <__alt_mem_onchip_memory2+0xff7e5a30>
  805ab0:	9c000217 	ldw	r16,8(r19)
  805ab4:	00bfff04 	movi	r2,-4
  805ab8:	85800117 	ldw	r22,4(r16)
  805abc:	b0ac703a 	and	r22,r22,r2
  805ac0:	b4400336 	bltu	r22,r17,805ad0 <_malloc_r+0x344>
  805ac4:	b445c83a 	sub	r2,r22,r17
  805ac8:	00c003c4 	movi	r3,15
  805acc:	18805d16 	blt	r3,r2,805c44 <_malloc_r+0x4b8>
  805ad0:	05c02074 	movhi	r23,129
  805ad4:	00802074 	movhi	r2,129
  805ad8:	10905e04 	addi	r2,r2,16760
  805adc:	bdc96004 	addi	r23,r23,9600
  805ae0:	15400017 	ldw	r21,0(r2)
  805ae4:	b8c00017 	ldw	r3,0(r23)
  805ae8:	00bfffc4 	movi	r2,-1
  805aec:	858d883a 	add	r6,r16,r22
  805af0:	8d6b883a 	add	r21,r17,r21
  805af4:	1880ea26 	beq	r3,r2,805ea0 <_malloc_r+0x714>
  805af8:	ad4403c4 	addi	r21,r21,4111
  805afc:	00bc0004 	movi	r2,-4096
  805b00:	a8aa703a 	and	r21,r21,r2
  805b04:	a80b883a 	mov	r5,r21
  805b08:	9009883a 	mov	r4,r18
  805b0c:	d9800015 	stw	r6,0(sp)
  805b10:	0807cc80 	call	807cc8 <_sbrk_r>
  805b14:	1029883a 	mov	r20,r2
  805b18:	00bfffc4 	movi	r2,-1
  805b1c:	d9800017 	ldw	r6,0(sp)
  805b20:	a080e826 	beq	r20,r2,805ec4 <_malloc_r+0x738>
  805b24:	a180a636 	bltu	r20,r6,805dc0 <_malloc_r+0x634>
  805b28:	07002074 	movhi	fp,129
  805b2c:	e7106704 	addi	fp,fp,16796
  805b30:	e0800017 	ldw	r2,0(fp)
  805b34:	a887883a 	add	r3,r21,r2
  805b38:	e0c00015 	stw	r3,0(fp)
  805b3c:	3500e626 	beq	r6,r20,805ed8 <_malloc_r+0x74c>
  805b40:	b9000017 	ldw	r4,0(r23)
  805b44:	00bfffc4 	movi	r2,-1
  805b48:	2080ee26 	beq	r4,r2,805f04 <_malloc_r+0x778>
  805b4c:	a185c83a 	sub	r2,r20,r6
  805b50:	10c5883a 	add	r2,r2,r3
  805b54:	e0800015 	stw	r2,0(fp)
  805b58:	a0c001cc 	andi	r3,r20,7
  805b5c:	1800bc26 	beq	r3,zero,805e50 <_malloc_r+0x6c4>
  805b60:	a0e9c83a 	sub	r20,r20,r3
  805b64:	00840204 	movi	r2,4104
  805b68:	a5000204 	addi	r20,r20,8
  805b6c:	10c7c83a 	sub	r3,r2,r3
  805b70:	a545883a 	add	r2,r20,r21
  805b74:	1083ffcc 	andi	r2,r2,4095
  805b78:	18abc83a 	sub	r21,r3,r2
  805b7c:	a80b883a 	mov	r5,r21
  805b80:	9009883a 	mov	r4,r18
  805b84:	0807cc80 	call	807cc8 <_sbrk_r>
  805b88:	00ffffc4 	movi	r3,-1
  805b8c:	10c0e126 	beq	r2,r3,805f14 <_malloc_r+0x788>
  805b90:	1505c83a 	sub	r2,r2,r20
  805b94:	1545883a 	add	r2,r2,r21
  805b98:	10800054 	ori	r2,r2,1
  805b9c:	e0c00017 	ldw	r3,0(fp)
  805ba0:	9d000215 	stw	r20,8(r19)
  805ba4:	a0800115 	stw	r2,4(r20)
  805ba8:	a8c7883a 	add	r3,r21,r3
  805bac:	e0c00015 	stw	r3,0(fp)
  805bb0:	84c00e26 	beq	r16,r19,805bec <_malloc_r+0x460>
  805bb4:	018003c4 	movi	r6,15
  805bb8:	3580a72e 	bgeu	r6,r22,805e58 <_malloc_r+0x6cc>
  805bbc:	81400117 	ldw	r5,4(r16)
  805bc0:	013ffe04 	movi	r4,-8
  805bc4:	b0bffd04 	addi	r2,r22,-12
  805bc8:	1104703a 	and	r2,r2,r4
  805bcc:	2900004c 	andi	r4,r5,1
  805bd0:	2088b03a 	or	r4,r4,r2
  805bd4:	81000115 	stw	r4,4(r16)
  805bd8:	01400144 	movi	r5,5
  805bdc:	8089883a 	add	r4,r16,r2
  805be0:	21400115 	stw	r5,4(r4)
  805be4:	21400215 	stw	r5,8(r4)
  805be8:	3080cd36 	bltu	r6,r2,805f20 <_malloc_r+0x794>
  805bec:	00802074 	movhi	r2,129
  805bf0:	10905d04 	addi	r2,r2,16756
  805bf4:	11000017 	ldw	r4,0(r2)
  805bf8:	20c0012e 	bgeu	r4,r3,805c00 <_malloc_r+0x474>
  805bfc:	10c00015 	stw	r3,0(r2)
  805c00:	00802074 	movhi	r2,129
  805c04:	10905c04 	addi	r2,r2,16752
  805c08:	11000017 	ldw	r4,0(r2)
  805c0c:	9c000217 	ldw	r16,8(r19)
  805c10:	20c0012e 	bgeu	r4,r3,805c18 <_malloc_r+0x48c>
  805c14:	10c00015 	stw	r3,0(r2)
  805c18:	80c00117 	ldw	r3,4(r16)
  805c1c:	00bfff04 	movi	r2,-4
  805c20:	1886703a 	and	r3,r3,r2
  805c24:	1c45c83a 	sub	r2,r3,r17
  805c28:	1c400236 	bltu	r3,r17,805c34 <_malloc_r+0x4a8>
  805c2c:	00c003c4 	movi	r3,15
  805c30:	18800416 	blt	r3,r2,805c44 <_malloc_r+0x4b8>
  805c34:	9009883a 	mov	r4,r18
  805c38:	080db780 	call	80db78 <__malloc_unlock>
  805c3c:	0005883a 	mov	r2,zero
  805c40:	003f7b06 	br	805a30 <__alt_mem_onchip_memory2+0xff7e5a30>
  805c44:	88c00054 	ori	r3,r17,1
  805c48:	80c00115 	stw	r3,4(r16)
  805c4c:	8463883a 	add	r17,r16,r17
  805c50:	10800054 	ori	r2,r2,1
  805c54:	9c400215 	stw	r17,8(r19)
  805c58:	88800115 	stw	r2,4(r17)
  805c5c:	9009883a 	mov	r4,r18
  805c60:	080db780 	call	80db78 <__malloc_unlock>
  805c64:	80800204 	addi	r2,r16,8
  805c68:	003f7106 	br	805a30 <__alt_mem_onchip_memory2+0xff7e5a30>
  805c6c:	00c00504 	movi	r3,20
  805c70:	18804a2e 	bgeu	r3,r2,805d9c <_malloc_r+0x610>
  805c74:	00c01504 	movi	r3,84
  805c78:	18806e36 	bltu	r3,r2,805e34 <_malloc_r+0x6a8>
  805c7c:	8804d33a 	srli	r2,r17,12
  805c80:	12001bc4 	addi	r8,r2,111
  805c84:	11c01b84 	addi	r7,r2,110
  805c88:	4209883a 	add	r4,r8,r8
  805c8c:	003edd06 	br	805804 <__alt_mem_onchip_memory2+0xff7e5804>
  805c90:	3804d27a 	srli	r2,r7,9
  805c94:	00c00104 	movi	r3,4
  805c98:	1880442e 	bgeu	r3,r2,805dac <_malloc_r+0x620>
  805c9c:	00c00504 	movi	r3,20
  805ca0:	18808136 	bltu	r3,r2,805ea8 <_malloc_r+0x71c>
  805ca4:	11401704 	addi	r5,r2,92
  805ca8:	10c016c4 	addi	r3,r2,91
  805cac:	294b883a 	add	r5,r5,r5
  805cb0:	294b883a 	add	r5,r5,r5
  805cb4:	294b883a 	add	r5,r5,r5
  805cb8:	994b883a 	add	r5,r19,r5
  805cbc:	28800017 	ldw	r2,0(r5)
  805cc0:	01802074 	movhi	r6,129
  805cc4:	297ffe04 	addi	r5,r5,-8
  805cc8:	3183a804 	addi	r6,r6,3744
  805ccc:	28806526 	beq	r5,r2,805e64 <_malloc_r+0x6d8>
  805cd0:	01bfff04 	movi	r6,-4
  805cd4:	10c00117 	ldw	r3,4(r2)
  805cd8:	1986703a 	and	r3,r3,r6
  805cdc:	38c0022e 	bgeu	r7,r3,805ce8 <_malloc_r+0x55c>
  805ce0:	10800217 	ldw	r2,8(r2)
  805ce4:	28bffb1e 	bne	r5,r2,805cd4 <__alt_mem_onchip_memory2+0xff7e5cd4>
  805ce8:	11400317 	ldw	r5,12(r2)
  805cec:	98c00117 	ldw	r3,4(r19)
  805cf0:	81400315 	stw	r5,12(r16)
  805cf4:	80800215 	stw	r2,8(r16)
  805cf8:	2c000215 	stw	r16,8(r5)
  805cfc:	14000315 	stw	r16,12(r2)
  805d00:	003ef806 	br	8058e4 <__alt_mem_onchip_memory2+0xff7e58e4>
  805d04:	88c00054 	ori	r3,r17,1
  805d08:	80c00115 	stw	r3,4(r16)
  805d0c:	8463883a 	add	r17,r16,r17
  805d10:	34400515 	stw	r17,20(r6)
  805d14:	34400415 	stw	r17,16(r6)
  805d18:	10c00054 	ori	r3,r2,1
  805d1c:	8a000315 	stw	r8,12(r17)
  805d20:	8a000215 	stw	r8,8(r17)
  805d24:	88c00115 	stw	r3,4(r17)
  805d28:	88a3883a 	add	r17,r17,r2
  805d2c:	88800015 	stw	r2,0(r17)
  805d30:	9009883a 	mov	r4,r18
  805d34:	080db780 	call	80db78 <__malloc_unlock>
  805d38:	80800204 	addi	r2,r16,8
  805d3c:	003f3c06 	br	805a30 <__alt_mem_onchip_memory2+0xff7e5a30>
  805d40:	30c00117 	ldw	r3,4(r6)
  805d44:	003ee706 	br	8058e4 <__alt_mem_onchip_memory2+0xff7e58e4>
  805d48:	5ac00044 	addi	r11,r11,1
  805d4c:	588000cc 	andi	r2,r11,3
  805d50:	31800204 	addi	r6,r6,8
  805d54:	103efd1e 	bne	r2,zero,80594c <__alt_mem_onchip_memory2+0xff7e594c>
  805d58:	00002406 	br	805dec <_malloc_r+0x660>
  805d5c:	14000317 	ldw	r16,12(r2)
  805d60:	143f251e 	bne	r2,r16,8059f8 <__alt_mem_onchip_memory2+0xff7e59f8>
  805d64:	21000084 	addi	r4,r4,2
  805d68:	003ebc06 	br	80585c <__alt_mem_onchip_memory2+0xff7e585c>
  805d6c:	8085883a 	add	r2,r16,r2
  805d70:	10c00117 	ldw	r3,4(r2)
  805d74:	81000317 	ldw	r4,12(r16)
  805d78:	81400217 	ldw	r5,8(r16)
  805d7c:	18c00054 	ori	r3,r3,1
  805d80:	10c00115 	stw	r3,4(r2)
  805d84:	29000315 	stw	r4,12(r5)
  805d88:	21400215 	stw	r5,8(r4)
  805d8c:	9009883a 	mov	r4,r18
  805d90:	080db780 	call	80db78 <__malloc_unlock>
  805d94:	80800204 	addi	r2,r16,8
  805d98:	003f2506 	br	805a30 <__alt_mem_onchip_memory2+0xff7e5a30>
  805d9c:	12001704 	addi	r8,r2,92
  805da0:	11c016c4 	addi	r7,r2,91
  805da4:	4209883a 	add	r4,r8,r8
  805da8:	003e9606 	br	805804 <__alt_mem_onchip_memory2+0xff7e5804>
  805dac:	3804d1ba 	srli	r2,r7,6
  805db0:	11400e44 	addi	r5,r2,57
  805db4:	10c00e04 	addi	r3,r2,56
  805db8:	294b883a 	add	r5,r5,r5
  805dbc:	003fbc06 	br	805cb0 <__alt_mem_onchip_memory2+0xff7e5cb0>
  805dc0:	84ff5926 	beq	r16,r19,805b28 <__alt_mem_onchip_memory2+0xff7e5b28>
  805dc4:	00802074 	movhi	r2,129
  805dc8:	1083a804 	addi	r2,r2,3744
  805dcc:	14000217 	ldw	r16,8(r2)
  805dd0:	00bfff04 	movi	r2,-4
  805dd4:	80c00117 	ldw	r3,4(r16)
  805dd8:	1886703a 	and	r3,r3,r2
  805ddc:	003f9106 	br	805c24 <__alt_mem_onchip_memory2+0xff7e5c24>
  805de0:	60800217 	ldw	r2,8(r12)
  805de4:	213fffc4 	addi	r4,r4,-1
  805de8:	1300651e 	bne	r2,r12,805f80 <_malloc_r+0x7f4>
  805dec:	208000cc 	andi	r2,r4,3
  805df0:	633ffe04 	addi	r12,r12,-8
  805df4:	103ffa1e 	bne	r2,zero,805de0 <__alt_mem_onchip_memory2+0xff7e5de0>
  805df8:	98800117 	ldw	r2,4(r19)
  805dfc:	0146303a 	nor	r3,zero,r5
  805e00:	1884703a 	and	r2,r3,r2
  805e04:	98800115 	stw	r2,4(r19)
  805e08:	294b883a 	add	r5,r5,r5
  805e0c:	117f2836 	bltu	r2,r5,805ab0 <__alt_mem_onchip_memory2+0xff7e5ab0>
  805e10:	283f2726 	beq	r5,zero,805ab0 <__alt_mem_onchip_memory2+0xff7e5ab0>
  805e14:	2886703a 	and	r3,r5,r2
  805e18:	5809883a 	mov	r4,r11
  805e1c:	183ec31e 	bne	r3,zero,80592c <__alt_mem_onchip_memory2+0xff7e592c>
  805e20:	294b883a 	add	r5,r5,r5
  805e24:	2886703a 	and	r3,r5,r2
  805e28:	21000104 	addi	r4,r4,4
  805e2c:	183ffc26 	beq	r3,zero,805e20 <__alt_mem_onchip_memory2+0xff7e5e20>
  805e30:	003ebe06 	br	80592c <__alt_mem_onchip_memory2+0xff7e592c>
  805e34:	00c05504 	movi	r3,340
  805e38:	18801236 	bltu	r3,r2,805e84 <_malloc_r+0x6f8>
  805e3c:	8804d3fa 	srli	r2,r17,15
  805e40:	12001e04 	addi	r8,r2,120
  805e44:	11c01dc4 	addi	r7,r2,119
  805e48:	4209883a 	add	r4,r8,r8
  805e4c:	003e6d06 	br	805804 <__alt_mem_onchip_memory2+0xff7e5804>
  805e50:	00c40004 	movi	r3,4096
  805e54:	003f4606 	br	805b70 <__alt_mem_onchip_memory2+0xff7e5b70>
  805e58:	00800044 	movi	r2,1
  805e5c:	a0800115 	stw	r2,4(r20)
  805e60:	003f7406 	br	805c34 <__alt_mem_onchip_memory2+0xff7e5c34>
  805e64:	1805d0ba 	srai	r2,r3,2
  805e68:	01c00044 	movi	r7,1
  805e6c:	30c00117 	ldw	r3,4(r6)
  805e70:	388e983a 	sll	r7,r7,r2
  805e74:	2805883a 	mov	r2,r5
  805e78:	38c6b03a 	or	r3,r7,r3
  805e7c:	30c00115 	stw	r3,4(r6)
  805e80:	003f9b06 	br	805cf0 <__alt_mem_onchip_memory2+0xff7e5cf0>
  805e84:	00c15504 	movi	r3,1364
  805e88:	18801a36 	bltu	r3,r2,805ef4 <_malloc_r+0x768>
  805e8c:	8804d4ba 	srli	r2,r17,18
  805e90:	12001f44 	addi	r8,r2,125
  805e94:	11c01f04 	addi	r7,r2,124
  805e98:	4209883a 	add	r4,r8,r8
  805e9c:	003e5906 	br	805804 <__alt_mem_onchip_memory2+0xff7e5804>
  805ea0:	ad400404 	addi	r21,r21,16
  805ea4:	003f1706 	br	805b04 <__alt_mem_onchip_memory2+0xff7e5b04>
  805ea8:	00c01504 	movi	r3,84
  805eac:	18802336 	bltu	r3,r2,805f3c <_malloc_r+0x7b0>
  805eb0:	3804d33a 	srli	r2,r7,12
  805eb4:	11401bc4 	addi	r5,r2,111
  805eb8:	10c01b84 	addi	r3,r2,110
  805ebc:	294b883a 	add	r5,r5,r5
  805ec0:	003f7b06 	br	805cb0 <__alt_mem_onchip_memory2+0xff7e5cb0>
  805ec4:	9c000217 	ldw	r16,8(r19)
  805ec8:	00bfff04 	movi	r2,-4
  805ecc:	80c00117 	ldw	r3,4(r16)
  805ed0:	1886703a 	and	r3,r3,r2
  805ed4:	003f5306 	br	805c24 <__alt_mem_onchip_memory2+0xff7e5c24>
  805ed8:	3083ffcc 	andi	r2,r6,4095
  805edc:	103f181e 	bne	r2,zero,805b40 <__alt_mem_onchip_memory2+0xff7e5b40>
  805ee0:	99000217 	ldw	r4,8(r19)
  805ee4:	b545883a 	add	r2,r22,r21
  805ee8:	10800054 	ori	r2,r2,1
  805eec:	20800115 	stw	r2,4(r4)
  805ef0:	003f3e06 	br	805bec <__alt_mem_onchip_memory2+0xff7e5bec>
  805ef4:	01003f84 	movi	r4,254
  805ef8:	02001fc4 	movi	r8,127
  805efc:	01c01f84 	movi	r7,126
  805f00:	003e4006 	br	805804 <__alt_mem_onchip_memory2+0xff7e5804>
  805f04:	00802074 	movhi	r2,129
  805f08:	10896004 	addi	r2,r2,9600
  805f0c:	15000015 	stw	r20,0(r2)
  805f10:	003f1106 	br	805b58 <__alt_mem_onchip_memory2+0xff7e5b58>
  805f14:	00800044 	movi	r2,1
  805f18:	002b883a 	mov	r21,zero
  805f1c:	003f1f06 	br	805b9c <__alt_mem_onchip_memory2+0xff7e5b9c>
  805f20:	81400204 	addi	r5,r16,8
  805f24:	9009883a 	mov	r4,r18
  805f28:	0804b940 	call	804b94 <_free_r>
  805f2c:	00802074 	movhi	r2,129
  805f30:	10906704 	addi	r2,r2,16796
  805f34:	10c00017 	ldw	r3,0(r2)
  805f38:	003f2c06 	br	805bec <__alt_mem_onchip_memory2+0xff7e5bec>
  805f3c:	00c05504 	movi	r3,340
  805f40:	18800536 	bltu	r3,r2,805f58 <_malloc_r+0x7cc>
  805f44:	3804d3fa 	srli	r2,r7,15
  805f48:	11401e04 	addi	r5,r2,120
  805f4c:	10c01dc4 	addi	r3,r2,119
  805f50:	294b883a 	add	r5,r5,r5
  805f54:	003f5606 	br	805cb0 <__alt_mem_onchip_memory2+0xff7e5cb0>
  805f58:	00c15504 	movi	r3,1364
  805f5c:	18800536 	bltu	r3,r2,805f74 <_malloc_r+0x7e8>
  805f60:	3804d4ba 	srli	r2,r7,18
  805f64:	11401f44 	addi	r5,r2,125
  805f68:	10c01f04 	addi	r3,r2,124
  805f6c:	294b883a 	add	r5,r5,r5
  805f70:	003f4f06 	br	805cb0 <__alt_mem_onchip_memory2+0xff7e5cb0>
  805f74:	01403f84 	movi	r5,254
  805f78:	00c01f84 	movi	r3,126
  805f7c:	003f4c06 	br	805cb0 <__alt_mem_onchip_memory2+0xff7e5cb0>
  805f80:	98800117 	ldw	r2,4(r19)
  805f84:	003fa006 	br	805e08 <__alt_mem_onchip_memory2+0xff7e5e08>
  805f88:	8808d0fa 	srli	r4,r17,3
  805f8c:	20800044 	addi	r2,r4,1
  805f90:	1085883a 	add	r2,r2,r2
  805f94:	003e9006 	br	8059d8 <__alt_mem_onchip_memory2+0xff7e59d8>

00805f98 <memchr>:
  805f98:	208000cc 	andi	r2,r4,3
  805f9c:	280f883a 	mov	r7,r5
  805fa0:	10003426 	beq	r2,zero,806074 <memchr+0xdc>
  805fa4:	30bfffc4 	addi	r2,r6,-1
  805fa8:	30001a26 	beq	r6,zero,806014 <memchr+0x7c>
  805fac:	20c00003 	ldbu	r3,0(r4)
  805fb0:	29803fcc 	andi	r6,r5,255
  805fb4:	30c0051e 	bne	r6,r3,805fcc <memchr+0x34>
  805fb8:	00001806 	br	80601c <memchr+0x84>
  805fbc:	10001526 	beq	r2,zero,806014 <memchr+0x7c>
  805fc0:	20c00003 	ldbu	r3,0(r4)
  805fc4:	10bfffc4 	addi	r2,r2,-1
  805fc8:	30c01426 	beq	r6,r3,80601c <memchr+0x84>
  805fcc:	21000044 	addi	r4,r4,1
  805fd0:	20c000cc 	andi	r3,r4,3
  805fd4:	183ff91e 	bne	r3,zero,805fbc <__alt_mem_onchip_memory2+0xff7e5fbc>
  805fd8:	020000c4 	movi	r8,3
  805fdc:	40801136 	bltu	r8,r2,806024 <memchr+0x8c>
  805fe0:	10000c26 	beq	r2,zero,806014 <memchr+0x7c>
  805fe4:	20c00003 	ldbu	r3,0(r4)
  805fe8:	29403fcc 	andi	r5,r5,255
  805fec:	28c00b26 	beq	r5,r3,80601c <memchr+0x84>
  805ff0:	20c00044 	addi	r3,r4,1
  805ff4:	39803fcc 	andi	r6,r7,255
  805ff8:	2089883a 	add	r4,r4,r2
  805ffc:	00000306 	br	80600c <memchr+0x74>
  806000:	18c00044 	addi	r3,r3,1
  806004:	197fffc3 	ldbu	r5,-1(r3)
  806008:	31400526 	beq	r6,r5,806020 <memchr+0x88>
  80600c:	1805883a 	mov	r2,r3
  806010:	20fffb1e 	bne	r4,r3,806000 <__alt_mem_onchip_memory2+0xff7e6000>
  806014:	0005883a 	mov	r2,zero
  806018:	f800283a 	ret
  80601c:	2005883a 	mov	r2,r4
  806020:	f800283a 	ret
  806024:	28c03fcc 	andi	r3,r5,255
  806028:	1812923a 	slli	r9,r3,8
  80602c:	02ffbff4 	movhi	r11,65279
  806030:	02a02074 	movhi	r10,32897
  806034:	48d2b03a 	or	r9,r9,r3
  806038:	4806943a 	slli	r3,r9,16
  80603c:	5affbfc4 	addi	r11,r11,-257
  806040:	52a02004 	addi	r10,r10,-32640
  806044:	48d2b03a 	or	r9,r9,r3
  806048:	20c00017 	ldw	r3,0(r4)
  80604c:	48c6f03a 	xor	r3,r9,r3
  806050:	1acd883a 	add	r6,r3,r11
  806054:	00c6303a 	nor	r3,zero,r3
  806058:	30c6703a 	and	r3,r6,r3
  80605c:	1a86703a 	and	r3,r3,r10
  806060:	183fe01e 	bne	r3,zero,805fe4 <__alt_mem_onchip_memory2+0xff7e5fe4>
  806064:	10bfff04 	addi	r2,r2,-4
  806068:	21000104 	addi	r4,r4,4
  80606c:	40bff636 	bltu	r8,r2,806048 <__alt_mem_onchip_memory2+0xff7e6048>
  806070:	003fdb06 	br	805fe0 <__alt_mem_onchip_memory2+0xff7e5fe0>
  806074:	3005883a 	mov	r2,r6
  806078:	003fd706 	br	805fd8 <__alt_mem_onchip_memory2+0xff7e5fd8>

0080607c <memcpy>:
  80607c:	defffd04 	addi	sp,sp,-12
  806080:	dfc00215 	stw	ra,8(sp)
  806084:	dc400115 	stw	r17,4(sp)
  806088:	dc000015 	stw	r16,0(sp)
  80608c:	00c003c4 	movi	r3,15
  806090:	2005883a 	mov	r2,r4
  806094:	1980452e 	bgeu	r3,r6,8061ac <memcpy+0x130>
  806098:	2906b03a 	or	r3,r5,r4
  80609c:	18c000cc 	andi	r3,r3,3
  8060a0:	1800441e 	bne	r3,zero,8061b4 <memcpy+0x138>
  8060a4:	347ffc04 	addi	r17,r6,-16
  8060a8:	8822d13a 	srli	r17,r17,4
  8060ac:	28c00104 	addi	r3,r5,4
  8060b0:	23400104 	addi	r13,r4,4
  8060b4:	8820913a 	slli	r16,r17,4
  8060b8:	2b000204 	addi	r12,r5,8
  8060bc:	22c00204 	addi	r11,r4,8
  8060c0:	84000504 	addi	r16,r16,20
  8060c4:	2a800304 	addi	r10,r5,12
  8060c8:	22400304 	addi	r9,r4,12
  8060cc:	2c21883a 	add	r16,r5,r16
  8060d0:	2811883a 	mov	r8,r5
  8060d4:	200f883a 	mov	r7,r4
  8060d8:	41000017 	ldw	r4,0(r8)
  8060dc:	1fc00017 	ldw	ra,0(r3)
  8060e0:	63c00017 	ldw	r15,0(r12)
  8060e4:	39000015 	stw	r4,0(r7)
  8060e8:	53800017 	ldw	r14,0(r10)
  8060ec:	6fc00015 	stw	ra,0(r13)
  8060f0:	5bc00015 	stw	r15,0(r11)
  8060f4:	4b800015 	stw	r14,0(r9)
  8060f8:	18c00404 	addi	r3,r3,16
  8060fc:	39c00404 	addi	r7,r7,16
  806100:	42000404 	addi	r8,r8,16
  806104:	6b400404 	addi	r13,r13,16
  806108:	63000404 	addi	r12,r12,16
  80610c:	5ac00404 	addi	r11,r11,16
  806110:	52800404 	addi	r10,r10,16
  806114:	4a400404 	addi	r9,r9,16
  806118:	1c3fef1e 	bne	r3,r16,8060d8 <__alt_mem_onchip_memory2+0xff7e60d8>
  80611c:	89c00044 	addi	r7,r17,1
  806120:	380e913a 	slli	r7,r7,4
  806124:	310003cc 	andi	r4,r6,15
  806128:	02c000c4 	movi	r11,3
  80612c:	11c7883a 	add	r3,r2,r7
  806130:	29cb883a 	add	r5,r5,r7
  806134:	5900212e 	bgeu	r11,r4,8061bc <memcpy+0x140>
  806138:	1813883a 	mov	r9,r3
  80613c:	2811883a 	mov	r8,r5
  806140:	200f883a 	mov	r7,r4
  806144:	42800017 	ldw	r10,0(r8)
  806148:	4a400104 	addi	r9,r9,4
  80614c:	39ffff04 	addi	r7,r7,-4
  806150:	4abfff15 	stw	r10,-4(r9)
  806154:	42000104 	addi	r8,r8,4
  806158:	59fffa36 	bltu	r11,r7,806144 <__alt_mem_onchip_memory2+0xff7e6144>
  80615c:	213fff04 	addi	r4,r4,-4
  806160:	2008d0ba 	srli	r4,r4,2
  806164:	318000cc 	andi	r6,r6,3
  806168:	21000044 	addi	r4,r4,1
  80616c:	2109883a 	add	r4,r4,r4
  806170:	2109883a 	add	r4,r4,r4
  806174:	1907883a 	add	r3,r3,r4
  806178:	290b883a 	add	r5,r5,r4
  80617c:	30000626 	beq	r6,zero,806198 <memcpy+0x11c>
  806180:	198d883a 	add	r6,r3,r6
  806184:	29c00003 	ldbu	r7,0(r5)
  806188:	18c00044 	addi	r3,r3,1
  80618c:	29400044 	addi	r5,r5,1
  806190:	19ffffc5 	stb	r7,-1(r3)
  806194:	19bffb1e 	bne	r3,r6,806184 <__alt_mem_onchip_memory2+0xff7e6184>
  806198:	dfc00217 	ldw	ra,8(sp)
  80619c:	dc400117 	ldw	r17,4(sp)
  8061a0:	dc000017 	ldw	r16,0(sp)
  8061a4:	dec00304 	addi	sp,sp,12
  8061a8:	f800283a 	ret
  8061ac:	2007883a 	mov	r3,r4
  8061b0:	003ff206 	br	80617c <__alt_mem_onchip_memory2+0xff7e617c>
  8061b4:	2007883a 	mov	r3,r4
  8061b8:	003ff106 	br	806180 <__alt_mem_onchip_memory2+0xff7e6180>
  8061bc:	200d883a 	mov	r6,r4
  8061c0:	003fee06 	br	80617c <__alt_mem_onchip_memory2+0xff7e617c>

008061c4 <memmove>:
  8061c4:	2005883a 	mov	r2,r4
  8061c8:	29000b2e 	bgeu	r5,r4,8061f8 <memmove+0x34>
  8061cc:	298f883a 	add	r7,r5,r6
  8061d0:	21c0092e 	bgeu	r4,r7,8061f8 <memmove+0x34>
  8061d4:	2187883a 	add	r3,r4,r6
  8061d8:	198bc83a 	sub	r5,r3,r6
  8061dc:	30004826 	beq	r6,zero,806300 <memmove+0x13c>
  8061e0:	39ffffc4 	addi	r7,r7,-1
  8061e4:	39000003 	ldbu	r4,0(r7)
  8061e8:	18ffffc4 	addi	r3,r3,-1
  8061ec:	19000005 	stb	r4,0(r3)
  8061f0:	28fffb1e 	bne	r5,r3,8061e0 <__alt_mem_onchip_memory2+0xff7e61e0>
  8061f4:	f800283a 	ret
  8061f8:	00c003c4 	movi	r3,15
  8061fc:	1980412e 	bgeu	r3,r6,806304 <memmove+0x140>
  806200:	2886b03a 	or	r3,r5,r2
  806204:	18c000cc 	andi	r3,r3,3
  806208:	1800401e 	bne	r3,zero,80630c <memmove+0x148>
  80620c:	33fffc04 	addi	r15,r6,-16
  806210:	781ed13a 	srli	r15,r15,4
  806214:	28c00104 	addi	r3,r5,4
  806218:	13400104 	addi	r13,r2,4
  80621c:	781c913a 	slli	r14,r15,4
  806220:	2b000204 	addi	r12,r5,8
  806224:	12c00204 	addi	r11,r2,8
  806228:	73800504 	addi	r14,r14,20
  80622c:	2a800304 	addi	r10,r5,12
  806230:	12400304 	addi	r9,r2,12
  806234:	2b9d883a 	add	r14,r5,r14
  806238:	2811883a 	mov	r8,r5
  80623c:	100f883a 	mov	r7,r2
  806240:	41000017 	ldw	r4,0(r8)
  806244:	39c00404 	addi	r7,r7,16
  806248:	18c00404 	addi	r3,r3,16
  80624c:	393ffc15 	stw	r4,-16(r7)
  806250:	193ffc17 	ldw	r4,-16(r3)
  806254:	6b400404 	addi	r13,r13,16
  806258:	5ac00404 	addi	r11,r11,16
  80625c:	693ffc15 	stw	r4,-16(r13)
  806260:	61000017 	ldw	r4,0(r12)
  806264:	4a400404 	addi	r9,r9,16
  806268:	42000404 	addi	r8,r8,16
  80626c:	593ffc15 	stw	r4,-16(r11)
  806270:	51000017 	ldw	r4,0(r10)
  806274:	63000404 	addi	r12,r12,16
  806278:	52800404 	addi	r10,r10,16
  80627c:	493ffc15 	stw	r4,-16(r9)
  806280:	1bbfef1e 	bne	r3,r14,806240 <__alt_mem_onchip_memory2+0xff7e6240>
  806284:	79000044 	addi	r4,r15,1
  806288:	2008913a 	slli	r4,r4,4
  80628c:	328003cc 	andi	r10,r6,15
  806290:	02c000c4 	movi	r11,3
  806294:	1107883a 	add	r3,r2,r4
  806298:	290b883a 	add	r5,r5,r4
  80629c:	5a801e2e 	bgeu	r11,r10,806318 <memmove+0x154>
  8062a0:	1813883a 	mov	r9,r3
  8062a4:	2811883a 	mov	r8,r5
  8062a8:	500f883a 	mov	r7,r10
  8062ac:	41000017 	ldw	r4,0(r8)
  8062b0:	4a400104 	addi	r9,r9,4
  8062b4:	39ffff04 	addi	r7,r7,-4
  8062b8:	493fff15 	stw	r4,-4(r9)
  8062bc:	42000104 	addi	r8,r8,4
  8062c0:	59fffa36 	bltu	r11,r7,8062ac <__alt_mem_onchip_memory2+0xff7e62ac>
  8062c4:	513fff04 	addi	r4,r10,-4
  8062c8:	2008d0ba 	srli	r4,r4,2
  8062cc:	318000cc 	andi	r6,r6,3
  8062d0:	21000044 	addi	r4,r4,1
  8062d4:	2109883a 	add	r4,r4,r4
  8062d8:	2109883a 	add	r4,r4,r4
  8062dc:	1907883a 	add	r3,r3,r4
  8062e0:	290b883a 	add	r5,r5,r4
  8062e4:	30000b26 	beq	r6,zero,806314 <memmove+0x150>
  8062e8:	198d883a 	add	r6,r3,r6
  8062ec:	29c00003 	ldbu	r7,0(r5)
  8062f0:	18c00044 	addi	r3,r3,1
  8062f4:	29400044 	addi	r5,r5,1
  8062f8:	19ffffc5 	stb	r7,-1(r3)
  8062fc:	19bffb1e 	bne	r3,r6,8062ec <__alt_mem_onchip_memory2+0xff7e62ec>
  806300:	f800283a 	ret
  806304:	1007883a 	mov	r3,r2
  806308:	003ff606 	br	8062e4 <__alt_mem_onchip_memory2+0xff7e62e4>
  80630c:	1007883a 	mov	r3,r2
  806310:	003ff506 	br	8062e8 <__alt_mem_onchip_memory2+0xff7e62e8>
  806314:	f800283a 	ret
  806318:	500d883a 	mov	r6,r10
  80631c:	003ff106 	br	8062e4 <__alt_mem_onchip_memory2+0xff7e62e4>

00806320 <memset>:
  806320:	20c000cc 	andi	r3,r4,3
  806324:	2005883a 	mov	r2,r4
  806328:	18004426 	beq	r3,zero,80643c <memset+0x11c>
  80632c:	31ffffc4 	addi	r7,r6,-1
  806330:	30004026 	beq	r6,zero,806434 <memset+0x114>
  806334:	2813883a 	mov	r9,r5
  806338:	200d883a 	mov	r6,r4
  80633c:	2007883a 	mov	r3,r4
  806340:	00000406 	br	806354 <memset+0x34>
  806344:	3a3fffc4 	addi	r8,r7,-1
  806348:	31800044 	addi	r6,r6,1
  80634c:	38003926 	beq	r7,zero,806434 <memset+0x114>
  806350:	400f883a 	mov	r7,r8
  806354:	18c00044 	addi	r3,r3,1
  806358:	32400005 	stb	r9,0(r6)
  80635c:	1a0000cc 	andi	r8,r3,3
  806360:	403ff81e 	bne	r8,zero,806344 <__alt_mem_onchip_memory2+0xff7e6344>
  806364:	010000c4 	movi	r4,3
  806368:	21c02d2e 	bgeu	r4,r7,806420 <memset+0x100>
  80636c:	29003fcc 	andi	r4,r5,255
  806370:	200c923a 	slli	r6,r4,8
  806374:	3108b03a 	or	r4,r6,r4
  806378:	200c943a 	slli	r6,r4,16
  80637c:	218cb03a 	or	r6,r4,r6
  806380:	010003c4 	movi	r4,15
  806384:	21c0182e 	bgeu	r4,r7,8063e8 <memset+0xc8>
  806388:	3b3ffc04 	addi	r12,r7,-16
  80638c:	6018d13a 	srli	r12,r12,4
  806390:	1a000104 	addi	r8,r3,4
  806394:	1ac00204 	addi	r11,r3,8
  806398:	6008913a 	slli	r4,r12,4
  80639c:	1a800304 	addi	r10,r3,12
  8063a0:	1813883a 	mov	r9,r3
  8063a4:	21000504 	addi	r4,r4,20
  8063a8:	1909883a 	add	r4,r3,r4
  8063ac:	49800015 	stw	r6,0(r9)
  8063b0:	41800015 	stw	r6,0(r8)
  8063b4:	59800015 	stw	r6,0(r11)
  8063b8:	51800015 	stw	r6,0(r10)
  8063bc:	42000404 	addi	r8,r8,16
  8063c0:	4a400404 	addi	r9,r9,16
  8063c4:	5ac00404 	addi	r11,r11,16
  8063c8:	52800404 	addi	r10,r10,16
  8063cc:	413ff71e 	bne	r8,r4,8063ac <__alt_mem_onchip_memory2+0xff7e63ac>
  8063d0:	63000044 	addi	r12,r12,1
  8063d4:	6018913a 	slli	r12,r12,4
  8063d8:	39c003cc 	andi	r7,r7,15
  8063dc:	010000c4 	movi	r4,3
  8063e0:	1b07883a 	add	r3,r3,r12
  8063e4:	21c00e2e 	bgeu	r4,r7,806420 <memset+0x100>
  8063e8:	1813883a 	mov	r9,r3
  8063ec:	3811883a 	mov	r8,r7
  8063f0:	010000c4 	movi	r4,3
  8063f4:	49800015 	stw	r6,0(r9)
  8063f8:	423fff04 	addi	r8,r8,-4
  8063fc:	4a400104 	addi	r9,r9,4
  806400:	223ffc36 	bltu	r4,r8,8063f4 <__alt_mem_onchip_memory2+0xff7e63f4>
  806404:	393fff04 	addi	r4,r7,-4
  806408:	2008d0ba 	srli	r4,r4,2
  80640c:	39c000cc 	andi	r7,r7,3
  806410:	21000044 	addi	r4,r4,1
  806414:	2109883a 	add	r4,r4,r4
  806418:	2109883a 	add	r4,r4,r4
  80641c:	1907883a 	add	r3,r3,r4
  806420:	38000526 	beq	r7,zero,806438 <memset+0x118>
  806424:	19cf883a 	add	r7,r3,r7
  806428:	19400005 	stb	r5,0(r3)
  80642c:	18c00044 	addi	r3,r3,1
  806430:	38fffd1e 	bne	r7,r3,806428 <__alt_mem_onchip_memory2+0xff7e6428>
  806434:	f800283a 	ret
  806438:	f800283a 	ret
  80643c:	2007883a 	mov	r3,r4
  806440:	300f883a 	mov	r7,r6
  806444:	003fc706 	br	806364 <__alt_mem_onchip_memory2+0xff7e6364>

00806448 <_Balloc>:
  806448:	20801317 	ldw	r2,76(r4)
  80644c:	defffc04 	addi	sp,sp,-16
  806450:	dc400115 	stw	r17,4(sp)
  806454:	dc000015 	stw	r16,0(sp)
  806458:	dfc00315 	stw	ra,12(sp)
  80645c:	dc800215 	stw	r18,8(sp)
  806460:	2023883a 	mov	r17,r4
  806464:	2821883a 	mov	r16,r5
  806468:	10000f26 	beq	r2,zero,8064a8 <_Balloc+0x60>
  80646c:	8407883a 	add	r3,r16,r16
  806470:	18c7883a 	add	r3,r3,r3
  806474:	10c7883a 	add	r3,r2,r3
  806478:	18800017 	ldw	r2,0(r3)
  80647c:	10001126 	beq	r2,zero,8064c4 <_Balloc+0x7c>
  806480:	11000017 	ldw	r4,0(r2)
  806484:	19000015 	stw	r4,0(r3)
  806488:	10000415 	stw	zero,16(r2)
  80648c:	10000315 	stw	zero,12(r2)
  806490:	dfc00317 	ldw	ra,12(sp)
  806494:	dc800217 	ldw	r18,8(sp)
  806498:	dc400117 	ldw	r17,4(sp)
  80649c:	dc000017 	ldw	r16,0(sp)
  8064a0:	dec00404 	addi	sp,sp,16
  8064a4:	f800283a 	ret
  8064a8:	01800844 	movi	r6,33
  8064ac:	01400104 	movi	r5,4
  8064b0:	08096e00 	call	8096e0 <_calloc_r>
  8064b4:	88801315 	stw	r2,76(r17)
  8064b8:	103fec1e 	bne	r2,zero,80646c <__alt_mem_onchip_memory2+0xff7e646c>
  8064bc:	0005883a 	mov	r2,zero
  8064c0:	003ff306 	br	806490 <__alt_mem_onchip_memory2+0xff7e6490>
  8064c4:	01400044 	movi	r5,1
  8064c8:	2c24983a 	sll	r18,r5,r16
  8064cc:	8809883a 	mov	r4,r17
  8064d0:	91800144 	addi	r6,r18,5
  8064d4:	318d883a 	add	r6,r6,r6
  8064d8:	318d883a 	add	r6,r6,r6
  8064dc:	08096e00 	call	8096e0 <_calloc_r>
  8064e0:	103ff626 	beq	r2,zero,8064bc <__alt_mem_onchip_memory2+0xff7e64bc>
  8064e4:	14000115 	stw	r16,4(r2)
  8064e8:	14800215 	stw	r18,8(r2)
  8064ec:	003fe606 	br	806488 <__alt_mem_onchip_memory2+0xff7e6488>

008064f0 <_Bfree>:
  8064f0:	28000826 	beq	r5,zero,806514 <_Bfree+0x24>
  8064f4:	28c00117 	ldw	r3,4(r5)
  8064f8:	20801317 	ldw	r2,76(r4)
  8064fc:	18c7883a 	add	r3,r3,r3
  806500:	18c7883a 	add	r3,r3,r3
  806504:	10c5883a 	add	r2,r2,r3
  806508:	10c00017 	ldw	r3,0(r2)
  80650c:	28c00015 	stw	r3,0(r5)
  806510:	11400015 	stw	r5,0(r2)
  806514:	f800283a 	ret

00806518 <__multadd>:
  806518:	defff704 	addi	sp,sp,-36
  80651c:	dc800215 	stw	r18,8(sp)
  806520:	2c800417 	ldw	r18,16(r5)
  806524:	dd800615 	stw	r22,24(sp)
  806528:	dd400515 	stw	r21,20(sp)
  80652c:	dd000415 	stw	r20,16(sp)
  806530:	dcc00315 	stw	r19,12(sp)
  806534:	dc400115 	stw	r17,4(sp)
  806538:	dc000015 	stw	r16,0(sp)
  80653c:	dfc00815 	stw	ra,32(sp)
  806540:	ddc00715 	stw	r23,28(sp)
  806544:	2827883a 	mov	r19,r5
  806548:	2029883a 	mov	r20,r4
  80654c:	3023883a 	mov	r17,r6
  806550:	3821883a 	mov	r16,r7
  806554:	2d400504 	addi	r21,r5,20
  806558:	002d883a 	mov	r22,zero
  80655c:	adc00017 	ldw	r23,0(r21)
  806560:	880b883a 	mov	r5,r17
  806564:	ad400104 	addi	r21,r21,4
  806568:	b93fffcc 	andi	r4,r23,65535
  80656c:	080acec0 	call	80acec <__mulsi3>
  806570:	b808d43a 	srli	r4,r23,16
  806574:	880b883a 	mov	r5,r17
  806578:	1421883a 	add	r16,r2,r16
  80657c:	080acec0 	call	80acec <__mulsi3>
  806580:	800ed43a 	srli	r7,r16,16
  806584:	80ffffcc 	andi	r3,r16,65535
  806588:	b5800044 	addi	r22,r22,1
  80658c:	11c5883a 	add	r2,r2,r7
  806590:	100e943a 	slli	r7,r2,16
  806594:	1020d43a 	srli	r16,r2,16
  806598:	38c7883a 	add	r3,r7,r3
  80659c:	a8ffff15 	stw	r3,-4(r21)
  8065a0:	b4bfee16 	blt	r22,r18,80655c <__alt_mem_onchip_memory2+0xff7e655c>
  8065a4:	80000926 	beq	r16,zero,8065cc <__multadd+0xb4>
  8065a8:	98800217 	ldw	r2,8(r19)
  8065ac:	9080130e 	bge	r18,r2,8065fc <__multadd+0xe4>
  8065b0:	90800144 	addi	r2,r18,5
  8065b4:	1085883a 	add	r2,r2,r2
  8065b8:	1085883a 	add	r2,r2,r2
  8065bc:	9885883a 	add	r2,r19,r2
  8065c0:	14000015 	stw	r16,0(r2)
  8065c4:	94800044 	addi	r18,r18,1
  8065c8:	9c800415 	stw	r18,16(r19)
  8065cc:	9805883a 	mov	r2,r19
  8065d0:	dfc00817 	ldw	ra,32(sp)
  8065d4:	ddc00717 	ldw	r23,28(sp)
  8065d8:	dd800617 	ldw	r22,24(sp)
  8065dc:	dd400517 	ldw	r21,20(sp)
  8065e0:	dd000417 	ldw	r20,16(sp)
  8065e4:	dcc00317 	ldw	r19,12(sp)
  8065e8:	dc800217 	ldw	r18,8(sp)
  8065ec:	dc400117 	ldw	r17,4(sp)
  8065f0:	dc000017 	ldw	r16,0(sp)
  8065f4:	dec00904 	addi	sp,sp,36
  8065f8:	f800283a 	ret
  8065fc:	99400117 	ldw	r5,4(r19)
  806600:	a009883a 	mov	r4,r20
  806604:	29400044 	addi	r5,r5,1
  806608:	08064480 	call	806448 <_Balloc>
  80660c:	99800417 	ldw	r6,16(r19)
  806610:	99400304 	addi	r5,r19,12
  806614:	11000304 	addi	r4,r2,12
  806618:	31800084 	addi	r6,r6,2
  80661c:	318d883a 	add	r6,r6,r6
  806620:	318d883a 	add	r6,r6,r6
  806624:	1023883a 	mov	r17,r2
  806628:	080607c0 	call	80607c <memcpy>
  80662c:	98000a26 	beq	r19,zero,806658 <__multadd+0x140>
  806630:	98c00117 	ldw	r3,4(r19)
  806634:	a0801317 	ldw	r2,76(r20)
  806638:	18c7883a 	add	r3,r3,r3
  80663c:	18c7883a 	add	r3,r3,r3
  806640:	10c5883a 	add	r2,r2,r3
  806644:	10c00017 	ldw	r3,0(r2)
  806648:	98c00015 	stw	r3,0(r19)
  80664c:	14c00015 	stw	r19,0(r2)
  806650:	8827883a 	mov	r19,r17
  806654:	003fd606 	br	8065b0 <__alt_mem_onchip_memory2+0xff7e65b0>
  806658:	8827883a 	mov	r19,r17
  80665c:	003fd406 	br	8065b0 <__alt_mem_onchip_memory2+0xff7e65b0>

00806660 <__s2b>:
  806660:	defff904 	addi	sp,sp,-28
  806664:	dc400115 	stw	r17,4(sp)
  806668:	dc000015 	stw	r16,0(sp)
  80666c:	2023883a 	mov	r17,r4
  806670:	2821883a 	mov	r16,r5
  806674:	39000204 	addi	r4,r7,8
  806678:	01400244 	movi	r5,9
  80667c:	dcc00315 	stw	r19,12(sp)
  806680:	dc800215 	stw	r18,8(sp)
  806684:	dfc00615 	stw	ra,24(sp)
  806688:	dd400515 	stw	r21,20(sp)
  80668c:	dd000415 	stw	r20,16(sp)
  806690:	3825883a 	mov	r18,r7
  806694:	3027883a 	mov	r19,r6
  806698:	080ab380 	call	80ab38 <__divsi3>
  80669c:	00c00044 	movi	r3,1
  8066a0:	000b883a 	mov	r5,zero
  8066a4:	1880030e 	bge	r3,r2,8066b4 <__s2b+0x54>
  8066a8:	18c7883a 	add	r3,r3,r3
  8066ac:	29400044 	addi	r5,r5,1
  8066b0:	18bffd16 	blt	r3,r2,8066a8 <__alt_mem_onchip_memory2+0xff7e66a8>
  8066b4:	8809883a 	mov	r4,r17
  8066b8:	08064480 	call	806448 <_Balloc>
  8066bc:	d8c00717 	ldw	r3,28(sp)
  8066c0:	10c00515 	stw	r3,20(r2)
  8066c4:	00c00044 	movi	r3,1
  8066c8:	10c00415 	stw	r3,16(r2)
  8066cc:	00c00244 	movi	r3,9
  8066d0:	1cc0210e 	bge	r3,r19,806758 <__s2b+0xf8>
  8066d4:	80eb883a 	add	r21,r16,r3
  8066d8:	a829883a 	mov	r20,r21
  8066dc:	84e1883a 	add	r16,r16,r19
  8066e0:	a1c00007 	ldb	r7,0(r20)
  8066e4:	01800284 	movi	r6,10
  8066e8:	a5000044 	addi	r20,r20,1
  8066ec:	100b883a 	mov	r5,r2
  8066f0:	39fff404 	addi	r7,r7,-48
  8066f4:	8809883a 	mov	r4,r17
  8066f8:	08065180 	call	806518 <__multadd>
  8066fc:	a43ff81e 	bne	r20,r16,8066e0 <__alt_mem_onchip_memory2+0xff7e66e0>
  806700:	ace1883a 	add	r16,r21,r19
  806704:	843ffe04 	addi	r16,r16,-8
  806708:	9c800a0e 	bge	r19,r18,806734 <__s2b+0xd4>
  80670c:	94e5c83a 	sub	r18,r18,r19
  806710:	84a5883a 	add	r18,r16,r18
  806714:	81c00007 	ldb	r7,0(r16)
  806718:	01800284 	movi	r6,10
  80671c:	84000044 	addi	r16,r16,1
  806720:	100b883a 	mov	r5,r2
  806724:	39fff404 	addi	r7,r7,-48
  806728:	8809883a 	mov	r4,r17
  80672c:	08065180 	call	806518 <__multadd>
  806730:	84bff81e 	bne	r16,r18,806714 <__alt_mem_onchip_memory2+0xff7e6714>
  806734:	dfc00617 	ldw	ra,24(sp)
  806738:	dd400517 	ldw	r21,20(sp)
  80673c:	dd000417 	ldw	r20,16(sp)
  806740:	dcc00317 	ldw	r19,12(sp)
  806744:	dc800217 	ldw	r18,8(sp)
  806748:	dc400117 	ldw	r17,4(sp)
  80674c:	dc000017 	ldw	r16,0(sp)
  806750:	dec00704 	addi	sp,sp,28
  806754:	f800283a 	ret
  806758:	84000284 	addi	r16,r16,10
  80675c:	1827883a 	mov	r19,r3
  806760:	003fe906 	br	806708 <__alt_mem_onchip_memory2+0xff7e6708>

00806764 <__hi0bits>:
  806764:	20bfffec 	andhi	r2,r4,65535
  806768:	1000141e 	bne	r2,zero,8067bc <__hi0bits+0x58>
  80676c:	2008943a 	slli	r4,r4,16
  806770:	00800404 	movi	r2,16
  806774:	20ffc02c 	andhi	r3,r4,65280
  806778:	1800021e 	bne	r3,zero,806784 <__hi0bits+0x20>
  80677c:	2008923a 	slli	r4,r4,8
  806780:	10800204 	addi	r2,r2,8
  806784:	20fc002c 	andhi	r3,r4,61440
  806788:	1800021e 	bne	r3,zero,806794 <__hi0bits+0x30>
  80678c:	2008913a 	slli	r4,r4,4
  806790:	10800104 	addi	r2,r2,4
  806794:	20f0002c 	andhi	r3,r4,49152
  806798:	1800031e 	bne	r3,zero,8067a8 <__hi0bits+0x44>
  80679c:	2109883a 	add	r4,r4,r4
  8067a0:	10800084 	addi	r2,r2,2
  8067a4:	2109883a 	add	r4,r4,r4
  8067a8:	20000316 	blt	r4,zero,8067b8 <__hi0bits+0x54>
  8067ac:	2110002c 	andhi	r4,r4,16384
  8067b0:	2000041e 	bne	r4,zero,8067c4 <__hi0bits+0x60>
  8067b4:	00800804 	movi	r2,32
  8067b8:	f800283a 	ret
  8067bc:	0005883a 	mov	r2,zero
  8067c0:	003fec06 	br	806774 <__alt_mem_onchip_memory2+0xff7e6774>
  8067c4:	10800044 	addi	r2,r2,1
  8067c8:	f800283a 	ret

008067cc <__lo0bits>:
  8067cc:	20c00017 	ldw	r3,0(r4)
  8067d0:	188001cc 	andi	r2,r3,7
  8067d4:	10000826 	beq	r2,zero,8067f8 <__lo0bits+0x2c>
  8067d8:	1880004c 	andi	r2,r3,1
  8067dc:	1000211e 	bne	r2,zero,806864 <__lo0bits+0x98>
  8067e0:	1880008c 	andi	r2,r3,2
  8067e4:	1000211e 	bne	r2,zero,80686c <__lo0bits+0xa0>
  8067e8:	1806d0ba 	srli	r3,r3,2
  8067ec:	00800084 	movi	r2,2
  8067f0:	20c00015 	stw	r3,0(r4)
  8067f4:	f800283a 	ret
  8067f8:	18bfffcc 	andi	r2,r3,65535
  8067fc:	10001326 	beq	r2,zero,80684c <__lo0bits+0x80>
  806800:	0005883a 	mov	r2,zero
  806804:	19403fcc 	andi	r5,r3,255
  806808:	2800021e 	bne	r5,zero,806814 <__lo0bits+0x48>
  80680c:	1806d23a 	srli	r3,r3,8
  806810:	10800204 	addi	r2,r2,8
  806814:	194003cc 	andi	r5,r3,15
  806818:	2800021e 	bne	r5,zero,806824 <__lo0bits+0x58>
  80681c:	1806d13a 	srli	r3,r3,4
  806820:	10800104 	addi	r2,r2,4
  806824:	194000cc 	andi	r5,r3,3
  806828:	2800021e 	bne	r5,zero,806834 <__lo0bits+0x68>
  80682c:	1806d0ba 	srli	r3,r3,2
  806830:	10800084 	addi	r2,r2,2
  806834:	1940004c 	andi	r5,r3,1
  806838:	2800081e 	bne	r5,zero,80685c <__lo0bits+0x90>
  80683c:	1806d07a 	srli	r3,r3,1
  806840:	1800051e 	bne	r3,zero,806858 <__lo0bits+0x8c>
  806844:	00800804 	movi	r2,32
  806848:	f800283a 	ret
  80684c:	1806d43a 	srli	r3,r3,16
  806850:	00800404 	movi	r2,16
  806854:	003feb06 	br	806804 <__alt_mem_onchip_memory2+0xff7e6804>
  806858:	10800044 	addi	r2,r2,1
  80685c:	20c00015 	stw	r3,0(r4)
  806860:	f800283a 	ret
  806864:	0005883a 	mov	r2,zero
  806868:	f800283a 	ret
  80686c:	1806d07a 	srli	r3,r3,1
  806870:	00800044 	movi	r2,1
  806874:	20c00015 	stw	r3,0(r4)
  806878:	f800283a 	ret

0080687c <__i2b>:
  80687c:	defffd04 	addi	sp,sp,-12
  806880:	dc000015 	stw	r16,0(sp)
  806884:	04000044 	movi	r16,1
  806888:	dc400115 	stw	r17,4(sp)
  80688c:	2823883a 	mov	r17,r5
  806890:	800b883a 	mov	r5,r16
  806894:	dfc00215 	stw	ra,8(sp)
  806898:	08064480 	call	806448 <_Balloc>
  80689c:	14400515 	stw	r17,20(r2)
  8068a0:	14000415 	stw	r16,16(r2)
  8068a4:	dfc00217 	ldw	ra,8(sp)
  8068a8:	dc400117 	ldw	r17,4(sp)
  8068ac:	dc000017 	ldw	r16,0(sp)
  8068b0:	dec00304 	addi	sp,sp,12
  8068b4:	f800283a 	ret

008068b8 <__multiply>:
  8068b8:	deffef04 	addi	sp,sp,-68
  8068bc:	dc400815 	stw	r17,32(sp)
  8068c0:	dc000715 	stw	r16,28(sp)
  8068c4:	34400417 	ldw	r17,16(r6)
  8068c8:	2c000417 	ldw	r16,16(r5)
  8068cc:	dd800d15 	stw	r22,52(sp)
  8068d0:	dc800915 	stw	r18,36(sp)
  8068d4:	dfc01015 	stw	ra,64(sp)
  8068d8:	df000f15 	stw	fp,60(sp)
  8068dc:	ddc00e15 	stw	r23,56(sp)
  8068e0:	dd400c15 	stw	r21,48(sp)
  8068e4:	dd000b15 	stw	r20,44(sp)
  8068e8:	dcc00a15 	stw	r19,40(sp)
  8068ec:	2825883a 	mov	r18,r5
  8068f0:	302d883a 	mov	r22,r6
  8068f4:	8440050e 	bge	r16,r17,80690c <__multiply+0x54>
  8068f8:	8007883a 	mov	r3,r16
  8068fc:	3025883a 	mov	r18,r6
  806900:	8821883a 	mov	r16,r17
  806904:	282d883a 	mov	r22,r5
  806908:	1823883a 	mov	r17,r3
  80690c:	90800217 	ldw	r2,8(r18)
  806910:	8447883a 	add	r3,r16,r17
  806914:	d8c00215 	stw	r3,8(sp)
  806918:	91400117 	ldw	r5,4(r18)
  80691c:	10c0010e 	bge	r2,r3,806924 <__multiply+0x6c>
  806920:	29400044 	addi	r5,r5,1
  806924:	08064480 	call	806448 <_Balloc>
  806928:	d8c00217 	ldw	r3,8(sp)
  80692c:	d8800615 	stw	r2,24(sp)
  806930:	18eb883a 	add	r21,r3,r3
  806934:	ad6b883a 	add	r21,r21,r21
  806938:	10c00504 	addi	r3,r2,20
  80693c:	1d6b883a 	add	r21,r3,r21
  806940:	d8c00115 	stw	r3,4(sp)
  806944:	dd400315 	stw	r21,12(sp)
  806948:	1805883a 	mov	r2,r3
  80694c:	1d40042e 	bgeu	r3,r21,806960 <__multiply+0xa8>
  806950:	d8c00317 	ldw	r3,12(sp)
  806954:	10000015 	stw	zero,0(r2)
  806958:	10800104 	addi	r2,r2,4
  80695c:	10fffc36 	bltu	r2,r3,806950 <__alt_mem_onchip_memory2+0xff7e6950>
  806960:	8c63883a 	add	r17,r17,r17
  806964:	b5800504 	addi	r22,r22,20
  806968:	8c63883a 	add	r17,r17,r17
  80696c:	94800504 	addi	r18,r18,20
  806970:	8421883a 	add	r16,r16,r16
  806974:	b463883a 	add	r17,r22,r17
  806978:	8421883a 	add	r16,r16,r16
  80697c:	dd800015 	stw	r22,0(sp)
  806980:	dc800415 	stw	r18,16(sp)
  806984:	dc400515 	stw	r17,20(sp)
  806988:	9429883a 	add	r20,r18,r16
  80698c:	b4404f2e 	bgeu	r22,r17,806acc <__multiply+0x214>
  806990:	d8c00017 	ldw	r3,0(sp)
  806994:	1c800017 	ldw	r18,0(r3)
  806998:	947fffcc 	andi	r17,r18,65535
  80699c:	88001e26 	beq	r17,zero,806a18 <__multiply+0x160>
  8069a0:	dd800117 	ldw	r22,4(sp)
  8069a4:	dd400417 	ldw	r21,16(sp)
  8069a8:	0027883a 	mov	r19,zero
  8069ac:	ac800017 	ldw	r18,0(r21)
  8069b0:	b4000017 	ldw	r16,0(r22)
  8069b4:	880b883a 	mov	r5,r17
  8069b8:	913fffcc 	andi	r4,r18,65535
  8069bc:	080acec0 	call	80acec <__mulsi3>
  8069c0:	9008d43a 	srli	r4,r18,16
  8069c4:	84bfffcc 	andi	r18,r16,65535
  8069c8:	1485883a 	add	r2,r2,r18
  8069cc:	14e5883a 	add	r18,r2,r19
  8069d0:	8020d43a 	srli	r16,r16,16
  8069d4:	9026d43a 	srli	r19,r18,16
  8069d8:	880b883a 	mov	r5,r17
  8069dc:	080acec0 	call	80acec <__mulsi3>
  8069e0:	1405883a 	add	r2,r2,r16
  8069e4:	14e1883a 	add	r16,r2,r19
  8069e8:	90ffffcc 	andi	r3,r18,65535
  8069ec:	8024943a 	slli	r18,r16,16
  8069f0:	ad400104 	addi	r21,r21,4
  8069f4:	b005883a 	mov	r2,r22
  8069f8:	90c6b03a 	or	r3,r18,r3
  8069fc:	b0c00015 	stw	r3,0(r22)
  806a00:	8026d43a 	srli	r19,r16,16
  806a04:	b5800104 	addi	r22,r22,4
  806a08:	ad3fe836 	bltu	r21,r20,8069ac <__alt_mem_onchip_memory2+0xff7e69ac>
  806a0c:	d8c00017 	ldw	r3,0(sp)
  806a10:	14c00115 	stw	r19,4(r2)
  806a14:	1c800017 	ldw	r18,0(r3)
  806a18:	9024d43a 	srli	r18,r18,16
  806a1c:	90002226 	beq	r18,zero,806aa8 <__multiply+0x1f0>
  806a20:	d8c00117 	ldw	r3,4(sp)
  806a24:	dd800417 	ldw	r22,16(sp)
  806a28:	002f883a 	mov	r23,zero
  806a2c:	1f000017 	ldw	fp,0(r3)
  806a30:	1823883a 	mov	r17,r3
  806a34:	182b883a 	mov	r21,r3
  806a38:	e021883a 	mov	r16,fp
  806a3c:	00000106 	br	806a44 <__multiply+0x18c>
  806a40:	982b883a 	mov	r21,r19
  806a44:	b100000b 	ldhu	r4,0(r22)
  806a48:	8020d43a 	srli	r16,r16,16
  806a4c:	900b883a 	mov	r5,r18
  806a50:	080acec0 	call	80acec <__mulsi3>
  806a54:	1405883a 	add	r2,r2,r16
  806a58:	15ef883a 	add	r23,r2,r23
  806a5c:	b804943a 	slli	r2,r23,16
  806a60:	e0ffffcc 	andi	r3,fp,65535
  806a64:	8c400104 	addi	r17,r17,4
  806a68:	10c6b03a 	or	r3,r2,r3
  806a6c:	88ffff15 	stw	r3,-4(r17)
  806a70:	b5800104 	addi	r22,r22,4
  806a74:	b13fff17 	ldw	r4,-4(r22)
  806a78:	acc00104 	addi	r19,r21,4
  806a7c:	900b883a 	mov	r5,r18
  806a80:	2008d43a 	srli	r4,r4,16
  806a84:	9c000017 	ldw	r16,0(r19)
  806a88:	080acec0 	call	80acec <__mulsi3>
  806a8c:	b806d43a 	srli	r3,r23,16
  806a90:	813fffcc 	andi	r4,r16,65535
  806a94:	1105883a 	add	r2,r2,r4
  806a98:	10f9883a 	add	fp,r2,r3
  806a9c:	e02ed43a 	srli	r23,fp,16
  806aa0:	b53fe736 	bltu	r22,r20,806a40 <__alt_mem_onchip_memory2+0xff7e6a40>
  806aa4:	af000115 	stw	fp,4(r21)
  806aa8:	d8c00017 	ldw	r3,0(sp)
  806aac:	d9000517 	ldw	r4,20(sp)
  806ab0:	18c00104 	addi	r3,r3,4
  806ab4:	d8c00015 	stw	r3,0(sp)
  806ab8:	d8c00117 	ldw	r3,4(sp)
  806abc:	18c00104 	addi	r3,r3,4
  806ac0:	d8c00115 	stw	r3,4(sp)
  806ac4:	d8c00017 	ldw	r3,0(sp)
  806ac8:	193fb136 	bltu	r3,r4,806990 <__alt_mem_onchip_memory2+0xff7e6990>
  806acc:	d8c00217 	ldw	r3,8(sp)
  806ad0:	00c00c0e 	bge	zero,r3,806b04 <__multiply+0x24c>
  806ad4:	d8c00317 	ldw	r3,12(sp)
  806ad8:	18bfff17 	ldw	r2,-4(r3)
  806adc:	1d7fff04 	addi	r21,r3,-4
  806ae0:	10000326 	beq	r2,zero,806af0 <__multiply+0x238>
  806ae4:	00000706 	br	806b04 <__multiply+0x24c>
  806ae8:	a8800017 	ldw	r2,0(r21)
  806aec:	1000051e 	bne	r2,zero,806b04 <__multiply+0x24c>
  806af0:	d8c00217 	ldw	r3,8(sp)
  806af4:	ad7fff04 	addi	r21,r21,-4
  806af8:	18ffffc4 	addi	r3,r3,-1
  806afc:	d8c00215 	stw	r3,8(sp)
  806b00:	183ff91e 	bne	r3,zero,806ae8 <__alt_mem_onchip_memory2+0xff7e6ae8>
  806b04:	d8c00617 	ldw	r3,24(sp)
  806b08:	d9000217 	ldw	r4,8(sp)
  806b0c:	1805883a 	mov	r2,r3
  806b10:	19000415 	stw	r4,16(r3)
  806b14:	dfc01017 	ldw	ra,64(sp)
  806b18:	df000f17 	ldw	fp,60(sp)
  806b1c:	ddc00e17 	ldw	r23,56(sp)
  806b20:	dd800d17 	ldw	r22,52(sp)
  806b24:	dd400c17 	ldw	r21,48(sp)
  806b28:	dd000b17 	ldw	r20,44(sp)
  806b2c:	dcc00a17 	ldw	r19,40(sp)
  806b30:	dc800917 	ldw	r18,36(sp)
  806b34:	dc400817 	ldw	r17,32(sp)
  806b38:	dc000717 	ldw	r16,28(sp)
  806b3c:	dec01104 	addi	sp,sp,68
  806b40:	f800283a 	ret

00806b44 <__pow5mult>:
  806b44:	defffa04 	addi	sp,sp,-24
  806b48:	dcc00315 	stw	r19,12(sp)
  806b4c:	dc000015 	stw	r16,0(sp)
  806b50:	dfc00515 	stw	ra,20(sp)
  806b54:	dd000415 	stw	r20,16(sp)
  806b58:	dc800215 	stw	r18,8(sp)
  806b5c:	dc400115 	stw	r17,4(sp)
  806b60:	308000cc 	andi	r2,r6,3
  806b64:	3021883a 	mov	r16,r6
  806b68:	2027883a 	mov	r19,r4
  806b6c:	10002f1e 	bne	r2,zero,806c2c <__pow5mult+0xe8>
  806b70:	2825883a 	mov	r18,r5
  806b74:	8021d0ba 	srai	r16,r16,2
  806b78:	80001a26 	beq	r16,zero,806be4 <__pow5mult+0xa0>
  806b7c:	9c401217 	ldw	r17,72(r19)
  806b80:	8800061e 	bne	r17,zero,806b9c <__pow5mult+0x58>
  806b84:	00003406 	br	806c58 <__pow5mult+0x114>
  806b88:	8021d07a 	srai	r16,r16,1
  806b8c:	80001526 	beq	r16,zero,806be4 <__pow5mult+0xa0>
  806b90:	88800017 	ldw	r2,0(r17)
  806b94:	10001c26 	beq	r2,zero,806c08 <__pow5mult+0xc4>
  806b98:	1023883a 	mov	r17,r2
  806b9c:	8080004c 	andi	r2,r16,1
  806ba0:	103ff926 	beq	r2,zero,806b88 <__alt_mem_onchip_memory2+0xff7e6b88>
  806ba4:	880d883a 	mov	r6,r17
  806ba8:	900b883a 	mov	r5,r18
  806bac:	9809883a 	mov	r4,r19
  806bb0:	08068b80 	call	8068b8 <__multiply>
  806bb4:	90001b26 	beq	r18,zero,806c24 <__pow5mult+0xe0>
  806bb8:	91000117 	ldw	r4,4(r18)
  806bbc:	98c01317 	ldw	r3,76(r19)
  806bc0:	8021d07a 	srai	r16,r16,1
  806bc4:	2109883a 	add	r4,r4,r4
  806bc8:	2109883a 	add	r4,r4,r4
  806bcc:	1907883a 	add	r3,r3,r4
  806bd0:	19000017 	ldw	r4,0(r3)
  806bd4:	91000015 	stw	r4,0(r18)
  806bd8:	1c800015 	stw	r18,0(r3)
  806bdc:	1025883a 	mov	r18,r2
  806be0:	803feb1e 	bne	r16,zero,806b90 <__alt_mem_onchip_memory2+0xff7e6b90>
  806be4:	9005883a 	mov	r2,r18
  806be8:	dfc00517 	ldw	ra,20(sp)
  806bec:	dd000417 	ldw	r20,16(sp)
  806bf0:	dcc00317 	ldw	r19,12(sp)
  806bf4:	dc800217 	ldw	r18,8(sp)
  806bf8:	dc400117 	ldw	r17,4(sp)
  806bfc:	dc000017 	ldw	r16,0(sp)
  806c00:	dec00604 	addi	sp,sp,24
  806c04:	f800283a 	ret
  806c08:	880d883a 	mov	r6,r17
  806c0c:	880b883a 	mov	r5,r17
  806c10:	9809883a 	mov	r4,r19
  806c14:	08068b80 	call	8068b8 <__multiply>
  806c18:	88800015 	stw	r2,0(r17)
  806c1c:	10000015 	stw	zero,0(r2)
  806c20:	003fdd06 	br	806b98 <__alt_mem_onchip_memory2+0xff7e6b98>
  806c24:	1025883a 	mov	r18,r2
  806c28:	003fd706 	br	806b88 <__alt_mem_onchip_memory2+0xff7e6b88>
  806c2c:	10bfffc4 	addi	r2,r2,-1
  806c30:	1085883a 	add	r2,r2,r2
  806c34:	00c02074 	movhi	r3,129
  806c38:	18c1e204 	addi	r3,r3,1928
  806c3c:	1085883a 	add	r2,r2,r2
  806c40:	1885883a 	add	r2,r3,r2
  806c44:	11800017 	ldw	r6,0(r2)
  806c48:	000f883a 	mov	r7,zero
  806c4c:	08065180 	call	806518 <__multadd>
  806c50:	1025883a 	mov	r18,r2
  806c54:	003fc706 	br	806b74 <__alt_mem_onchip_memory2+0xff7e6b74>
  806c58:	05000044 	movi	r20,1
  806c5c:	a00b883a 	mov	r5,r20
  806c60:	9809883a 	mov	r4,r19
  806c64:	08064480 	call	806448 <_Balloc>
  806c68:	1023883a 	mov	r17,r2
  806c6c:	00809c44 	movi	r2,625
  806c70:	88800515 	stw	r2,20(r17)
  806c74:	8d000415 	stw	r20,16(r17)
  806c78:	9c401215 	stw	r17,72(r19)
  806c7c:	88000015 	stw	zero,0(r17)
  806c80:	003fc606 	br	806b9c <__alt_mem_onchip_memory2+0xff7e6b9c>

00806c84 <__lshift>:
  806c84:	defff904 	addi	sp,sp,-28
  806c88:	dd400515 	stw	r21,20(sp)
  806c8c:	dcc00315 	stw	r19,12(sp)
  806c90:	302bd17a 	srai	r21,r6,5
  806c94:	2cc00417 	ldw	r19,16(r5)
  806c98:	28800217 	ldw	r2,8(r5)
  806c9c:	dd000415 	stw	r20,16(sp)
  806ca0:	ace7883a 	add	r19,r21,r19
  806ca4:	dc800215 	stw	r18,8(sp)
  806ca8:	dc400115 	stw	r17,4(sp)
  806cac:	dc000015 	stw	r16,0(sp)
  806cb0:	dfc00615 	stw	ra,24(sp)
  806cb4:	9c000044 	addi	r16,r19,1
  806cb8:	2823883a 	mov	r17,r5
  806cbc:	3029883a 	mov	r20,r6
  806cc0:	2025883a 	mov	r18,r4
  806cc4:	29400117 	ldw	r5,4(r5)
  806cc8:	1400030e 	bge	r2,r16,806cd8 <__lshift+0x54>
  806ccc:	1085883a 	add	r2,r2,r2
  806cd0:	29400044 	addi	r5,r5,1
  806cd4:	143ffd16 	blt	r2,r16,806ccc <__alt_mem_onchip_memory2+0xff7e6ccc>
  806cd8:	9009883a 	mov	r4,r18
  806cdc:	08064480 	call	806448 <_Balloc>
  806ce0:	10c00504 	addi	r3,r2,20
  806ce4:	0540070e 	bge	zero,r21,806d04 <__lshift+0x80>
  806ce8:	ad6b883a 	add	r21,r21,r21
  806cec:	ad6b883a 	add	r21,r21,r21
  806cf0:	1809883a 	mov	r4,r3
  806cf4:	1d47883a 	add	r3,r3,r21
  806cf8:	20000015 	stw	zero,0(r4)
  806cfc:	21000104 	addi	r4,r4,4
  806d00:	193ffd1e 	bne	r3,r4,806cf8 <__alt_mem_onchip_memory2+0xff7e6cf8>
  806d04:	8a000417 	ldw	r8,16(r17)
  806d08:	89000504 	addi	r4,r17,20
  806d0c:	a18007cc 	andi	r6,r20,31
  806d10:	4211883a 	add	r8,r8,r8
  806d14:	4211883a 	add	r8,r8,r8
  806d18:	2211883a 	add	r8,r4,r8
  806d1c:	30002326 	beq	r6,zero,806dac <__lshift+0x128>
  806d20:	02400804 	movi	r9,32
  806d24:	4993c83a 	sub	r9,r9,r6
  806d28:	000b883a 	mov	r5,zero
  806d2c:	21c00017 	ldw	r7,0(r4)
  806d30:	1815883a 	mov	r10,r3
  806d34:	18c00104 	addi	r3,r3,4
  806d38:	398e983a 	sll	r7,r7,r6
  806d3c:	21000104 	addi	r4,r4,4
  806d40:	394ab03a 	or	r5,r7,r5
  806d44:	197fff15 	stw	r5,-4(r3)
  806d48:	217fff17 	ldw	r5,-4(r4)
  806d4c:	2a4ad83a 	srl	r5,r5,r9
  806d50:	223ff636 	bltu	r4,r8,806d2c <__alt_mem_onchip_memory2+0xff7e6d2c>
  806d54:	51400115 	stw	r5,4(r10)
  806d58:	28001a1e 	bne	r5,zero,806dc4 <__lshift+0x140>
  806d5c:	843fffc4 	addi	r16,r16,-1
  806d60:	14000415 	stw	r16,16(r2)
  806d64:	88000826 	beq	r17,zero,806d88 <__lshift+0x104>
  806d68:	89000117 	ldw	r4,4(r17)
  806d6c:	90c01317 	ldw	r3,76(r18)
  806d70:	2109883a 	add	r4,r4,r4
  806d74:	2109883a 	add	r4,r4,r4
  806d78:	1907883a 	add	r3,r3,r4
  806d7c:	19000017 	ldw	r4,0(r3)
  806d80:	89000015 	stw	r4,0(r17)
  806d84:	1c400015 	stw	r17,0(r3)
  806d88:	dfc00617 	ldw	ra,24(sp)
  806d8c:	dd400517 	ldw	r21,20(sp)
  806d90:	dd000417 	ldw	r20,16(sp)
  806d94:	dcc00317 	ldw	r19,12(sp)
  806d98:	dc800217 	ldw	r18,8(sp)
  806d9c:	dc400117 	ldw	r17,4(sp)
  806da0:	dc000017 	ldw	r16,0(sp)
  806da4:	dec00704 	addi	sp,sp,28
  806da8:	f800283a 	ret
  806dac:	21400017 	ldw	r5,0(r4)
  806db0:	18c00104 	addi	r3,r3,4
  806db4:	21000104 	addi	r4,r4,4
  806db8:	197fff15 	stw	r5,-4(r3)
  806dbc:	223ffb36 	bltu	r4,r8,806dac <__alt_mem_onchip_memory2+0xff7e6dac>
  806dc0:	003fe606 	br	806d5c <__alt_mem_onchip_memory2+0xff7e6d5c>
  806dc4:	9c000084 	addi	r16,r19,2
  806dc8:	003fe406 	br	806d5c <__alt_mem_onchip_memory2+0xff7e6d5c>

00806dcc <__mcmp>:
  806dcc:	20800417 	ldw	r2,16(r4)
  806dd0:	28c00417 	ldw	r3,16(r5)
  806dd4:	10c5c83a 	sub	r2,r2,r3
  806dd8:	1000111e 	bne	r2,zero,806e20 <__mcmp+0x54>
  806ddc:	18c7883a 	add	r3,r3,r3
  806de0:	18c7883a 	add	r3,r3,r3
  806de4:	21000504 	addi	r4,r4,20
  806de8:	29400504 	addi	r5,r5,20
  806dec:	20c5883a 	add	r2,r4,r3
  806df0:	28cb883a 	add	r5,r5,r3
  806df4:	00000106 	br	806dfc <__mcmp+0x30>
  806df8:	20800a2e 	bgeu	r4,r2,806e24 <__mcmp+0x58>
  806dfc:	10bfff04 	addi	r2,r2,-4
  806e00:	297fff04 	addi	r5,r5,-4
  806e04:	11800017 	ldw	r6,0(r2)
  806e08:	28c00017 	ldw	r3,0(r5)
  806e0c:	30fffa26 	beq	r6,r3,806df8 <__alt_mem_onchip_memory2+0xff7e6df8>
  806e10:	30c00236 	bltu	r6,r3,806e1c <__mcmp+0x50>
  806e14:	00800044 	movi	r2,1
  806e18:	f800283a 	ret
  806e1c:	00bfffc4 	movi	r2,-1
  806e20:	f800283a 	ret
  806e24:	0005883a 	mov	r2,zero
  806e28:	f800283a 	ret

00806e2c <__mdiff>:
  806e2c:	28c00417 	ldw	r3,16(r5)
  806e30:	30800417 	ldw	r2,16(r6)
  806e34:	defffa04 	addi	sp,sp,-24
  806e38:	dcc00315 	stw	r19,12(sp)
  806e3c:	dc800215 	stw	r18,8(sp)
  806e40:	dfc00515 	stw	ra,20(sp)
  806e44:	dd000415 	stw	r20,16(sp)
  806e48:	dc400115 	stw	r17,4(sp)
  806e4c:	dc000015 	stw	r16,0(sp)
  806e50:	1887c83a 	sub	r3,r3,r2
  806e54:	2825883a 	mov	r18,r5
  806e58:	3027883a 	mov	r19,r6
  806e5c:	1800141e 	bne	r3,zero,806eb0 <__mdiff+0x84>
  806e60:	1085883a 	add	r2,r2,r2
  806e64:	1085883a 	add	r2,r2,r2
  806e68:	2a000504 	addi	r8,r5,20
  806e6c:	34000504 	addi	r16,r6,20
  806e70:	4087883a 	add	r3,r8,r2
  806e74:	8085883a 	add	r2,r16,r2
  806e78:	00000106 	br	806e80 <__mdiff+0x54>
  806e7c:	40c0592e 	bgeu	r8,r3,806fe4 <__mdiff+0x1b8>
  806e80:	18ffff04 	addi	r3,r3,-4
  806e84:	10bfff04 	addi	r2,r2,-4
  806e88:	19c00017 	ldw	r7,0(r3)
  806e8c:	11400017 	ldw	r5,0(r2)
  806e90:	397ffa26 	beq	r7,r5,806e7c <__alt_mem_onchip_memory2+0xff7e6e7c>
  806e94:	3940592e 	bgeu	r7,r5,806ffc <__mdiff+0x1d0>
  806e98:	9005883a 	mov	r2,r18
  806e9c:	4023883a 	mov	r17,r8
  806ea0:	9825883a 	mov	r18,r19
  806ea4:	05000044 	movi	r20,1
  806ea8:	1027883a 	mov	r19,r2
  806eac:	00000406 	br	806ec0 <__mdiff+0x94>
  806eb0:	18005616 	blt	r3,zero,80700c <__mdiff+0x1e0>
  806eb4:	34400504 	addi	r17,r6,20
  806eb8:	2c000504 	addi	r16,r5,20
  806ebc:	0029883a 	mov	r20,zero
  806ec0:	91400117 	ldw	r5,4(r18)
  806ec4:	08064480 	call	806448 <_Balloc>
  806ec8:	92400417 	ldw	r9,16(r18)
  806ecc:	9b000417 	ldw	r12,16(r19)
  806ed0:	12c00504 	addi	r11,r2,20
  806ed4:	4a51883a 	add	r8,r9,r9
  806ed8:	6319883a 	add	r12,r12,r12
  806edc:	4211883a 	add	r8,r8,r8
  806ee0:	6319883a 	add	r12,r12,r12
  806ee4:	15000315 	stw	r20,12(r2)
  806ee8:	8211883a 	add	r8,r16,r8
  806eec:	8b19883a 	add	r12,r17,r12
  806ef0:	0007883a 	mov	r3,zero
  806ef4:	81400017 	ldw	r5,0(r16)
  806ef8:	89c00017 	ldw	r7,0(r17)
  806efc:	59800104 	addi	r6,r11,4
  806f00:	293fffcc 	andi	r4,r5,65535
  806f04:	20c7883a 	add	r3,r4,r3
  806f08:	393fffcc 	andi	r4,r7,65535
  806f0c:	1909c83a 	sub	r4,r3,r4
  806f10:	280ad43a 	srli	r5,r5,16
  806f14:	380ed43a 	srli	r7,r7,16
  806f18:	2007d43a 	srai	r3,r4,16
  806f1c:	213fffcc 	andi	r4,r4,65535
  806f20:	29cbc83a 	sub	r5,r5,r7
  806f24:	28c7883a 	add	r3,r5,r3
  806f28:	180a943a 	slli	r5,r3,16
  806f2c:	8c400104 	addi	r17,r17,4
  806f30:	84000104 	addi	r16,r16,4
  806f34:	2908b03a 	or	r4,r5,r4
  806f38:	59000015 	stw	r4,0(r11)
  806f3c:	1807d43a 	srai	r3,r3,16
  806f40:	3015883a 	mov	r10,r6
  806f44:	3017883a 	mov	r11,r6
  806f48:	8b3fea36 	bltu	r17,r12,806ef4 <__alt_mem_onchip_memory2+0xff7e6ef4>
  806f4c:	8200162e 	bgeu	r16,r8,806fa8 <__mdiff+0x17c>
  806f50:	8017883a 	mov	r11,r16
  806f54:	59400017 	ldw	r5,0(r11)
  806f58:	31800104 	addi	r6,r6,4
  806f5c:	5ac00104 	addi	r11,r11,4
  806f60:	293fffcc 	andi	r4,r5,65535
  806f64:	20c7883a 	add	r3,r4,r3
  806f68:	280ed43a 	srli	r7,r5,16
  806f6c:	180bd43a 	srai	r5,r3,16
  806f70:	193fffcc 	andi	r4,r3,65535
  806f74:	3947883a 	add	r3,r7,r5
  806f78:	180a943a 	slli	r5,r3,16
  806f7c:	1807d43a 	srai	r3,r3,16
  806f80:	2908b03a 	or	r4,r5,r4
  806f84:	313fff15 	stw	r4,-4(r6)
  806f88:	5a3ff236 	bltu	r11,r8,806f54 <__alt_mem_onchip_memory2+0xff7e6f54>
  806f8c:	0406303a 	nor	r3,zero,r16
  806f90:	1a07883a 	add	r3,r3,r8
  806f94:	1806d0ba 	srli	r3,r3,2
  806f98:	18c00044 	addi	r3,r3,1
  806f9c:	18c7883a 	add	r3,r3,r3
  806fa0:	18c7883a 	add	r3,r3,r3
  806fa4:	50d5883a 	add	r10,r10,r3
  806fa8:	50ffff04 	addi	r3,r10,-4
  806fac:	2000041e 	bne	r4,zero,806fc0 <__mdiff+0x194>
  806fb0:	18ffff04 	addi	r3,r3,-4
  806fb4:	19000017 	ldw	r4,0(r3)
  806fb8:	4a7fffc4 	addi	r9,r9,-1
  806fbc:	203ffc26 	beq	r4,zero,806fb0 <__alt_mem_onchip_memory2+0xff7e6fb0>
  806fc0:	12400415 	stw	r9,16(r2)
  806fc4:	dfc00517 	ldw	ra,20(sp)
  806fc8:	dd000417 	ldw	r20,16(sp)
  806fcc:	dcc00317 	ldw	r19,12(sp)
  806fd0:	dc800217 	ldw	r18,8(sp)
  806fd4:	dc400117 	ldw	r17,4(sp)
  806fd8:	dc000017 	ldw	r16,0(sp)
  806fdc:	dec00604 	addi	sp,sp,24
  806fe0:	f800283a 	ret
  806fe4:	000b883a 	mov	r5,zero
  806fe8:	08064480 	call	806448 <_Balloc>
  806fec:	00c00044 	movi	r3,1
  806ff0:	10c00415 	stw	r3,16(r2)
  806ff4:	10000515 	stw	zero,20(r2)
  806ff8:	003ff206 	br	806fc4 <__alt_mem_onchip_memory2+0xff7e6fc4>
  806ffc:	8023883a 	mov	r17,r16
  807000:	0029883a 	mov	r20,zero
  807004:	4021883a 	mov	r16,r8
  807008:	003fad06 	br	806ec0 <__alt_mem_onchip_memory2+0xff7e6ec0>
  80700c:	9005883a 	mov	r2,r18
  807010:	94400504 	addi	r17,r18,20
  807014:	9c000504 	addi	r16,r19,20
  807018:	9825883a 	mov	r18,r19
  80701c:	05000044 	movi	r20,1
  807020:	1027883a 	mov	r19,r2
  807024:	003fa606 	br	806ec0 <__alt_mem_onchip_memory2+0xff7e6ec0>

00807028 <__ulp>:
  807028:	295ffc2c 	andhi	r5,r5,32752
  80702c:	00bf3034 	movhi	r2,64704
  807030:	2887883a 	add	r3,r5,r2
  807034:	00c0020e 	bge	zero,r3,807040 <__ulp+0x18>
  807038:	0005883a 	mov	r2,zero
  80703c:	f800283a 	ret
  807040:	00c7c83a 	sub	r3,zero,r3
  807044:	1807d53a 	srai	r3,r3,20
  807048:	008004c4 	movi	r2,19
  80704c:	10c00b0e 	bge	r2,r3,80707c <__ulp+0x54>
  807050:	18bffb04 	addi	r2,r3,-20
  807054:	01000784 	movi	r4,30
  807058:	0007883a 	mov	r3,zero
  80705c:	20800516 	blt	r4,r2,807074 <__ulp+0x4c>
  807060:	010007c4 	movi	r4,31
  807064:	2089c83a 	sub	r4,r4,r2
  807068:	00800044 	movi	r2,1
  80706c:	1104983a 	sll	r2,r2,r4
  807070:	f800283a 	ret
  807074:	00800044 	movi	r2,1
  807078:	f800283a 	ret
  80707c:	01400234 	movhi	r5,8
  807080:	28c7d83a 	sra	r3,r5,r3
  807084:	0005883a 	mov	r2,zero
  807088:	f800283a 	ret

0080708c <__b2d>:
  80708c:	defffa04 	addi	sp,sp,-24
  807090:	dc000015 	stw	r16,0(sp)
  807094:	24000417 	ldw	r16,16(r4)
  807098:	dc400115 	stw	r17,4(sp)
  80709c:	24400504 	addi	r17,r4,20
  8070a0:	8421883a 	add	r16,r16,r16
  8070a4:	8421883a 	add	r16,r16,r16
  8070a8:	8c21883a 	add	r16,r17,r16
  8070ac:	dc800215 	stw	r18,8(sp)
  8070b0:	84bfff17 	ldw	r18,-4(r16)
  8070b4:	dd000415 	stw	r20,16(sp)
  8070b8:	dcc00315 	stw	r19,12(sp)
  8070bc:	9009883a 	mov	r4,r18
  8070c0:	2829883a 	mov	r20,r5
  8070c4:	dfc00515 	stw	ra,20(sp)
  8070c8:	08067640 	call	806764 <__hi0bits>
  8070cc:	00c00804 	movi	r3,32
  8070d0:	1889c83a 	sub	r4,r3,r2
  8070d4:	a1000015 	stw	r4,0(r20)
  8070d8:	01000284 	movi	r4,10
  8070dc:	84ffff04 	addi	r19,r16,-4
  8070e0:	20801216 	blt	r4,r2,80712c <__b2d+0xa0>
  8070e4:	018002c4 	movi	r6,11
  8070e8:	308dc83a 	sub	r6,r6,r2
  8070ec:	9186d83a 	srl	r3,r18,r6
  8070f0:	18cffc34 	orhi	r3,r3,16368
  8070f4:	8cc0212e 	bgeu	r17,r19,80717c <__b2d+0xf0>
  8070f8:	813ffe17 	ldw	r4,-8(r16)
  8070fc:	218cd83a 	srl	r6,r4,r6
  807100:	10800544 	addi	r2,r2,21
  807104:	9084983a 	sll	r2,r18,r2
  807108:	1184b03a 	or	r2,r2,r6
  80710c:	dfc00517 	ldw	ra,20(sp)
  807110:	dd000417 	ldw	r20,16(sp)
  807114:	dcc00317 	ldw	r19,12(sp)
  807118:	dc800217 	ldw	r18,8(sp)
  80711c:	dc400117 	ldw	r17,4(sp)
  807120:	dc000017 	ldw	r16,0(sp)
  807124:	dec00604 	addi	sp,sp,24
  807128:	f800283a 	ret
  80712c:	8cc00f2e 	bgeu	r17,r19,80716c <__b2d+0xe0>
  807130:	117ffd44 	addi	r5,r2,-11
  807134:	80bffe17 	ldw	r2,-8(r16)
  807138:	28000e26 	beq	r5,zero,807174 <__b2d+0xe8>
  80713c:	1949c83a 	sub	r4,r3,r5
  807140:	9164983a 	sll	r18,r18,r5
  807144:	1106d83a 	srl	r3,r2,r4
  807148:	81bffe04 	addi	r6,r16,-8
  80714c:	948ffc34 	orhi	r18,r18,16368
  807150:	90c6b03a 	or	r3,r18,r3
  807154:	89800e2e 	bgeu	r17,r6,807190 <__b2d+0x104>
  807158:	81bffd17 	ldw	r6,-12(r16)
  80715c:	1144983a 	sll	r2,r2,r5
  807160:	310ad83a 	srl	r5,r6,r4
  807164:	2884b03a 	or	r2,r5,r2
  807168:	003fe806 	br	80710c <__alt_mem_onchip_memory2+0xff7e710c>
  80716c:	10bffd44 	addi	r2,r2,-11
  807170:	1000041e 	bne	r2,zero,807184 <__b2d+0xf8>
  807174:	90cffc34 	orhi	r3,r18,16368
  807178:	003fe406 	br	80710c <__alt_mem_onchip_memory2+0xff7e710c>
  80717c:	000d883a 	mov	r6,zero
  807180:	003fdf06 	br	807100 <__alt_mem_onchip_memory2+0xff7e7100>
  807184:	90a4983a 	sll	r18,r18,r2
  807188:	0005883a 	mov	r2,zero
  80718c:	003ff906 	br	807174 <__alt_mem_onchip_memory2+0xff7e7174>
  807190:	1144983a 	sll	r2,r2,r5
  807194:	003fdd06 	br	80710c <__alt_mem_onchip_memory2+0xff7e710c>

00807198 <__d2b>:
  807198:	defff804 	addi	sp,sp,-32
  80719c:	dc000215 	stw	r16,8(sp)
  8071a0:	3021883a 	mov	r16,r6
  8071a4:	dc400315 	stw	r17,12(sp)
  8071a8:	8022907a 	slli	r17,r16,1
  8071ac:	dd000615 	stw	r20,24(sp)
  8071b0:	2829883a 	mov	r20,r5
  8071b4:	01400044 	movi	r5,1
  8071b8:	dcc00515 	stw	r19,20(sp)
  8071bc:	dc800415 	stw	r18,16(sp)
  8071c0:	dfc00715 	stw	ra,28(sp)
  8071c4:	3825883a 	mov	r18,r7
  8071c8:	8822d57a 	srli	r17,r17,21
  8071cc:	08064480 	call	806448 <_Balloc>
  8071d0:	1027883a 	mov	r19,r2
  8071d4:	00800434 	movhi	r2,16
  8071d8:	10bfffc4 	addi	r2,r2,-1
  8071dc:	808c703a 	and	r6,r16,r2
  8071e0:	88000126 	beq	r17,zero,8071e8 <__d2b+0x50>
  8071e4:	31800434 	orhi	r6,r6,16
  8071e8:	d9800015 	stw	r6,0(sp)
  8071ec:	a0002426 	beq	r20,zero,807280 <__d2b+0xe8>
  8071f0:	d9000104 	addi	r4,sp,4
  8071f4:	dd000115 	stw	r20,4(sp)
  8071f8:	08067cc0 	call	8067cc <__lo0bits>
  8071fc:	d8c00017 	ldw	r3,0(sp)
  807200:	10002f1e 	bne	r2,zero,8072c0 <__d2b+0x128>
  807204:	d9000117 	ldw	r4,4(sp)
  807208:	99000515 	stw	r4,20(r19)
  80720c:	1821003a 	cmpeq	r16,r3,zero
  807210:	01000084 	movi	r4,2
  807214:	2421c83a 	sub	r16,r4,r16
  807218:	98c00615 	stw	r3,24(r19)
  80721c:	9c000415 	stw	r16,16(r19)
  807220:	88001f1e 	bne	r17,zero,8072a0 <__d2b+0x108>
  807224:	10bef384 	addi	r2,r2,-1074
  807228:	90800015 	stw	r2,0(r18)
  80722c:	00900034 	movhi	r2,16384
  807230:	10bfffc4 	addi	r2,r2,-1
  807234:	8085883a 	add	r2,r16,r2
  807238:	1085883a 	add	r2,r2,r2
  80723c:	1085883a 	add	r2,r2,r2
  807240:	9885883a 	add	r2,r19,r2
  807244:	11000517 	ldw	r4,20(r2)
  807248:	8020917a 	slli	r16,r16,5
  80724c:	08067640 	call	806764 <__hi0bits>
  807250:	d8c00817 	ldw	r3,32(sp)
  807254:	8085c83a 	sub	r2,r16,r2
  807258:	18800015 	stw	r2,0(r3)
  80725c:	9805883a 	mov	r2,r19
  807260:	dfc00717 	ldw	ra,28(sp)
  807264:	dd000617 	ldw	r20,24(sp)
  807268:	dcc00517 	ldw	r19,20(sp)
  80726c:	dc800417 	ldw	r18,16(sp)
  807270:	dc400317 	ldw	r17,12(sp)
  807274:	dc000217 	ldw	r16,8(sp)
  807278:	dec00804 	addi	sp,sp,32
  80727c:	f800283a 	ret
  807280:	d809883a 	mov	r4,sp
  807284:	08067cc0 	call	8067cc <__lo0bits>
  807288:	d8c00017 	ldw	r3,0(sp)
  80728c:	04000044 	movi	r16,1
  807290:	9c000415 	stw	r16,16(r19)
  807294:	98c00515 	stw	r3,20(r19)
  807298:	10800804 	addi	r2,r2,32
  80729c:	883fe126 	beq	r17,zero,807224 <__alt_mem_onchip_memory2+0xff7e7224>
  8072a0:	00c00d44 	movi	r3,53
  8072a4:	8c7ef344 	addi	r17,r17,-1075
  8072a8:	88a3883a 	add	r17,r17,r2
  8072ac:	1885c83a 	sub	r2,r3,r2
  8072b0:	d8c00817 	ldw	r3,32(sp)
  8072b4:	94400015 	stw	r17,0(r18)
  8072b8:	18800015 	stw	r2,0(r3)
  8072bc:	003fe706 	br	80725c <__alt_mem_onchip_memory2+0xff7e725c>
  8072c0:	01000804 	movi	r4,32
  8072c4:	2089c83a 	sub	r4,r4,r2
  8072c8:	1908983a 	sll	r4,r3,r4
  8072cc:	d9400117 	ldw	r5,4(sp)
  8072d0:	1886d83a 	srl	r3,r3,r2
  8072d4:	2148b03a 	or	r4,r4,r5
  8072d8:	99000515 	stw	r4,20(r19)
  8072dc:	d8c00015 	stw	r3,0(sp)
  8072e0:	003fca06 	br	80720c <__alt_mem_onchip_memory2+0xff7e720c>

008072e4 <__ratio>:
  8072e4:	defff904 	addi	sp,sp,-28
  8072e8:	dc400315 	stw	r17,12(sp)
  8072ec:	2823883a 	mov	r17,r5
  8072f0:	d9400104 	addi	r5,sp,4
  8072f4:	dfc00615 	stw	ra,24(sp)
  8072f8:	dcc00515 	stw	r19,20(sp)
  8072fc:	dc800415 	stw	r18,16(sp)
  807300:	2027883a 	mov	r19,r4
  807304:	dc000215 	stw	r16,8(sp)
  807308:	080708c0 	call	80708c <__b2d>
  80730c:	d80b883a 	mov	r5,sp
  807310:	8809883a 	mov	r4,r17
  807314:	1025883a 	mov	r18,r2
  807318:	1821883a 	mov	r16,r3
  80731c:	080708c0 	call	80708c <__b2d>
  807320:	8a000417 	ldw	r8,16(r17)
  807324:	99000417 	ldw	r4,16(r19)
  807328:	d9400117 	ldw	r5,4(sp)
  80732c:	2209c83a 	sub	r4,r4,r8
  807330:	2010917a 	slli	r8,r4,5
  807334:	d9000017 	ldw	r4,0(sp)
  807338:	2909c83a 	sub	r4,r5,r4
  80733c:	4109883a 	add	r4,r8,r4
  807340:	01000e0e 	bge	zero,r4,80737c <__ratio+0x98>
  807344:	2008953a 	slli	r4,r4,20
  807348:	2421883a 	add	r16,r4,r16
  80734c:	100d883a 	mov	r6,r2
  807350:	180f883a 	mov	r7,r3
  807354:	9009883a 	mov	r4,r18
  807358:	800b883a 	mov	r5,r16
  80735c:	080b5c00 	call	80b5c0 <__divdf3>
  807360:	dfc00617 	ldw	ra,24(sp)
  807364:	dcc00517 	ldw	r19,20(sp)
  807368:	dc800417 	ldw	r18,16(sp)
  80736c:	dc400317 	ldw	r17,12(sp)
  807370:	dc000217 	ldw	r16,8(sp)
  807374:	dec00704 	addi	sp,sp,28
  807378:	f800283a 	ret
  80737c:	2008953a 	slli	r4,r4,20
  807380:	1907c83a 	sub	r3,r3,r4
  807384:	003ff106 	br	80734c <__alt_mem_onchip_memory2+0xff7e734c>

00807388 <_mprec_log10>:
  807388:	defffe04 	addi	sp,sp,-8
  80738c:	dc000015 	stw	r16,0(sp)
  807390:	dfc00115 	stw	ra,4(sp)
  807394:	008005c4 	movi	r2,23
  807398:	2021883a 	mov	r16,r4
  80739c:	11000d0e 	bge	r2,r4,8073d4 <_mprec_log10+0x4c>
  8073a0:	0005883a 	mov	r2,zero
  8073a4:	00cffc34 	movhi	r3,16368
  8073a8:	843fffc4 	addi	r16,r16,-1
  8073ac:	000d883a 	mov	r6,zero
  8073b0:	01d00934 	movhi	r7,16420
  8073b4:	1009883a 	mov	r4,r2
  8073b8:	180b883a 	mov	r5,r3
  8073bc:	080c1e80 	call	80c1e8 <__muldf3>
  8073c0:	803ff91e 	bne	r16,zero,8073a8 <__alt_mem_onchip_memory2+0xff7e73a8>
  8073c4:	dfc00117 	ldw	ra,4(sp)
  8073c8:	dc000017 	ldw	r16,0(sp)
  8073cc:	dec00204 	addi	sp,sp,8
  8073d0:	f800283a 	ret
  8073d4:	202090fa 	slli	r16,r4,3
  8073d8:	00802074 	movhi	r2,129
  8073dc:	1081f904 	addi	r2,r2,2020
  8073e0:	1421883a 	add	r16,r2,r16
  8073e4:	80800017 	ldw	r2,0(r16)
  8073e8:	80c00117 	ldw	r3,4(r16)
  8073ec:	dfc00117 	ldw	ra,4(sp)
  8073f0:	dc000017 	ldw	r16,0(sp)
  8073f4:	dec00204 	addi	sp,sp,8
  8073f8:	f800283a 	ret

008073fc <__copybits>:
  8073fc:	297fffc4 	addi	r5,r5,-1
  807400:	280fd17a 	srai	r7,r5,5
  807404:	30c00417 	ldw	r3,16(r6)
  807408:	30800504 	addi	r2,r6,20
  80740c:	39c00044 	addi	r7,r7,1
  807410:	18c7883a 	add	r3,r3,r3
  807414:	39cf883a 	add	r7,r7,r7
  807418:	18c7883a 	add	r3,r3,r3
  80741c:	39cf883a 	add	r7,r7,r7
  807420:	10c7883a 	add	r3,r2,r3
  807424:	21cf883a 	add	r7,r4,r7
  807428:	10c00d2e 	bgeu	r2,r3,807460 <__copybits+0x64>
  80742c:	200b883a 	mov	r5,r4
  807430:	12000017 	ldw	r8,0(r2)
  807434:	29400104 	addi	r5,r5,4
  807438:	10800104 	addi	r2,r2,4
  80743c:	2a3fff15 	stw	r8,-4(r5)
  807440:	10fffb36 	bltu	r2,r3,807430 <__alt_mem_onchip_memory2+0xff7e7430>
  807444:	1985c83a 	sub	r2,r3,r6
  807448:	10bffac4 	addi	r2,r2,-21
  80744c:	1004d0ba 	srli	r2,r2,2
  807450:	10800044 	addi	r2,r2,1
  807454:	1085883a 	add	r2,r2,r2
  807458:	1085883a 	add	r2,r2,r2
  80745c:	2089883a 	add	r4,r4,r2
  807460:	21c0032e 	bgeu	r4,r7,807470 <__copybits+0x74>
  807464:	20000015 	stw	zero,0(r4)
  807468:	21000104 	addi	r4,r4,4
  80746c:	21fffd36 	bltu	r4,r7,807464 <__alt_mem_onchip_memory2+0xff7e7464>
  807470:	f800283a 	ret

00807474 <__any_on>:
  807474:	20c00417 	ldw	r3,16(r4)
  807478:	2805d17a 	srai	r2,r5,5
  80747c:	21000504 	addi	r4,r4,20
  807480:	18800d0e 	bge	r3,r2,8074b8 <__any_on+0x44>
  807484:	18c7883a 	add	r3,r3,r3
  807488:	18c7883a 	add	r3,r3,r3
  80748c:	20c7883a 	add	r3,r4,r3
  807490:	20c0192e 	bgeu	r4,r3,8074f8 <__any_on+0x84>
  807494:	18bfff17 	ldw	r2,-4(r3)
  807498:	18ffff04 	addi	r3,r3,-4
  80749c:	1000041e 	bne	r2,zero,8074b0 <__any_on+0x3c>
  8074a0:	20c0142e 	bgeu	r4,r3,8074f4 <__any_on+0x80>
  8074a4:	18ffff04 	addi	r3,r3,-4
  8074a8:	19400017 	ldw	r5,0(r3)
  8074ac:	283ffc26 	beq	r5,zero,8074a0 <__alt_mem_onchip_memory2+0xff7e74a0>
  8074b0:	00800044 	movi	r2,1
  8074b4:	f800283a 	ret
  8074b8:	10c00a0e 	bge	r2,r3,8074e4 <__any_on+0x70>
  8074bc:	1085883a 	add	r2,r2,r2
  8074c0:	1085883a 	add	r2,r2,r2
  8074c4:	294007cc 	andi	r5,r5,31
  8074c8:	2087883a 	add	r3,r4,r2
  8074cc:	283ff026 	beq	r5,zero,807490 <__alt_mem_onchip_memory2+0xff7e7490>
  8074d0:	19800017 	ldw	r6,0(r3)
  8074d4:	3144d83a 	srl	r2,r6,r5
  8074d8:	114a983a 	sll	r5,r2,r5
  8074dc:	317ff41e 	bne	r6,r5,8074b0 <__alt_mem_onchip_memory2+0xff7e74b0>
  8074e0:	003feb06 	br	807490 <__alt_mem_onchip_memory2+0xff7e7490>
  8074e4:	1085883a 	add	r2,r2,r2
  8074e8:	1085883a 	add	r2,r2,r2
  8074ec:	2087883a 	add	r3,r4,r2
  8074f0:	003fe706 	br	807490 <__alt_mem_onchip_memory2+0xff7e7490>
  8074f4:	f800283a 	ret
  8074f8:	0005883a 	mov	r2,zero
  8074fc:	f800283a 	ret

00807500 <_realloc_r>:
  807500:	defff604 	addi	sp,sp,-40
  807504:	dc800215 	stw	r18,8(sp)
  807508:	dfc00915 	stw	ra,36(sp)
  80750c:	df000815 	stw	fp,32(sp)
  807510:	ddc00715 	stw	r23,28(sp)
  807514:	dd800615 	stw	r22,24(sp)
  807518:	dd400515 	stw	r21,20(sp)
  80751c:	dd000415 	stw	r20,16(sp)
  807520:	dcc00315 	stw	r19,12(sp)
  807524:	dc400115 	stw	r17,4(sp)
  807528:	dc000015 	stw	r16,0(sp)
  80752c:	3025883a 	mov	r18,r6
  807530:	2800b726 	beq	r5,zero,807810 <_realloc_r+0x310>
  807534:	282b883a 	mov	r21,r5
  807538:	2029883a 	mov	r20,r4
  80753c:	080db540 	call	80db54 <__malloc_lock>
  807540:	a8bfff17 	ldw	r2,-4(r21)
  807544:	043fff04 	movi	r16,-4
  807548:	90c002c4 	addi	r3,r18,11
  80754c:	01000584 	movi	r4,22
  807550:	acfffe04 	addi	r19,r21,-8
  807554:	1420703a 	and	r16,r2,r16
  807558:	20c0332e 	bgeu	r4,r3,807628 <_realloc_r+0x128>
  80755c:	047ffe04 	movi	r17,-8
  807560:	1c62703a 	and	r17,r3,r17
  807564:	8807883a 	mov	r3,r17
  807568:	88005816 	blt	r17,zero,8076cc <_realloc_r+0x1cc>
  80756c:	8c805736 	bltu	r17,r18,8076cc <_realloc_r+0x1cc>
  807570:	80c0300e 	bge	r16,r3,807634 <_realloc_r+0x134>
  807574:	07002074 	movhi	fp,129
  807578:	e703a804 	addi	fp,fp,3744
  80757c:	e1c00217 	ldw	r7,8(fp)
  807580:	9c09883a 	add	r4,r19,r16
  807584:	22000117 	ldw	r8,4(r4)
  807588:	21c06326 	beq	r4,r7,807718 <_realloc_r+0x218>
  80758c:	017fff84 	movi	r5,-2
  807590:	414a703a 	and	r5,r8,r5
  807594:	214b883a 	add	r5,r4,r5
  807598:	29800117 	ldw	r6,4(r5)
  80759c:	3180004c 	andi	r6,r6,1
  8075a0:	30003f26 	beq	r6,zero,8076a0 <_realloc_r+0x1a0>
  8075a4:	1080004c 	andi	r2,r2,1
  8075a8:	10008326 	beq	r2,zero,8077b8 <_realloc_r+0x2b8>
  8075ac:	900b883a 	mov	r5,r18
  8075b0:	a009883a 	mov	r4,r20
  8075b4:	080578c0 	call	80578c <_malloc_r>
  8075b8:	1025883a 	mov	r18,r2
  8075bc:	10011e26 	beq	r2,zero,807a38 <_realloc_r+0x538>
  8075c0:	a93fff17 	ldw	r4,-4(r21)
  8075c4:	10fffe04 	addi	r3,r2,-8
  8075c8:	00bfff84 	movi	r2,-2
  8075cc:	2084703a 	and	r2,r4,r2
  8075d0:	9885883a 	add	r2,r19,r2
  8075d4:	1880ee26 	beq	r3,r2,807990 <_realloc_r+0x490>
  8075d8:	81bfff04 	addi	r6,r16,-4
  8075dc:	00800904 	movi	r2,36
  8075e0:	1180b836 	bltu	r2,r6,8078c4 <_realloc_r+0x3c4>
  8075e4:	00c004c4 	movi	r3,19
  8075e8:	19809636 	bltu	r3,r6,807844 <_realloc_r+0x344>
  8075ec:	9005883a 	mov	r2,r18
  8075f0:	a807883a 	mov	r3,r21
  8075f4:	19000017 	ldw	r4,0(r3)
  8075f8:	11000015 	stw	r4,0(r2)
  8075fc:	19000117 	ldw	r4,4(r3)
  807600:	11000115 	stw	r4,4(r2)
  807604:	18c00217 	ldw	r3,8(r3)
  807608:	10c00215 	stw	r3,8(r2)
  80760c:	a80b883a 	mov	r5,r21
  807610:	a009883a 	mov	r4,r20
  807614:	0804b940 	call	804b94 <_free_r>
  807618:	a009883a 	mov	r4,r20
  80761c:	080db780 	call	80db78 <__malloc_unlock>
  807620:	9005883a 	mov	r2,r18
  807624:	00001206 	br	807670 <_realloc_r+0x170>
  807628:	00c00404 	movi	r3,16
  80762c:	1823883a 	mov	r17,r3
  807630:	003fce06 	br	80756c <__alt_mem_onchip_memory2+0xff7e756c>
  807634:	a825883a 	mov	r18,r21
  807638:	8445c83a 	sub	r2,r16,r17
  80763c:	00c003c4 	movi	r3,15
  807640:	18802636 	bltu	r3,r2,8076dc <_realloc_r+0x1dc>
  807644:	99800117 	ldw	r6,4(r19)
  807648:	9c07883a 	add	r3,r19,r16
  80764c:	3180004c 	andi	r6,r6,1
  807650:	3420b03a 	or	r16,r6,r16
  807654:	9c000115 	stw	r16,4(r19)
  807658:	18800117 	ldw	r2,4(r3)
  80765c:	10800054 	ori	r2,r2,1
  807660:	18800115 	stw	r2,4(r3)
  807664:	a009883a 	mov	r4,r20
  807668:	080db780 	call	80db78 <__malloc_unlock>
  80766c:	9005883a 	mov	r2,r18
  807670:	dfc00917 	ldw	ra,36(sp)
  807674:	df000817 	ldw	fp,32(sp)
  807678:	ddc00717 	ldw	r23,28(sp)
  80767c:	dd800617 	ldw	r22,24(sp)
  807680:	dd400517 	ldw	r21,20(sp)
  807684:	dd000417 	ldw	r20,16(sp)
  807688:	dcc00317 	ldw	r19,12(sp)
  80768c:	dc800217 	ldw	r18,8(sp)
  807690:	dc400117 	ldw	r17,4(sp)
  807694:	dc000017 	ldw	r16,0(sp)
  807698:	dec00a04 	addi	sp,sp,40
  80769c:	f800283a 	ret
  8076a0:	017fff04 	movi	r5,-4
  8076a4:	414a703a 	and	r5,r8,r5
  8076a8:	814d883a 	add	r6,r16,r5
  8076ac:	30c01f16 	blt	r6,r3,80772c <_realloc_r+0x22c>
  8076b0:	20800317 	ldw	r2,12(r4)
  8076b4:	20c00217 	ldw	r3,8(r4)
  8076b8:	a825883a 	mov	r18,r21
  8076bc:	3021883a 	mov	r16,r6
  8076c0:	18800315 	stw	r2,12(r3)
  8076c4:	10c00215 	stw	r3,8(r2)
  8076c8:	003fdb06 	br	807638 <__alt_mem_onchip_memory2+0xff7e7638>
  8076cc:	00800304 	movi	r2,12
  8076d0:	a0800015 	stw	r2,0(r20)
  8076d4:	0005883a 	mov	r2,zero
  8076d8:	003fe506 	br	807670 <__alt_mem_onchip_memory2+0xff7e7670>
  8076dc:	98c00117 	ldw	r3,4(r19)
  8076e0:	9c4b883a 	add	r5,r19,r17
  8076e4:	11000054 	ori	r4,r2,1
  8076e8:	18c0004c 	andi	r3,r3,1
  8076ec:	1c62b03a 	or	r17,r3,r17
  8076f0:	9c400115 	stw	r17,4(r19)
  8076f4:	29000115 	stw	r4,4(r5)
  8076f8:	2885883a 	add	r2,r5,r2
  8076fc:	10c00117 	ldw	r3,4(r2)
  807700:	29400204 	addi	r5,r5,8
  807704:	a009883a 	mov	r4,r20
  807708:	18c00054 	ori	r3,r3,1
  80770c:	10c00115 	stw	r3,4(r2)
  807710:	0804b940 	call	804b94 <_free_r>
  807714:	003fd306 	br	807664 <__alt_mem_onchip_memory2+0xff7e7664>
  807718:	017fff04 	movi	r5,-4
  80771c:	414a703a 	and	r5,r8,r5
  807720:	89800404 	addi	r6,r17,16
  807724:	8151883a 	add	r8,r16,r5
  807728:	4180590e 	bge	r8,r6,807890 <_realloc_r+0x390>
  80772c:	1080004c 	andi	r2,r2,1
  807730:	103f9e1e 	bne	r2,zero,8075ac <__alt_mem_onchip_memory2+0xff7e75ac>
  807734:	adbffe17 	ldw	r22,-8(r21)
  807738:	00bfff04 	movi	r2,-4
  80773c:	9dadc83a 	sub	r22,r19,r22
  807740:	b1800117 	ldw	r6,4(r22)
  807744:	3084703a 	and	r2,r6,r2
  807748:	20002026 	beq	r4,zero,8077cc <_realloc_r+0x2cc>
  80774c:	80af883a 	add	r23,r16,r2
  807750:	b96f883a 	add	r23,r23,r5
  807754:	21c05f26 	beq	r4,r7,8078d4 <_realloc_r+0x3d4>
  807758:	b8c01c16 	blt	r23,r3,8077cc <_realloc_r+0x2cc>
  80775c:	20800317 	ldw	r2,12(r4)
  807760:	20c00217 	ldw	r3,8(r4)
  807764:	81bfff04 	addi	r6,r16,-4
  807768:	01000904 	movi	r4,36
  80776c:	18800315 	stw	r2,12(r3)
  807770:	10c00215 	stw	r3,8(r2)
  807774:	b0c00217 	ldw	r3,8(r22)
  807778:	b0800317 	ldw	r2,12(r22)
  80777c:	b4800204 	addi	r18,r22,8
  807780:	18800315 	stw	r2,12(r3)
  807784:	10c00215 	stw	r3,8(r2)
  807788:	21801b36 	bltu	r4,r6,8077f8 <_realloc_r+0x2f8>
  80778c:	008004c4 	movi	r2,19
  807790:	1180352e 	bgeu	r2,r6,807868 <_realloc_r+0x368>
  807794:	a8800017 	ldw	r2,0(r21)
  807798:	b0800215 	stw	r2,8(r22)
  80779c:	a8800117 	ldw	r2,4(r21)
  8077a0:	b0800315 	stw	r2,12(r22)
  8077a4:	008006c4 	movi	r2,27
  8077a8:	11807f36 	bltu	r2,r6,8079a8 <_realloc_r+0x4a8>
  8077ac:	b0800404 	addi	r2,r22,16
  8077b0:	ad400204 	addi	r21,r21,8
  8077b4:	00002d06 	br	80786c <_realloc_r+0x36c>
  8077b8:	adbffe17 	ldw	r22,-8(r21)
  8077bc:	00bfff04 	movi	r2,-4
  8077c0:	9dadc83a 	sub	r22,r19,r22
  8077c4:	b1000117 	ldw	r4,4(r22)
  8077c8:	2084703a 	and	r2,r4,r2
  8077cc:	b03f7726 	beq	r22,zero,8075ac <__alt_mem_onchip_memory2+0xff7e75ac>
  8077d0:	80af883a 	add	r23,r16,r2
  8077d4:	b8ff7516 	blt	r23,r3,8075ac <__alt_mem_onchip_memory2+0xff7e75ac>
  8077d8:	b0800317 	ldw	r2,12(r22)
  8077dc:	b0c00217 	ldw	r3,8(r22)
  8077e0:	81bfff04 	addi	r6,r16,-4
  8077e4:	01000904 	movi	r4,36
  8077e8:	18800315 	stw	r2,12(r3)
  8077ec:	10c00215 	stw	r3,8(r2)
  8077f0:	b4800204 	addi	r18,r22,8
  8077f4:	21bfe52e 	bgeu	r4,r6,80778c <__alt_mem_onchip_memory2+0xff7e778c>
  8077f8:	a80b883a 	mov	r5,r21
  8077fc:	9009883a 	mov	r4,r18
  807800:	08061c40 	call	8061c4 <memmove>
  807804:	b821883a 	mov	r16,r23
  807808:	b027883a 	mov	r19,r22
  80780c:	003f8a06 	br	807638 <__alt_mem_onchip_memory2+0xff7e7638>
  807810:	300b883a 	mov	r5,r6
  807814:	dfc00917 	ldw	ra,36(sp)
  807818:	df000817 	ldw	fp,32(sp)
  80781c:	ddc00717 	ldw	r23,28(sp)
  807820:	dd800617 	ldw	r22,24(sp)
  807824:	dd400517 	ldw	r21,20(sp)
  807828:	dd000417 	ldw	r20,16(sp)
  80782c:	dcc00317 	ldw	r19,12(sp)
  807830:	dc800217 	ldw	r18,8(sp)
  807834:	dc400117 	ldw	r17,4(sp)
  807838:	dc000017 	ldw	r16,0(sp)
  80783c:	dec00a04 	addi	sp,sp,40
  807840:	080578c1 	jmpi	80578c <_malloc_r>
  807844:	a8c00017 	ldw	r3,0(r21)
  807848:	90c00015 	stw	r3,0(r18)
  80784c:	a8c00117 	ldw	r3,4(r21)
  807850:	90c00115 	stw	r3,4(r18)
  807854:	00c006c4 	movi	r3,27
  807858:	19804536 	bltu	r3,r6,807970 <_realloc_r+0x470>
  80785c:	90800204 	addi	r2,r18,8
  807860:	a8c00204 	addi	r3,r21,8
  807864:	003f6306 	br	8075f4 <__alt_mem_onchip_memory2+0xff7e75f4>
  807868:	9005883a 	mov	r2,r18
  80786c:	a8c00017 	ldw	r3,0(r21)
  807870:	b821883a 	mov	r16,r23
  807874:	b027883a 	mov	r19,r22
  807878:	10c00015 	stw	r3,0(r2)
  80787c:	a8c00117 	ldw	r3,4(r21)
  807880:	10c00115 	stw	r3,4(r2)
  807884:	a8c00217 	ldw	r3,8(r21)
  807888:	10c00215 	stw	r3,8(r2)
  80788c:	003f6a06 	br	807638 <__alt_mem_onchip_memory2+0xff7e7638>
  807890:	9c67883a 	add	r19,r19,r17
  807894:	4445c83a 	sub	r2,r8,r17
  807898:	e4c00215 	stw	r19,8(fp)
  80789c:	10800054 	ori	r2,r2,1
  8078a0:	98800115 	stw	r2,4(r19)
  8078a4:	a8bfff17 	ldw	r2,-4(r21)
  8078a8:	a009883a 	mov	r4,r20
  8078ac:	1080004c 	andi	r2,r2,1
  8078b0:	1462b03a 	or	r17,r2,r17
  8078b4:	ac7fff15 	stw	r17,-4(r21)
  8078b8:	080db780 	call	80db78 <__malloc_unlock>
  8078bc:	a805883a 	mov	r2,r21
  8078c0:	003f6b06 	br	807670 <__alt_mem_onchip_memory2+0xff7e7670>
  8078c4:	a80b883a 	mov	r5,r21
  8078c8:	9009883a 	mov	r4,r18
  8078cc:	08061c40 	call	8061c4 <memmove>
  8078d0:	003f4e06 	br	80760c <__alt_mem_onchip_memory2+0xff7e760c>
  8078d4:	89000404 	addi	r4,r17,16
  8078d8:	b93fbc16 	blt	r23,r4,8077cc <__alt_mem_onchip_memory2+0xff7e77cc>
  8078dc:	b0800317 	ldw	r2,12(r22)
  8078e0:	b0c00217 	ldw	r3,8(r22)
  8078e4:	81bfff04 	addi	r6,r16,-4
  8078e8:	01000904 	movi	r4,36
  8078ec:	18800315 	stw	r2,12(r3)
  8078f0:	10c00215 	stw	r3,8(r2)
  8078f4:	b4800204 	addi	r18,r22,8
  8078f8:	21804336 	bltu	r4,r6,807a08 <_realloc_r+0x508>
  8078fc:	008004c4 	movi	r2,19
  807900:	11803f2e 	bgeu	r2,r6,807a00 <_realloc_r+0x500>
  807904:	a8800017 	ldw	r2,0(r21)
  807908:	b0800215 	stw	r2,8(r22)
  80790c:	a8800117 	ldw	r2,4(r21)
  807910:	b0800315 	stw	r2,12(r22)
  807914:	008006c4 	movi	r2,27
  807918:	11803f36 	bltu	r2,r6,807a18 <_realloc_r+0x518>
  80791c:	b0800404 	addi	r2,r22,16
  807920:	ad400204 	addi	r21,r21,8
  807924:	a8c00017 	ldw	r3,0(r21)
  807928:	10c00015 	stw	r3,0(r2)
  80792c:	a8c00117 	ldw	r3,4(r21)
  807930:	10c00115 	stw	r3,4(r2)
  807934:	a8c00217 	ldw	r3,8(r21)
  807938:	10c00215 	stw	r3,8(r2)
  80793c:	b447883a 	add	r3,r22,r17
  807940:	bc45c83a 	sub	r2,r23,r17
  807944:	e0c00215 	stw	r3,8(fp)
  807948:	10800054 	ori	r2,r2,1
  80794c:	18800115 	stw	r2,4(r3)
  807950:	b0800117 	ldw	r2,4(r22)
  807954:	a009883a 	mov	r4,r20
  807958:	1080004c 	andi	r2,r2,1
  80795c:	1462b03a 	or	r17,r2,r17
  807960:	b4400115 	stw	r17,4(r22)
  807964:	080db780 	call	80db78 <__malloc_unlock>
  807968:	9005883a 	mov	r2,r18
  80796c:	003f4006 	br	807670 <__alt_mem_onchip_memory2+0xff7e7670>
  807970:	a8c00217 	ldw	r3,8(r21)
  807974:	90c00215 	stw	r3,8(r18)
  807978:	a8c00317 	ldw	r3,12(r21)
  80797c:	90c00315 	stw	r3,12(r18)
  807980:	30801126 	beq	r6,r2,8079c8 <_realloc_r+0x4c8>
  807984:	90800404 	addi	r2,r18,16
  807988:	a8c00404 	addi	r3,r21,16
  80798c:	003f1906 	br	8075f4 <__alt_mem_onchip_memory2+0xff7e75f4>
  807990:	90ffff17 	ldw	r3,-4(r18)
  807994:	00bfff04 	movi	r2,-4
  807998:	a825883a 	mov	r18,r21
  80799c:	1884703a 	and	r2,r3,r2
  8079a0:	80a1883a 	add	r16,r16,r2
  8079a4:	003f2406 	br	807638 <__alt_mem_onchip_memory2+0xff7e7638>
  8079a8:	a8800217 	ldw	r2,8(r21)
  8079ac:	b0800415 	stw	r2,16(r22)
  8079b0:	a8800317 	ldw	r2,12(r21)
  8079b4:	b0800515 	stw	r2,20(r22)
  8079b8:	31000a26 	beq	r6,r4,8079e4 <_realloc_r+0x4e4>
  8079bc:	b0800604 	addi	r2,r22,24
  8079c0:	ad400404 	addi	r21,r21,16
  8079c4:	003fa906 	br	80786c <__alt_mem_onchip_memory2+0xff7e786c>
  8079c8:	a9000417 	ldw	r4,16(r21)
  8079cc:	90800604 	addi	r2,r18,24
  8079d0:	a8c00604 	addi	r3,r21,24
  8079d4:	91000415 	stw	r4,16(r18)
  8079d8:	a9000517 	ldw	r4,20(r21)
  8079dc:	91000515 	stw	r4,20(r18)
  8079e0:	003f0406 	br	8075f4 <__alt_mem_onchip_memory2+0xff7e75f4>
  8079e4:	a8c00417 	ldw	r3,16(r21)
  8079e8:	ad400604 	addi	r21,r21,24
  8079ec:	b0800804 	addi	r2,r22,32
  8079f0:	b0c00615 	stw	r3,24(r22)
  8079f4:	a8ffff17 	ldw	r3,-4(r21)
  8079f8:	b0c00715 	stw	r3,28(r22)
  8079fc:	003f9b06 	br	80786c <__alt_mem_onchip_memory2+0xff7e786c>
  807a00:	9005883a 	mov	r2,r18
  807a04:	003fc706 	br	807924 <__alt_mem_onchip_memory2+0xff7e7924>
  807a08:	a80b883a 	mov	r5,r21
  807a0c:	9009883a 	mov	r4,r18
  807a10:	08061c40 	call	8061c4 <memmove>
  807a14:	003fc906 	br	80793c <__alt_mem_onchip_memory2+0xff7e793c>
  807a18:	a8800217 	ldw	r2,8(r21)
  807a1c:	b0800415 	stw	r2,16(r22)
  807a20:	a8800317 	ldw	r2,12(r21)
  807a24:	b0800515 	stw	r2,20(r22)
  807a28:	31000726 	beq	r6,r4,807a48 <_realloc_r+0x548>
  807a2c:	b0800604 	addi	r2,r22,24
  807a30:	ad400404 	addi	r21,r21,16
  807a34:	003fbb06 	br	807924 <__alt_mem_onchip_memory2+0xff7e7924>
  807a38:	a009883a 	mov	r4,r20
  807a3c:	080db780 	call	80db78 <__malloc_unlock>
  807a40:	0005883a 	mov	r2,zero
  807a44:	003f0a06 	br	807670 <__alt_mem_onchip_memory2+0xff7e7670>
  807a48:	a8c00417 	ldw	r3,16(r21)
  807a4c:	ad400604 	addi	r21,r21,24
  807a50:	b0800804 	addi	r2,r22,32
  807a54:	b0c00615 	stw	r3,24(r22)
  807a58:	a8ffff17 	ldw	r3,-4(r21)
  807a5c:	b0c00715 	stw	r3,28(r22)
  807a60:	003fb006 	br	807924 <__alt_mem_onchip_memory2+0xff7e7924>

00807a64 <lflush>:
  807a64:	2080030b 	ldhu	r2,12(r4)
  807a68:	00c00244 	movi	r3,9
  807a6c:	1080024c 	andi	r2,r2,9
  807a70:	10c00226 	beq	r2,r3,807a7c <lflush+0x18>
  807a74:	0005883a 	mov	r2,zero
  807a78:	f800283a 	ret
  807a7c:	08046901 	jmpi	804690 <fflush>

00807a80 <__srefill_r>:
  807a80:	defffc04 	addi	sp,sp,-16
  807a84:	dc400115 	stw	r17,4(sp)
  807a88:	dc000015 	stw	r16,0(sp)
  807a8c:	dfc00315 	stw	ra,12(sp)
  807a90:	dc800215 	stw	r18,8(sp)
  807a94:	2023883a 	mov	r17,r4
  807a98:	2821883a 	mov	r16,r5
  807a9c:	20000226 	beq	r4,zero,807aa8 <__srefill_r+0x28>
  807aa0:	20800e17 	ldw	r2,56(r4)
  807aa4:	10003c26 	beq	r2,zero,807b98 <__srefill_r+0x118>
  807aa8:	80c0030b 	ldhu	r3,12(r16)
  807aac:	1908000c 	andi	r4,r3,8192
  807ab0:	1805883a 	mov	r2,r3
  807ab4:	2000071e 	bne	r4,zero,807ad4 <__srefill_r+0x54>
  807ab8:	81001917 	ldw	r4,100(r16)
  807abc:	18880014 	ori	r2,r3,8192
  807ac0:	00f7ffc4 	movi	r3,-8193
  807ac4:	20c8703a 	and	r4,r4,r3
  807ac8:	8080030d 	sth	r2,12(r16)
  807acc:	1007883a 	mov	r3,r2
  807ad0:	81001915 	stw	r4,100(r16)
  807ad4:	80000115 	stw	zero,4(r16)
  807ad8:	1100080c 	andi	r4,r2,32
  807adc:	2000571e 	bne	r4,zero,807c3c <__srefill_r+0x1bc>
  807ae0:	1100010c 	andi	r4,r2,4
  807ae4:	20001f26 	beq	r4,zero,807b64 <__srefill_r+0xe4>
  807ae8:	81400c17 	ldw	r5,48(r16)
  807aec:	28000826 	beq	r5,zero,807b10 <__srefill_r+0x90>
  807af0:	80801004 	addi	r2,r16,64
  807af4:	28800226 	beq	r5,r2,807b00 <__srefill_r+0x80>
  807af8:	8809883a 	mov	r4,r17
  807afc:	0804b940 	call	804b94 <_free_r>
  807b00:	80800f17 	ldw	r2,60(r16)
  807b04:	80000c15 	stw	zero,48(r16)
  807b08:	80800115 	stw	r2,4(r16)
  807b0c:	1000391e 	bne	r2,zero,807bf4 <__srefill_r+0x174>
  807b10:	80800417 	ldw	r2,16(r16)
  807b14:	10004b26 	beq	r2,zero,807c44 <__srefill_r+0x1c4>
  807b18:	8480030b 	ldhu	r18,12(r16)
  807b1c:	908000cc 	andi	r2,r18,3
  807b20:	10001f1e 	bne	r2,zero,807ba0 <__srefill_r+0x120>
  807b24:	81800417 	ldw	r6,16(r16)
  807b28:	80800817 	ldw	r2,32(r16)
  807b2c:	81c00517 	ldw	r7,20(r16)
  807b30:	81400717 	ldw	r5,28(r16)
  807b34:	81800015 	stw	r6,0(r16)
  807b38:	8809883a 	mov	r4,r17
  807b3c:	103ee83a 	callr	r2
  807b40:	80800115 	stw	r2,4(r16)
  807b44:	00800e0e 	bge	zero,r2,807b80 <__srefill_r+0x100>
  807b48:	0005883a 	mov	r2,zero
  807b4c:	dfc00317 	ldw	ra,12(sp)
  807b50:	dc800217 	ldw	r18,8(sp)
  807b54:	dc400117 	ldw	r17,4(sp)
  807b58:	dc000017 	ldw	r16,0(sp)
  807b5c:	dec00404 	addi	sp,sp,16
  807b60:	f800283a 	ret
  807b64:	1100040c 	andi	r4,r2,16
  807b68:	20003026 	beq	r4,zero,807c2c <__srefill_r+0x1ac>
  807b6c:	1080020c 	andi	r2,r2,8
  807b70:	1000241e 	bne	r2,zero,807c04 <__srefill_r+0x184>
  807b74:	18c00114 	ori	r3,r3,4
  807b78:	80c0030d 	sth	r3,12(r16)
  807b7c:	003fe406 	br	807b10 <__alt_mem_onchip_memory2+0xff7e7b10>
  807b80:	80c0030b 	ldhu	r3,12(r16)
  807b84:	1000161e 	bne	r2,zero,807be0 <__srefill_r+0x160>
  807b88:	18c00814 	ori	r3,r3,32
  807b8c:	00bfffc4 	movi	r2,-1
  807b90:	80c0030d 	sth	r3,12(r16)
  807b94:	003fed06 	br	807b4c <__alt_mem_onchip_memory2+0xff7e7b4c>
  807b98:	0804a200 	call	804a20 <__sinit>
  807b9c:	003fc206 	br	807aa8 <__alt_mem_onchip_memory2+0xff7e7aa8>
  807ba0:	00802074 	movhi	r2,129
  807ba4:	10895d04 	addi	r2,r2,9588
  807ba8:	11000017 	ldw	r4,0(r2)
  807bac:	01402034 	movhi	r5,128
  807bb0:	00800044 	movi	r2,1
  807bb4:	295e9904 	addi	r5,r5,31332
  807bb8:	8080030d 	sth	r2,12(r16)
  807bbc:	080536c0 	call	80536c <_fwalk>
  807bc0:	00800244 	movi	r2,9
  807bc4:	8480030d 	sth	r18,12(r16)
  807bc8:	9480024c 	andi	r18,r18,9
  807bcc:	90bfd51e 	bne	r18,r2,807b24 <__alt_mem_onchip_memory2+0xff7e7b24>
  807bd0:	800b883a 	mov	r5,r16
  807bd4:	8809883a 	mov	r4,r17
  807bd8:	08044180 	call	804418 <__sflush_r>
  807bdc:	003fd106 	br	807b24 <__alt_mem_onchip_memory2+0xff7e7b24>
  807be0:	18c01014 	ori	r3,r3,64
  807be4:	80000115 	stw	zero,4(r16)
  807be8:	00bfffc4 	movi	r2,-1
  807bec:	80c0030d 	sth	r3,12(r16)
  807bf0:	003fd606 	br	807b4c <__alt_mem_onchip_memory2+0xff7e7b4c>
  807bf4:	80c00e17 	ldw	r3,56(r16)
  807bf8:	0005883a 	mov	r2,zero
  807bfc:	80c00015 	stw	r3,0(r16)
  807c00:	003fd206 	br	807b4c <__alt_mem_onchip_memory2+0xff7e7b4c>
  807c04:	800b883a 	mov	r5,r16
  807c08:	8809883a 	mov	r4,r17
  807c0c:	08046340 	call	804634 <_fflush_r>
  807c10:	10000a1e 	bne	r2,zero,807c3c <__srefill_r+0x1bc>
  807c14:	8080030b 	ldhu	r2,12(r16)
  807c18:	00fffdc4 	movi	r3,-9
  807c1c:	80000215 	stw	zero,8(r16)
  807c20:	1886703a 	and	r3,r3,r2
  807c24:	80000615 	stw	zero,24(r16)
  807c28:	003fd206 	br	807b74 <__alt_mem_onchip_memory2+0xff7e7b74>
  807c2c:	00800244 	movi	r2,9
  807c30:	88800015 	stw	r2,0(r17)
  807c34:	18c01014 	ori	r3,r3,64
  807c38:	80c0030d 	sth	r3,12(r16)
  807c3c:	00bfffc4 	movi	r2,-1
  807c40:	003fc206 	br	807b4c <__alt_mem_onchip_memory2+0xff7e7b4c>
  807c44:	800b883a 	mov	r5,r16
  807c48:	8809883a 	mov	r4,r17
  807c4c:	08055d00 	call	8055d0 <__smakebuf_r>
  807c50:	003fb106 	br	807b18 <__alt_mem_onchip_memory2+0xff7e7b18>

00807c54 <__fpclassifyd>:
  807c54:	00a00034 	movhi	r2,32768
  807c58:	10bfffc4 	addi	r2,r2,-1
  807c5c:	2884703a 	and	r2,r5,r2
  807c60:	10000726 	beq	r2,zero,807c80 <__fpclassifyd+0x2c>
  807c64:	00fffc34 	movhi	r3,65520
  807c68:	019ff834 	movhi	r6,32736
  807c6c:	28c7883a 	add	r3,r5,r3
  807c70:	31bfffc4 	addi	r6,r6,-1
  807c74:	30c00536 	bltu	r6,r3,807c8c <__fpclassifyd+0x38>
  807c78:	00800104 	movi	r2,4
  807c7c:	f800283a 	ret
  807c80:	2000021e 	bne	r4,zero,807c8c <__fpclassifyd+0x38>
  807c84:	00800084 	movi	r2,2
  807c88:	f800283a 	ret
  807c8c:	00dffc34 	movhi	r3,32752
  807c90:	019ff834 	movhi	r6,32736
  807c94:	28cb883a 	add	r5,r5,r3
  807c98:	31bfffc4 	addi	r6,r6,-1
  807c9c:	317ff62e 	bgeu	r6,r5,807c78 <__alt_mem_onchip_memory2+0xff7e7c78>
  807ca0:	01400434 	movhi	r5,16
  807ca4:	297fffc4 	addi	r5,r5,-1
  807ca8:	28800236 	bltu	r5,r2,807cb4 <__fpclassifyd+0x60>
  807cac:	008000c4 	movi	r2,3
  807cb0:	f800283a 	ret
  807cb4:	10c00226 	beq	r2,r3,807cc0 <__fpclassifyd+0x6c>
  807cb8:	0005883a 	mov	r2,zero
  807cbc:	f800283a 	ret
  807cc0:	2005003a 	cmpeq	r2,r4,zero
  807cc4:	f800283a 	ret

00807cc8 <_sbrk_r>:
  807cc8:	defffd04 	addi	sp,sp,-12
  807ccc:	dc000015 	stw	r16,0(sp)
  807cd0:	04002074 	movhi	r16,129
  807cd4:	dc400115 	stw	r17,4(sp)
  807cd8:	84105f04 	addi	r16,r16,16764
  807cdc:	2023883a 	mov	r17,r4
  807ce0:	2809883a 	mov	r4,r5
  807ce4:	dfc00215 	stw	ra,8(sp)
  807ce8:	80000015 	stw	zero,0(r16)
  807cec:	080dd600 	call	80dd60 <sbrk>
  807cf0:	00ffffc4 	movi	r3,-1
  807cf4:	10c00526 	beq	r2,r3,807d0c <_sbrk_r+0x44>
  807cf8:	dfc00217 	ldw	ra,8(sp)
  807cfc:	dc400117 	ldw	r17,4(sp)
  807d00:	dc000017 	ldw	r16,0(sp)
  807d04:	dec00304 	addi	sp,sp,12
  807d08:	f800283a 	ret
  807d0c:	80c00017 	ldw	r3,0(r16)
  807d10:	183ff926 	beq	r3,zero,807cf8 <__alt_mem_onchip_memory2+0xff7e7cf8>
  807d14:	88c00015 	stw	r3,0(r17)
  807d18:	003ff706 	br	807cf8 <__alt_mem_onchip_memory2+0xff7e7cf8>

00807d1c <__sread>:
  807d1c:	defffe04 	addi	sp,sp,-8
  807d20:	dc000015 	stw	r16,0(sp)
  807d24:	2821883a 	mov	r16,r5
  807d28:	2940038f 	ldh	r5,14(r5)
  807d2c:	dfc00115 	stw	ra,4(sp)
  807d30:	0809bd80 	call	809bd8 <_read_r>
  807d34:	10000716 	blt	r2,zero,807d54 <__sread+0x38>
  807d38:	80c01417 	ldw	r3,80(r16)
  807d3c:	1887883a 	add	r3,r3,r2
  807d40:	80c01415 	stw	r3,80(r16)
  807d44:	dfc00117 	ldw	ra,4(sp)
  807d48:	dc000017 	ldw	r16,0(sp)
  807d4c:	dec00204 	addi	sp,sp,8
  807d50:	f800283a 	ret
  807d54:	80c0030b 	ldhu	r3,12(r16)
  807d58:	18fbffcc 	andi	r3,r3,61439
  807d5c:	80c0030d 	sth	r3,12(r16)
  807d60:	dfc00117 	ldw	ra,4(sp)
  807d64:	dc000017 	ldw	r16,0(sp)
  807d68:	dec00204 	addi	sp,sp,8
  807d6c:	f800283a 	ret

00807d70 <__seofread>:
  807d70:	0005883a 	mov	r2,zero
  807d74:	f800283a 	ret

00807d78 <__swrite>:
  807d78:	2880030b 	ldhu	r2,12(r5)
  807d7c:	defffb04 	addi	sp,sp,-20
  807d80:	dcc00315 	stw	r19,12(sp)
  807d84:	dc800215 	stw	r18,8(sp)
  807d88:	dc400115 	stw	r17,4(sp)
  807d8c:	dc000015 	stw	r16,0(sp)
  807d90:	dfc00415 	stw	ra,16(sp)
  807d94:	10c0400c 	andi	r3,r2,256
  807d98:	2821883a 	mov	r16,r5
  807d9c:	2023883a 	mov	r17,r4
  807da0:	3025883a 	mov	r18,r6
  807da4:	3827883a 	mov	r19,r7
  807da8:	18000526 	beq	r3,zero,807dc0 <__swrite+0x48>
  807dac:	2940038f 	ldh	r5,14(r5)
  807db0:	01c00084 	movi	r7,2
  807db4:	000d883a 	mov	r6,zero
  807db8:	0809b780 	call	809b78 <_lseek_r>
  807dbc:	8080030b 	ldhu	r2,12(r16)
  807dc0:	8140038f 	ldh	r5,14(r16)
  807dc4:	10bbffcc 	andi	r2,r2,61439
  807dc8:	980f883a 	mov	r7,r19
  807dcc:	900d883a 	mov	r6,r18
  807dd0:	8809883a 	mov	r4,r17
  807dd4:	8080030d 	sth	r2,12(r16)
  807dd8:	dfc00417 	ldw	ra,16(sp)
  807ddc:	dcc00317 	ldw	r19,12(sp)
  807de0:	dc800217 	ldw	r18,8(sp)
  807de4:	dc400117 	ldw	r17,4(sp)
  807de8:	dc000017 	ldw	r16,0(sp)
  807dec:	dec00504 	addi	sp,sp,20
  807df0:	080962c1 	jmpi	80962c <_write_r>

00807df4 <__sseek>:
  807df4:	defffe04 	addi	sp,sp,-8
  807df8:	dc000015 	stw	r16,0(sp)
  807dfc:	2821883a 	mov	r16,r5
  807e00:	2940038f 	ldh	r5,14(r5)
  807e04:	dfc00115 	stw	ra,4(sp)
  807e08:	0809b780 	call	809b78 <_lseek_r>
  807e0c:	00ffffc4 	movi	r3,-1
  807e10:	10c00826 	beq	r2,r3,807e34 <__sseek+0x40>
  807e14:	80c0030b 	ldhu	r3,12(r16)
  807e18:	80801415 	stw	r2,80(r16)
  807e1c:	18c40014 	ori	r3,r3,4096
  807e20:	80c0030d 	sth	r3,12(r16)
  807e24:	dfc00117 	ldw	ra,4(sp)
  807e28:	dc000017 	ldw	r16,0(sp)
  807e2c:	dec00204 	addi	sp,sp,8
  807e30:	f800283a 	ret
  807e34:	80c0030b 	ldhu	r3,12(r16)
  807e38:	18fbffcc 	andi	r3,r3,61439
  807e3c:	80c0030d 	sth	r3,12(r16)
  807e40:	dfc00117 	ldw	ra,4(sp)
  807e44:	dc000017 	ldw	r16,0(sp)
  807e48:	dec00204 	addi	sp,sp,8
  807e4c:	f800283a 	ret

00807e50 <__sclose>:
  807e50:	2940038f 	ldh	r5,14(r5)
  807e54:	080968c1 	jmpi	80968c <_close_r>

00807e58 <strcmp>:
  807e58:	2144b03a 	or	r2,r4,r5
  807e5c:	108000cc 	andi	r2,r2,3
  807e60:	1000171e 	bne	r2,zero,807ec0 <strcmp+0x68>
  807e64:	20800017 	ldw	r2,0(r4)
  807e68:	28c00017 	ldw	r3,0(r5)
  807e6c:	10c0141e 	bne	r2,r3,807ec0 <strcmp+0x68>
  807e70:	027fbff4 	movhi	r9,65279
  807e74:	4a7fbfc4 	addi	r9,r9,-257
  807e78:	0086303a 	nor	r3,zero,r2
  807e7c:	02202074 	movhi	r8,32897
  807e80:	1245883a 	add	r2,r2,r9
  807e84:	42202004 	addi	r8,r8,-32640
  807e88:	10c4703a 	and	r2,r2,r3
  807e8c:	1204703a 	and	r2,r2,r8
  807e90:	10000226 	beq	r2,zero,807e9c <strcmp+0x44>
  807e94:	00002306 	br	807f24 <strcmp+0xcc>
  807e98:	1000221e 	bne	r2,zero,807f24 <strcmp+0xcc>
  807e9c:	21000104 	addi	r4,r4,4
  807ea0:	20c00017 	ldw	r3,0(r4)
  807ea4:	29400104 	addi	r5,r5,4
  807ea8:	29800017 	ldw	r6,0(r5)
  807eac:	1a4f883a 	add	r7,r3,r9
  807eb0:	00c4303a 	nor	r2,zero,r3
  807eb4:	3884703a 	and	r2,r7,r2
  807eb8:	1204703a 	and	r2,r2,r8
  807ebc:	19bff626 	beq	r3,r6,807e98 <__alt_mem_onchip_memory2+0xff7e7e98>
  807ec0:	20800003 	ldbu	r2,0(r4)
  807ec4:	10c03fcc 	andi	r3,r2,255
  807ec8:	18c0201c 	xori	r3,r3,128
  807ecc:	18ffe004 	addi	r3,r3,-128
  807ed0:	18000c26 	beq	r3,zero,807f04 <strcmp+0xac>
  807ed4:	29800007 	ldb	r6,0(r5)
  807ed8:	19800326 	beq	r3,r6,807ee8 <strcmp+0x90>
  807edc:	00001306 	br	807f2c <strcmp+0xd4>
  807ee0:	29800007 	ldb	r6,0(r5)
  807ee4:	11800b1e 	bne	r2,r6,807f14 <strcmp+0xbc>
  807ee8:	21000044 	addi	r4,r4,1
  807eec:	20c00003 	ldbu	r3,0(r4)
  807ef0:	29400044 	addi	r5,r5,1
  807ef4:	18803fcc 	andi	r2,r3,255
  807ef8:	1080201c 	xori	r2,r2,128
  807efc:	10bfe004 	addi	r2,r2,-128
  807f00:	103ff71e 	bne	r2,zero,807ee0 <__alt_mem_onchip_memory2+0xff7e7ee0>
  807f04:	0007883a 	mov	r3,zero
  807f08:	28800003 	ldbu	r2,0(r5)
  807f0c:	1885c83a 	sub	r2,r3,r2
  807f10:	f800283a 	ret
  807f14:	28800003 	ldbu	r2,0(r5)
  807f18:	18c03fcc 	andi	r3,r3,255
  807f1c:	1885c83a 	sub	r2,r3,r2
  807f20:	f800283a 	ret
  807f24:	0005883a 	mov	r2,zero
  807f28:	f800283a 	ret
  807f2c:	10c03fcc 	andi	r3,r2,255
  807f30:	003ff506 	br	807f08 <__alt_mem_onchip_memory2+0xff7e7f08>

00807f34 <__sprint_r.part.0>:
  807f34:	28801917 	ldw	r2,100(r5)
  807f38:	defff604 	addi	sp,sp,-40
  807f3c:	dd400515 	stw	r21,20(sp)
  807f40:	dfc00915 	stw	ra,36(sp)
  807f44:	df000815 	stw	fp,32(sp)
  807f48:	ddc00715 	stw	r23,28(sp)
  807f4c:	dd800615 	stw	r22,24(sp)
  807f50:	dd000415 	stw	r20,16(sp)
  807f54:	dcc00315 	stw	r19,12(sp)
  807f58:	dc800215 	stw	r18,8(sp)
  807f5c:	dc400115 	stw	r17,4(sp)
  807f60:	dc000015 	stw	r16,0(sp)
  807f64:	1088000c 	andi	r2,r2,8192
  807f68:	302b883a 	mov	r21,r6
  807f6c:	10002e26 	beq	r2,zero,808028 <__sprint_r.part.0+0xf4>
  807f70:	30800217 	ldw	r2,8(r6)
  807f74:	35800017 	ldw	r22,0(r6)
  807f78:	10002926 	beq	r2,zero,808020 <__sprint_r.part.0+0xec>
  807f7c:	2827883a 	mov	r19,r5
  807f80:	2029883a 	mov	r20,r4
  807f84:	b5c00104 	addi	r23,r22,4
  807f88:	04bfffc4 	movi	r18,-1
  807f8c:	bc400017 	ldw	r17,0(r23)
  807f90:	b4000017 	ldw	r16,0(r22)
  807f94:	0039883a 	mov	fp,zero
  807f98:	8822d0ba 	srli	r17,r17,2
  807f9c:	8800031e 	bne	r17,zero,807fac <__sprint_r.part.0+0x78>
  807fa0:	00001806 	br	808004 <__sprint_r.part.0+0xd0>
  807fa4:	84000104 	addi	r16,r16,4
  807fa8:	8f001526 	beq	r17,fp,808000 <__sprint_r.part.0+0xcc>
  807fac:	81400017 	ldw	r5,0(r16)
  807fb0:	980d883a 	mov	r6,r19
  807fb4:	a009883a 	mov	r4,r20
  807fb8:	0809a240 	call	809a24 <_fputwc_r>
  807fbc:	e7000044 	addi	fp,fp,1
  807fc0:	14bff81e 	bne	r2,r18,807fa4 <__alt_mem_onchip_memory2+0xff7e7fa4>
  807fc4:	9005883a 	mov	r2,r18
  807fc8:	a8000215 	stw	zero,8(r21)
  807fcc:	a8000115 	stw	zero,4(r21)
  807fd0:	dfc00917 	ldw	ra,36(sp)
  807fd4:	df000817 	ldw	fp,32(sp)
  807fd8:	ddc00717 	ldw	r23,28(sp)
  807fdc:	dd800617 	ldw	r22,24(sp)
  807fe0:	dd400517 	ldw	r21,20(sp)
  807fe4:	dd000417 	ldw	r20,16(sp)
  807fe8:	dcc00317 	ldw	r19,12(sp)
  807fec:	dc800217 	ldw	r18,8(sp)
  807ff0:	dc400117 	ldw	r17,4(sp)
  807ff4:	dc000017 	ldw	r16,0(sp)
  807ff8:	dec00a04 	addi	sp,sp,40
  807ffc:	f800283a 	ret
  808000:	a8800217 	ldw	r2,8(r21)
  808004:	8c63883a 	add	r17,r17,r17
  808008:	8c63883a 	add	r17,r17,r17
  80800c:	1445c83a 	sub	r2,r2,r17
  808010:	a8800215 	stw	r2,8(r21)
  808014:	b5800204 	addi	r22,r22,8
  808018:	bdc00204 	addi	r23,r23,8
  80801c:	103fdb1e 	bne	r2,zero,807f8c <__alt_mem_onchip_memory2+0xff7e7f8c>
  808020:	0005883a 	mov	r2,zero
  808024:	003fe806 	br	807fc8 <__alt_mem_onchip_memory2+0xff7e7fc8>
  808028:	0804ea40 	call	804ea4 <__sfvwrite_r>
  80802c:	003fe606 	br	807fc8 <__alt_mem_onchip_memory2+0xff7e7fc8>

00808030 <__sprint_r>:
  808030:	30c00217 	ldw	r3,8(r6)
  808034:	18000126 	beq	r3,zero,80803c <__sprint_r+0xc>
  808038:	0807f341 	jmpi	807f34 <__sprint_r.part.0>
  80803c:	30000115 	stw	zero,4(r6)
  808040:	0005883a 	mov	r2,zero
  808044:	f800283a 	ret

00808048 <___vfiprintf_internal_r>:
  808048:	deffca04 	addi	sp,sp,-216
  80804c:	dd403115 	stw	r21,196(sp)
  808050:	dfc03515 	stw	ra,212(sp)
  808054:	df003415 	stw	fp,208(sp)
  808058:	ddc03315 	stw	r23,204(sp)
  80805c:	dd803215 	stw	r22,200(sp)
  808060:	dd003015 	stw	r20,192(sp)
  808064:	dcc02f15 	stw	r19,188(sp)
  808068:	dc802e15 	stw	r18,184(sp)
  80806c:	dc402d15 	stw	r17,180(sp)
  808070:	dc002c15 	stw	r16,176(sp)
  808074:	d9002115 	stw	r4,132(sp)
  808078:	d9402015 	stw	r5,128(sp)
  80807c:	d9c02215 	stw	r7,136(sp)
  808080:	302b883a 	mov	r21,r6
  808084:	20000226 	beq	r4,zero,808090 <___vfiprintf_internal_r+0x48>
  808088:	20800e17 	ldw	r2,56(r4)
  80808c:	1000cf26 	beq	r2,zero,8083cc <___vfiprintf_internal_r+0x384>
  808090:	d8c02017 	ldw	r3,128(sp)
  808094:	1880030b 	ldhu	r2,12(r3)
  808098:	10c8000c 	andi	r3,r2,8192
  80809c:	1800071e 	bne	r3,zero,8080bc <___vfiprintf_internal_r+0x74>
  8080a0:	d9402017 	ldw	r5,128(sp)
  8080a4:	00f7ffc4 	movi	r3,-8193
  8080a8:	10880014 	ori	r2,r2,8192
  8080ac:	29001917 	ldw	r4,100(r5)
  8080b0:	2880030d 	sth	r2,12(r5)
  8080b4:	20c6703a 	and	r3,r4,r3
  8080b8:	28c01915 	stw	r3,100(r5)
  8080bc:	10c0020c 	andi	r3,r2,8
  8080c0:	1800a526 	beq	r3,zero,808358 <___vfiprintf_internal_r+0x310>
  8080c4:	d9002017 	ldw	r4,128(sp)
  8080c8:	20c00417 	ldw	r3,16(r4)
  8080cc:	1800a226 	beq	r3,zero,808358 <___vfiprintf_internal_r+0x310>
  8080d0:	1080068c 	andi	r2,r2,26
  8080d4:	00c00284 	movi	r3,10
  8080d8:	10c0a826 	beq	r2,r3,80837c <___vfiprintf_internal_r+0x334>
  8080dc:	d9001a04 	addi	r4,sp,104
  8080e0:	d94019c4 	addi	r5,sp,103
  8080e4:	04802074 	movhi	r18,129
  8080e8:	2145c83a 	sub	r2,r4,r5
  8080ec:	94822b04 	addi	r18,r18,2220
  8080f0:	d9001e15 	stw	r4,120(sp)
  8080f4:	d9401f15 	stw	r5,124(sp)
  8080f8:	dec01a15 	stw	sp,104(sp)
  8080fc:	d8001c15 	stw	zero,112(sp)
  808100:	d8001b15 	stw	zero,108(sp)
  808104:	d811883a 	mov	r8,sp
  808108:	d8002615 	stw	zero,152(sp)
  80810c:	d8002415 	stw	zero,144(sp)
  808110:	d8802815 	stw	r2,160(sp)
  808114:	a82d883a 	mov	r22,r21
  808118:	b0800007 	ldb	r2,0(r22)
  80811c:	10040d26 	beq	r2,zero,809154 <___vfiprintf_internal_r+0x110c>
  808120:	00c00944 	movi	r3,37
  808124:	b029883a 	mov	r20,r22
  808128:	10c0021e 	bne	r2,r3,808134 <___vfiprintf_internal_r+0xec>
  80812c:	00001606 	br	808188 <___vfiprintf_internal_r+0x140>
  808130:	10c00326 	beq	r2,r3,808140 <___vfiprintf_internal_r+0xf8>
  808134:	a5000044 	addi	r20,r20,1
  808138:	a0800007 	ldb	r2,0(r20)
  80813c:	103ffc1e 	bne	r2,zero,808130 <__alt_mem_onchip_memory2+0xff7e8130>
  808140:	a5a1c83a 	sub	r16,r20,r22
  808144:	80001026 	beq	r16,zero,808188 <___vfiprintf_internal_r+0x140>
  808148:	d8c01c17 	ldw	r3,112(sp)
  80814c:	d8801b17 	ldw	r2,108(sp)
  808150:	45800015 	stw	r22,0(r8)
  808154:	80c7883a 	add	r3,r16,r3
  808158:	10800044 	addi	r2,r2,1
  80815c:	44000115 	stw	r16,4(r8)
  808160:	d8c01c15 	stw	r3,112(sp)
  808164:	d8801b15 	stw	r2,108(sp)
  808168:	010001c4 	movi	r4,7
  80816c:	2080750e 	bge	r4,r2,808344 <___vfiprintf_internal_r+0x2fc>
  808170:	1803951e 	bne	r3,zero,808fc8 <___vfiprintf_internal_r+0xf80>
  808174:	d8c02417 	ldw	r3,144(sp)
  808178:	d8001b15 	stw	zero,108(sp)
  80817c:	d811883a 	mov	r8,sp
  808180:	1c07883a 	add	r3,r3,r16
  808184:	d8c02415 	stw	r3,144(sp)
  808188:	a0800007 	ldb	r2,0(r20)
  80818c:	1002e026 	beq	r2,zero,808d10 <___vfiprintf_internal_r+0xcc8>
  808190:	a5800044 	addi	r22,r20,1
  808194:	a0c00047 	ldb	r3,1(r20)
  808198:	d8001d85 	stb	zero,118(sp)
  80819c:	0027883a 	mov	r19,zero
  8081a0:	d8002305 	stb	zero,140(sp)
  8081a4:	043fffc4 	movi	r16,-1
  8081a8:	d8002515 	stw	zero,148(sp)
  8081ac:	0023883a 	mov	r17,zero
  8081b0:	05001604 	movi	r20,88
  8081b4:	05400244 	movi	r21,9
  8081b8:	402f883a 	mov	r23,r8
  8081bc:	b5800044 	addi	r22,r22,1
  8081c0:	18bff804 	addi	r2,r3,-32
  8081c4:	a0827736 	bltu	r20,r2,808ba4 <___vfiprintf_internal_r+0xb5c>
  8081c8:	100490ba 	slli	r2,r2,2
  8081cc:	01002074 	movhi	r4,129
  8081d0:	21207804 	addi	r4,r4,-32288
  8081d4:	1105883a 	add	r2,r2,r4
  8081d8:	10800017 	ldw	r2,0(r2)
  8081dc:	1000683a 	jmp	r2
  8081e0:	008088a4 	muli	r2,zero,546
  8081e4:	00808ba4 	muli	r2,zero,558
  8081e8:	00808ba4 	muli	r2,zero,558
  8081ec:	008088c0 	call	8088c <__alt_mem_sdram-0x77f774>
  8081f0:	00808ba4 	muli	r2,zero,558
  8081f4:	00808ba4 	muli	r2,zero,558
  8081f8:	00808ba4 	muli	r2,zero,558
  8081fc:	00808ba4 	muli	r2,zero,558
  808200:	00808ba4 	muli	r2,zero,558
  808204:	00808ba4 	muli	r2,zero,558
  808208:	00808ac8 	cmpgei	r2,zero,555
  80820c:	00808aec 	andhi	r2,zero,555
  808210:	00808ba4 	muli	r2,zero,558
  808214:	008083e4 	muli	r2,zero,527
  808218:	00808b00 	call	808b0 <__alt_mem_sdram-0x77f750>
  80821c:	00808ba4 	muli	r2,zero,558
  808220:	008088cc 	andi	r2,zero,547
  808224:	008088d8 	cmpnei	r2,zero,547
  808228:	008088d8 	cmpnei	r2,zero,547
  80822c:	008088d8 	cmpnei	r2,zero,547
  808230:	008088d8 	cmpnei	r2,zero,547
  808234:	008088d8 	cmpnei	r2,zero,547
  808238:	008088d8 	cmpnei	r2,zero,547
  80823c:	008088d8 	cmpnei	r2,zero,547
  808240:	008088d8 	cmpnei	r2,zero,547
  808244:	008088d8 	cmpnei	r2,zero,547
  808248:	00808ba4 	muli	r2,zero,558
  80824c:	00808ba4 	muli	r2,zero,558
  808250:	00808ba4 	muli	r2,zero,558
  808254:	00808ba4 	muli	r2,zero,558
  808258:	00808ba4 	muli	r2,zero,558
  80825c:	00808ba4 	muli	r2,zero,558
  808260:	00808ba4 	muli	r2,zero,558
  808264:	00808ba4 	muli	r2,zero,558
  808268:	00808ba4 	muli	r2,zero,558
  80826c:	00808ba4 	muli	r2,zero,558
  808270:	00808918 	cmpnei	r2,zero,548
  808274:	00808ba4 	muli	r2,zero,558
  808278:	00808ba4 	muli	r2,zero,558
  80827c:	00808ba4 	muli	r2,zero,558
  808280:	00808ba4 	muli	r2,zero,558
  808284:	00808ba4 	muli	r2,zero,558
  808288:	00808ba4 	muli	r2,zero,558
  80828c:	00808ba4 	muli	r2,zero,558
  808290:	00808ba4 	muli	r2,zero,558
  808294:	00808ba4 	muli	r2,zero,558
  808298:	00808ba4 	muli	r2,zero,558
  80829c:	00808954 	movui	r2,549
  8082a0:	00808ba4 	muli	r2,zero,558
  8082a4:	00808ba4 	muli	r2,zero,558
  8082a8:	00808ba4 	muli	r2,zero,558
  8082ac:	00808ba4 	muli	r2,zero,558
  8082b0:	00808ba4 	muli	r2,zero,558
  8082b4:	008089b0 	cmpltui	r2,zero,550
  8082b8:	00808ba4 	muli	r2,zero,558
  8082bc:	00808ba4 	muli	r2,zero,558
  8082c0:	00808a24 	muli	r2,zero,552
  8082c4:	00808ba4 	muli	r2,zero,558
  8082c8:	00808ba4 	muli	r2,zero,558
  8082cc:	00808ba4 	muli	r2,zero,558
  8082d0:	00808ba4 	muli	r2,zero,558
  8082d4:	00808ba4 	muli	r2,zero,558
  8082d8:	00808ba4 	muli	r2,zero,558
  8082dc:	00808ba4 	muli	r2,zero,558
  8082e0:	00808ba4 	muli	r2,zero,558
  8082e4:	00808ba4 	muli	r2,zero,558
  8082e8:	00808ba4 	muli	r2,zero,558
  8082ec:	008087cc 	andi	r2,zero,543
  8082f0:	008087fc 	xorhi	r2,zero,543
  8082f4:	00808ba4 	muli	r2,zero,558
  8082f8:	00808ba4 	muli	r2,zero,558
  8082fc:	00808ba4 	muli	r2,zero,558
  808300:	00808b4c 	andi	r2,zero,557
  808304:	008087fc 	xorhi	r2,zero,543
  808308:	00808ba4 	muli	r2,zero,558
  80830c:	00808ba4 	muli	r2,zero,558
  808310:	008086a4 	muli	r2,zero,538
  808314:	00808ba4 	muli	r2,zero,558
  808318:	008086b8 	rdprs	r2,zero,538
  80831c:	008086f0 	cmpltui	r2,zero,539
  808320:	008083f0 	cmpltui	r2,zero,527
  808324:	00808698 	cmpnei	r2,zero,538
  808328:	00808ba4 	muli	r2,zero,558
  80832c:	00808a64 	muli	r2,zero,553
  808330:	00808ba4 	muli	r2,zero,558
  808334:	00808ab0 	cmpltui	r2,zero,554
  808338:	00808ba4 	muli	r2,zero,558
  80833c:	00808ba4 	muli	r2,zero,558
  808340:	00808774 	movhi	r2,541
  808344:	42000204 	addi	r8,r8,8
  808348:	d8c02417 	ldw	r3,144(sp)
  80834c:	1c07883a 	add	r3,r3,r16
  808350:	d8c02415 	stw	r3,144(sp)
  808354:	003f8c06 	br	808188 <__alt_mem_onchip_memory2+0xff7e8188>
  808358:	d9402017 	ldw	r5,128(sp)
  80835c:	d9002117 	ldw	r4,132(sp)
  808360:	0802a140 	call	802a14 <__swsetup_r>
  808364:	1003c11e 	bne	r2,zero,80926c <___vfiprintf_internal_r+0x1224>
  808368:	d9402017 	ldw	r5,128(sp)
  80836c:	00c00284 	movi	r3,10
  808370:	2880030b 	ldhu	r2,12(r5)
  808374:	1080068c 	andi	r2,r2,26
  808378:	10ff581e 	bne	r2,r3,8080dc <__alt_mem_onchip_memory2+0xff7e80dc>
  80837c:	d8c02017 	ldw	r3,128(sp)
  808380:	1880038f 	ldh	r2,14(r3)
  808384:	103f5516 	blt	r2,zero,8080dc <__alt_mem_onchip_memory2+0xff7e80dc>
  808388:	d9c02217 	ldw	r7,136(sp)
  80838c:	d9002117 	ldw	r4,132(sp)
  808390:	a80d883a 	mov	r6,r21
  808394:	180b883a 	mov	r5,r3
  808398:	08095700 	call	809570 <__sbprintf>
  80839c:	dfc03517 	ldw	ra,212(sp)
  8083a0:	df003417 	ldw	fp,208(sp)
  8083a4:	ddc03317 	ldw	r23,204(sp)
  8083a8:	dd803217 	ldw	r22,200(sp)
  8083ac:	dd403117 	ldw	r21,196(sp)
  8083b0:	dd003017 	ldw	r20,192(sp)
  8083b4:	dcc02f17 	ldw	r19,188(sp)
  8083b8:	dc802e17 	ldw	r18,184(sp)
  8083bc:	dc402d17 	ldw	r17,180(sp)
  8083c0:	dc002c17 	ldw	r16,176(sp)
  8083c4:	dec03604 	addi	sp,sp,216
  8083c8:	f800283a 	ret
  8083cc:	0804a200 	call	804a20 <__sinit>
  8083d0:	003f2f06 	br	808090 <__alt_mem_onchip_memory2+0xff7e8090>
  8083d4:	d8c02517 	ldw	r3,148(sp)
  8083d8:	d8802215 	stw	r2,136(sp)
  8083dc:	00c7c83a 	sub	r3,zero,r3
  8083e0:	d8c02515 	stw	r3,148(sp)
  8083e4:	8c400114 	ori	r17,r17,4
  8083e8:	b0c00007 	ldb	r3,0(r22)
  8083ec:	003f7306 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  8083f0:	00800c04 	movi	r2,48
  8083f4:	d9402217 	ldw	r5,136(sp)
  8083f8:	d8801d05 	stb	r2,116(sp)
  8083fc:	00801e04 	movi	r2,120
  808400:	d8801d45 	stb	r2,117(sp)
  808404:	d8001d85 	stb	zero,118(sp)
  808408:	b811883a 	mov	r8,r23
  80840c:	28c00104 	addi	r3,r5,4
  808410:	2cc00017 	ldw	r19,0(r5)
  808414:	0029883a 	mov	r20,zero
  808418:	88800094 	ori	r2,r17,2
  80841c:	80032516 	blt	r16,zero,8090b4 <___vfiprintf_internal_r+0x106c>
  808420:	00bfdfc4 	movi	r2,-129
  808424:	88a2703a 	and	r17,r17,r2
  808428:	d8c02215 	stw	r3,136(sp)
  80842c:	8c400094 	ori	r17,r17,2
  808430:	98032a1e 	bne	r19,zero,8090dc <___vfiprintf_internal_r+0x1094>
  808434:	00802074 	movhi	r2,129
  808438:	1081cb04 	addi	r2,r2,1836
  80843c:	d8802615 	stw	r2,152(sp)
  808440:	002b883a 	mov	r21,zero
  808444:	8001741e 	bne	r16,zero,808a18 <___vfiprintf_internal_r+0x9d0>
  808448:	0021883a 	mov	r16,zero
  80844c:	0029883a 	mov	r20,zero
  808450:	ddc01a04 	addi	r23,sp,104
  808454:	8027883a 	mov	r19,r16
  808458:	8500010e 	bge	r16,r20,808460 <___vfiprintf_internal_r+0x418>
  80845c:	a027883a 	mov	r19,r20
  808460:	ad403fcc 	andi	r21,r21,255
  808464:	ad40201c 	xori	r21,r21,128
  808468:	ad7fe004 	addi	r21,r21,-128
  80846c:	a8000126 	beq	r21,zero,808474 <___vfiprintf_internal_r+0x42c>
  808470:	9cc00044 	addi	r19,r19,1
  808474:	89c0008c 	andi	r7,r17,2
  808478:	38000126 	beq	r7,zero,808480 <___vfiprintf_internal_r+0x438>
  80847c:	9cc00084 	addi	r19,r19,2
  808480:	88c0210c 	andi	r3,r17,132
  808484:	1801dd1e 	bne	r3,zero,808bfc <___vfiprintf_internal_r+0xbb4>
  808488:	d9402517 	ldw	r5,148(sp)
  80848c:	2cebc83a 	sub	r21,r5,r19
  808490:	0541da0e 	bge	zero,r21,808bfc <___vfiprintf_internal_r+0xbb4>
  808494:	07000404 	movi	fp,16
  808498:	d8801c17 	ldw	r2,112(sp)
  80849c:	e543be0e 	bge	fp,r21,809398 <___vfiprintf_internal_r+0x1350>
  8084a0:	01402074 	movhi	r5,129
  8084a4:	29422f04 	addi	r5,r5,2236
  8084a8:	dc002715 	stw	r16,156(sp)
  8084ac:	d9801b17 	ldw	r6,108(sp)
  8084b0:	a821883a 	mov	r16,r21
  8084b4:	d9402315 	stw	r5,140(sp)
  8084b8:	028001c4 	movi	r10,7
  8084bc:	d9c02915 	stw	r7,164(sp)
  8084c0:	182b883a 	mov	r21,r3
  8084c4:	00000506 	br	8084dc <___vfiprintf_internal_r+0x494>
  8084c8:	31000084 	addi	r4,r6,2
  8084cc:	42000204 	addi	r8,r8,8
  8084d0:	180d883a 	mov	r6,r3
  8084d4:	843ffc04 	addi	r16,r16,-16
  8084d8:	e4000f0e 	bge	fp,r16,808518 <___vfiprintf_internal_r+0x4d0>
  8084dc:	01002074 	movhi	r4,129
  8084e0:	10800404 	addi	r2,r2,16
  8084e4:	30c00044 	addi	r3,r6,1
  8084e8:	21022f04 	addi	r4,r4,2236
  8084ec:	41000015 	stw	r4,0(r8)
  8084f0:	47000115 	stw	fp,4(r8)
  8084f4:	d8801c15 	stw	r2,112(sp)
  8084f8:	d8c01b15 	stw	r3,108(sp)
  8084fc:	50fff20e 	bge	r10,r3,8084c8 <__alt_mem_onchip_memory2+0xff7e84c8>
  808500:	1001b21e 	bne	r2,zero,808bcc <___vfiprintf_internal_r+0xb84>
  808504:	843ffc04 	addi	r16,r16,-16
  808508:	000d883a 	mov	r6,zero
  80850c:	01000044 	movi	r4,1
  808510:	d811883a 	mov	r8,sp
  808514:	e43ff116 	blt	fp,r16,8084dc <__alt_mem_onchip_memory2+0xff7e84dc>
  808518:	a807883a 	mov	r3,r21
  80851c:	d9c02917 	ldw	r7,164(sp)
  808520:	802b883a 	mov	r21,r16
  808524:	dc002717 	ldw	r16,156(sp)
  808528:	d9402317 	ldw	r5,140(sp)
  80852c:	a885883a 	add	r2,r21,r2
  808530:	45400115 	stw	r21,4(r8)
  808534:	41400015 	stw	r5,0(r8)
  808538:	d8801c15 	stw	r2,112(sp)
  80853c:	d9001b15 	stw	r4,108(sp)
  808540:	014001c4 	movi	r5,7
  808544:	29026216 	blt	r5,r4,808ed0 <___vfiprintf_internal_r+0xe88>
  808548:	d9801d87 	ldb	r6,118(sp)
  80854c:	42000204 	addi	r8,r8,8
  808550:	21400044 	addi	r5,r4,1
  808554:	3001ae1e 	bne	r6,zero,808c10 <___vfiprintf_internal_r+0xbc8>
  808558:	3801bb26 	beq	r7,zero,808c48 <___vfiprintf_internal_r+0xc00>
  80855c:	d9001d04 	addi	r4,sp,116
  808560:	10800084 	addi	r2,r2,2
  808564:	41000015 	stw	r4,0(r8)
  808568:	01000084 	movi	r4,2
  80856c:	41000115 	stw	r4,4(r8)
  808570:	d8801c15 	stw	r2,112(sp)
  808574:	d9401b15 	stw	r5,108(sp)
  808578:	010001c4 	movi	r4,7
  80857c:	2142680e 	bge	r4,r5,808f20 <___vfiprintf_internal_r+0xed8>
  808580:	1002b11e 	bne	r2,zero,809048 <___vfiprintf_internal_r+0x1000>
  808584:	01802004 	movi	r6,128
  808588:	01400044 	movi	r5,1
  80858c:	0009883a 	mov	r4,zero
  808590:	d811883a 	mov	r8,sp
  808594:	1981ae1e 	bne	r3,r6,808c50 <___vfiprintf_internal_r+0xc08>
  808598:	d8c02517 	ldw	r3,148(sp)
  80859c:	1cf9c83a 	sub	fp,r3,r19
  8085a0:	0701ab0e 	bge	zero,fp,808c50 <___vfiprintf_internal_r+0xc08>
  8085a4:	05400404 	movi	r21,16
  8085a8:	af03a90e 	bge	r21,fp,809450 <___vfiprintf_internal_r+0x1408>
  8085ac:	01402074 	movhi	r5,129
  8085b0:	29422b04 	addi	r5,r5,2220
  8085b4:	d9402315 	stw	r5,140(sp)
  8085b8:	01c001c4 	movi	r7,7
  8085bc:	00000506 	br	8085d4 <___vfiprintf_internal_r+0x58c>
  8085c0:	21800084 	addi	r6,r4,2
  8085c4:	42000204 	addi	r8,r8,8
  8085c8:	1809883a 	mov	r4,r3
  8085cc:	e73ffc04 	addi	fp,fp,-16
  8085d0:	af000d0e 	bge	r21,fp,808608 <___vfiprintf_internal_r+0x5c0>
  8085d4:	10800404 	addi	r2,r2,16
  8085d8:	20c00044 	addi	r3,r4,1
  8085dc:	44800015 	stw	r18,0(r8)
  8085e0:	45400115 	stw	r21,4(r8)
  8085e4:	d8801c15 	stw	r2,112(sp)
  8085e8:	d8c01b15 	stw	r3,108(sp)
  8085ec:	38fff40e 	bge	r7,r3,8085c0 <__alt_mem_onchip_memory2+0xff7e85c0>
  8085f0:	10022b1e 	bne	r2,zero,808ea0 <___vfiprintf_internal_r+0xe58>
  8085f4:	e73ffc04 	addi	fp,fp,-16
  8085f8:	01800044 	movi	r6,1
  8085fc:	0009883a 	mov	r4,zero
  808600:	d811883a 	mov	r8,sp
  808604:	af3ff316 	blt	r21,fp,8085d4 <__alt_mem_onchip_memory2+0xff7e85d4>
  808608:	d8c02317 	ldw	r3,140(sp)
  80860c:	1705883a 	add	r2,r2,fp
  808610:	47000115 	stw	fp,4(r8)
  808614:	40c00015 	stw	r3,0(r8)
  808618:	d8801c15 	stw	r2,112(sp)
  80861c:	d9801b15 	stw	r6,108(sp)
  808620:	00c001c4 	movi	r3,7
  808624:	19829416 	blt	r3,r6,809078 <___vfiprintf_internal_r+0x1030>
  808628:	8521c83a 	sub	r16,r16,r20
  80862c:	42000204 	addi	r8,r8,8
  808630:	31400044 	addi	r5,r6,1
  808634:	3009883a 	mov	r4,r6
  808638:	04018716 	blt	zero,r16,808c58 <___vfiprintf_internal_r+0xc10>
  80863c:	a085883a 	add	r2,r20,r2
  808640:	45c00015 	stw	r23,0(r8)
  808644:	45000115 	stw	r20,4(r8)
  808648:	d8801c15 	stw	r2,112(sp)
  80864c:	d9401b15 	stw	r5,108(sp)
  808650:	00c001c4 	movi	r3,7
  808654:	1941c20e 	bge	r3,r5,808d60 <___vfiprintf_internal_r+0xd18>
  808658:	1002531e 	bne	r2,zero,808fa8 <___vfiprintf_internal_r+0xf60>
  80865c:	d8001b15 	stw	zero,108(sp)
  808660:	8c40010c 	andi	r17,r17,4
  808664:	88023226 	beq	r17,zero,808f30 <___vfiprintf_internal_r+0xee8>
  808668:	d9002517 	ldw	r4,148(sp)
  80866c:	24e3c83a 	sub	r17,r4,r19
  808670:	04432916 	blt	zero,r17,809318 <___vfiprintf_internal_r+0x12d0>
  808674:	d8802517 	ldw	r2,148(sp)
  808678:	14c0010e 	bge	r2,r19,808680 <___vfiprintf_internal_r+0x638>
  80867c:	9805883a 	mov	r2,r19
  808680:	d8c02417 	ldw	r3,144(sp)
  808684:	1887883a 	add	r3,r3,r2
  808688:	d8c02415 	stw	r3,144(sp)
  80868c:	d8001b15 	stw	zero,108(sp)
  808690:	d811883a 	mov	r8,sp
  808694:	003ea006 	br	808118 <__alt_mem_onchip_memory2+0xff7e8118>
  808698:	8c400814 	ori	r17,r17,32
  80869c:	b0c00007 	ldb	r3,0(r22)
  8086a0:	003ec606 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  8086a4:	b0c00007 	ldb	r3,0(r22)
  8086a8:	00801b04 	movi	r2,108
  8086ac:	18832026 	beq	r3,r2,809330 <___vfiprintf_internal_r+0x12e8>
  8086b0:	8c400414 	ori	r17,r17,16
  8086b4:	003ec106 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  8086b8:	9cc03fcc 	andi	r19,r19,255
  8086bc:	b811883a 	mov	r8,r23
  8086c0:	9803981e 	bne	r19,zero,809524 <___vfiprintf_internal_r+0x14dc>
  8086c4:	8880080c 	andi	r2,r17,32
  8086c8:	1002be26 	beq	r2,zero,8091c4 <___vfiprintf_internal_r+0x117c>
  8086cc:	d9002217 	ldw	r4,136(sp)
  8086d0:	d9402417 	ldw	r5,144(sp)
  8086d4:	20800017 	ldw	r2,0(r4)
  8086d8:	2807d7fa 	srai	r3,r5,31
  8086dc:	21000104 	addi	r4,r4,4
  8086e0:	d9002215 	stw	r4,136(sp)
  8086e4:	11400015 	stw	r5,0(r2)
  8086e8:	10c00115 	stw	r3,4(r2)
  8086ec:	003e8a06 	br	808118 <__alt_mem_onchip_memory2+0xff7e8118>
  8086f0:	9cc03fcc 	andi	r19,r19,255
  8086f4:	b811883a 	mov	r8,r23
  8086f8:	9803871e 	bne	r19,zero,809518 <___vfiprintf_internal_r+0x14d0>
  8086fc:	8880080c 	andi	r2,r17,32
  808700:	10009a26 	beq	r2,zero,80896c <___vfiprintf_internal_r+0x924>
  808704:	d9002217 	ldw	r4,136(sp)
  808708:	d8001d85 	stb	zero,118(sp)
  80870c:	20800204 	addi	r2,r4,8
  808710:	24c00017 	ldw	r19,0(r4)
  808714:	25000117 	ldw	r20,4(r4)
  808718:	8002a416 	blt	r16,zero,8091ac <___vfiprintf_internal_r+0x1164>
  80871c:	013fdfc4 	movi	r4,-129
  808720:	9d06b03a 	or	r3,r19,r20
  808724:	d8802215 	stw	r2,136(sp)
  808728:	8922703a 	and	r17,r17,r4
  80872c:	18009b26 	beq	r3,zero,80899c <___vfiprintf_internal_r+0x954>
  808730:	002b883a 	mov	r21,zero
  808734:	ddc01a04 	addi	r23,sp,104
  808738:	9806d0fa 	srli	r3,r19,3
  80873c:	a008977a 	slli	r4,r20,29
  808740:	a028d0fa 	srli	r20,r20,3
  808744:	9cc001cc 	andi	r19,r19,7
  808748:	98800c04 	addi	r2,r19,48
  80874c:	bdffffc4 	addi	r23,r23,-1
  808750:	20e6b03a 	or	r19,r4,r3
  808754:	b8800005 	stb	r2,0(r23)
  808758:	9d06b03a 	or	r3,r19,r20
  80875c:	183ff61e 	bne	r3,zero,808738 <__alt_mem_onchip_memory2+0xff7e8738>
  808760:	88c0004c 	andi	r3,r17,1
  808764:	18021f1e 	bne	r3,zero,808fe4 <___vfiprintf_internal_r+0xf9c>
  808768:	d9401e17 	ldw	r5,120(sp)
  80876c:	2de9c83a 	sub	r20,r5,r23
  808770:	003f3806 	br	808454 <__alt_mem_onchip_memory2+0xff7e8454>
  808774:	9cc03fcc 	andi	r19,r19,255
  808778:	b811883a 	mov	r8,r23
  80877c:	98034f1e 	bne	r19,zero,8094bc <___vfiprintf_internal_r+0x1474>
  808780:	00802074 	movhi	r2,129
  808784:	1081cb04 	addi	r2,r2,1836
  808788:	d8802615 	stw	r2,152(sp)
  80878c:	8880080c 	andi	r2,r17,32
  808790:	1000ac26 	beq	r2,zero,808a44 <___vfiprintf_internal_r+0x9fc>
  808794:	d9002217 	ldw	r4,136(sp)
  808798:	24c00017 	ldw	r19,0(r4)
  80879c:	25000117 	ldw	r20,4(r4)
  8087a0:	21000204 	addi	r4,r4,8
  8087a4:	d9002215 	stw	r4,136(sp)
  8087a8:	8880004c 	andi	r2,r17,1
  8087ac:	1001e726 	beq	r2,zero,808f4c <___vfiprintf_internal_r+0xf04>
  8087b0:	9d04b03a 	or	r2,r19,r20
  8087b4:	10025c1e 	bne	r2,zero,809128 <___vfiprintf_internal_r+0x10e0>
  8087b8:	d8001d85 	stb	zero,118(sp)
  8087bc:	80024416 	blt	r16,zero,8090d0 <___vfiprintf_internal_r+0x1088>
  8087c0:	00bfdfc4 	movi	r2,-129
  8087c4:	88a2703a 	and	r17,r17,r2
  8087c8:	003f1d06 	br	808440 <__alt_mem_onchip_memory2+0xff7e8440>
  8087cc:	d8c02217 	ldw	r3,136(sp)
  8087d0:	04c00044 	movi	r19,1
  8087d4:	b811883a 	mov	r8,r23
  8087d8:	18800017 	ldw	r2,0(r3)
  8087dc:	18c00104 	addi	r3,r3,4
  8087e0:	d8001d85 	stb	zero,118(sp)
  8087e4:	d8801005 	stb	r2,64(sp)
  8087e8:	d8c02215 	stw	r3,136(sp)
  8087ec:	9829883a 	mov	r20,r19
  8087f0:	ddc01004 	addi	r23,sp,64
  8087f4:	0021883a 	mov	r16,zero
  8087f8:	003f1e06 	br	808474 <__alt_mem_onchip_memory2+0xff7e8474>
  8087fc:	9cc03fcc 	andi	r19,r19,255
  808800:	b811883a 	mov	r8,r23
  808804:	9803331e 	bne	r19,zero,8094d4 <___vfiprintf_internal_r+0x148c>
  808808:	8880080c 	andi	r2,r17,32
  80880c:	10004826 	beq	r2,zero,808930 <___vfiprintf_internal_r+0x8e8>
  808810:	d9002217 	ldw	r4,136(sp)
  808814:	20800117 	ldw	r2,4(r4)
  808818:	24c00017 	ldw	r19,0(r4)
  80881c:	21000204 	addi	r4,r4,8
  808820:	d9002215 	stw	r4,136(sp)
  808824:	1029883a 	mov	r20,r2
  808828:	10024c16 	blt	r2,zero,80915c <___vfiprintf_internal_r+0x1114>
  80882c:	dd401d83 	ldbu	r21,118(sp)
  808830:	80007116 	blt	r16,zero,8089f8 <___vfiprintf_internal_r+0x9b0>
  808834:	00ffdfc4 	movi	r3,-129
  808838:	9d04b03a 	or	r2,r19,r20
  80883c:	88e2703a 	and	r17,r17,r3
  808840:	1000d126 	beq	r2,zero,808b88 <___vfiprintf_internal_r+0xb40>
  808844:	a0023526 	beq	r20,zero,80911c <___vfiprintf_internal_r+0x10d4>
  808848:	ddc01a04 	addi	r23,sp,104
  80884c:	4039883a 	mov	fp,r8
  808850:	9809883a 	mov	r4,r19
  808854:	a00b883a 	mov	r5,r20
  808858:	01800284 	movi	r6,10
  80885c:	000f883a 	mov	r7,zero
  808860:	080a5740 	call	80a574 <__umoddi3>
  808864:	10800c04 	addi	r2,r2,48
  808868:	bdffffc4 	addi	r23,r23,-1
  80886c:	9809883a 	mov	r4,r19
  808870:	a00b883a 	mov	r5,r20
  808874:	b8800005 	stb	r2,0(r23)
  808878:	01800284 	movi	r6,10
  80887c:	000f883a 	mov	r7,zero
  808880:	0809f780 	call	809f78 <__udivdi3>
  808884:	1027883a 	mov	r19,r2
  808888:	10c4b03a 	or	r2,r2,r3
  80888c:	1829883a 	mov	r20,r3
  808890:	103fef1e 	bne	r2,zero,808850 <__alt_mem_onchip_memory2+0xff7e8850>
  808894:	d9001e17 	ldw	r4,120(sp)
  808898:	e011883a 	mov	r8,fp
  80889c:	25e9c83a 	sub	r20,r4,r23
  8088a0:	003eec06 	br	808454 <__alt_mem_onchip_memory2+0xff7e8454>
  8088a4:	d8802307 	ldb	r2,140(sp)
  8088a8:	1002361e 	bne	r2,zero,809184 <___vfiprintf_internal_r+0x113c>
  8088ac:	00c00804 	movi	r3,32
  8088b0:	d8c02305 	stb	r3,140(sp)
  8088b4:	04c00044 	movi	r19,1
  8088b8:	b0c00007 	ldb	r3,0(r22)
  8088bc:	003e3f06 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  8088c0:	8c400054 	ori	r17,r17,1
  8088c4:	b0c00007 	ldb	r3,0(r22)
  8088c8:	003e3c06 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  8088cc:	8c402014 	ori	r17,r17,128
  8088d0:	b0c00007 	ldb	r3,0(r22)
  8088d4:	003e3906 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  8088d8:	dc002715 	stw	r16,156(sp)
  8088dc:	d8002515 	stw	zero,148(sp)
  8088e0:	1f3ff404 	addi	fp,r3,-48
  8088e4:	0009883a 	mov	r4,zero
  8088e8:	b021883a 	mov	r16,r22
  8088ec:	01400284 	movi	r5,10
  8088f0:	080acec0 	call	80acec <__mulsi3>
  8088f4:	80c00007 	ldb	r3,0(r16)
  8088f8:	e089883a 	add	r4,fp,r2
  8088fc:	b5800044 	addi	r22,r22,1
  808900:	1f3ff404 	addi	fp,r3,-48
  808904:	b021883a 	mov	r16,r22
  808908:	af3ff82e 	bgeu	r21,fp,8088ec <__alt_mem_onchip_memory2+0xff7e88ec>
  80890c:	d9002515 	stw	r4,148(sp)
  808910:	dc002717 	ldw	r16,156(sp)
  808914:	003e2a06 	br	8081c0 <__alt_mem_onchip_memory2+0xff7e81c0>
  808918:	9cc03fcc 	andi	r19,r19,255
  80891c:	b811883a 	mov	r8,r23
  808920:	9802e91e 	bne	r19,zero,8094c8 <___vfiprintf_internal_r+0x1480>
  808924:	8c400414 	ori	r17,r17,16
  808928:	8880080c 	andi	r2,r17,32
  80892c:	103fb81e 	bne	r2,zero,808810 <__alt_mem_onchip_memory2+0xff7e8810>
  808930:	8880040c 	andi	r2,r17,16
  808934:	10022e26 	beq	r2,zero,8091f0 <___vfiprintf_internal_r+0x11a8>
  808938:	d9402217 	ldw	r5,136(sp)
  80893c:	2cc00017 	ldw	r19,0(r5)
  808940:	29400104 	addi	r5,r5,4
  808944:	d9402215 	stw	r5,136(sp)
  808948:	9829d7fa 	srai	r20,r19,31
  80894c:	a005883a 	mov	r2,r20
  808950:	003fb506 	br	808828 <__alt_mem_onchip_memory2+0xff7e8828>
  808954:	9cc03fcc 	andi	r19,r19,255
  808958:	b811883a 	mov	r8,r23
  80895c:	9802fa1e 	bne	r19,zero,809548 <___vfiprintf_internal_r+0x1500>
  808960:	8c400414 	ori	r17,r17,16
  808964:	8880080c 	andi	r2,r17,32
  808968:	103f661e 	bne	r2,zero,808704 <__alt_mem_onchip_memory2+0xff7e8704>
  80896c:	8880040c 	andi	r2,r17,16
  808970:	10020626 	beq	r2,zero,80918c <___vfiprintf_internal_r+0x1144>
  808974:	d9402217 	ldw	r5,136(sp)
  808978:	d8001d85 	stb	zero,118(sp)
  80897c:	0029883a 	mov	r20,zero
  808980:	28800104 	addi	r2,r5,4
  808984:	2cc00017 	ldw	r19,0(r5)
  808988:	80020816 	blt	r16,zero,8091ac <___vfiprintf_internal_r+0x1164>
  80898c:	00ffdfc4 	movi	r3,-129
  808990:	d8802215 	stw	r2,136(sp)
  808994:	88e2703a 	and	r17,r17,r3
  808998:	983f651e 	bne	r19,zero,808730 <__alt_mem_onchip_memory2+0xff7e8730>
  80899c:	002b883a 	mov	r21,zero
  8089a0:	8002cf26 	beq	r16,zero,8094e0 <___vfiprintf_internal_r+0x1498>
  8089a4:	0027883a 	mov	r19,zero
  8089a8:	0029883a 	mov	r20,zero
  8089ac:	003f6106 	br	808734 <__alt_mem_onchip_memory2+0xff7e8734>
  8089b0:	9cc03fcc 	andi	r19,r19,255
  8089b4:	b811883a 	mov	r8,r23
  8089b8:	9802e01e 	bne	r19,zero,80953c <___vfiprintf_internal_r+0x14f4>
  8089bc:	8c400414 	ori	r17,r17,16
  8089c0:	8880080c 	andi	r2,r17,32
  8089c4:	1000641e 	bne	r2,zero,808b58 <___vfiprintf_internal_r+0xb10>
  8089c8:	8880040c 	andi	r2,r17,16
  8089cc:	1001c81e 	bne	r2,zero,8090f0 <___vfiprintf_internal_r+0x10a8>
  8089d0:	8880100c 	andi	r2,r17,64
  8089d4:	d8001d85 	stb	zero,118(sp)
  8089d8:	1002281e 	bne	r2,zero,80927c <___vfiprintf_internal_r+0x1234>
  8089dc:	d9002217 	ldw	r4,136(sp)
  8089e0:	0029883a 	mov	r20,zero
  8089e4:	20800104 	addi	r2,r4,4
  8089e8:	24c00017 	ldw	r19,0(r4)
  8089ec:	8001c60e 	bge	r16,zero,809108 <___vfiprintf_internal_r+0x10c0>
  8089f0:	d8802215 	stw	r2,136(sp)
  8089f4:	002b883a 	mov	r21,zero
  8089f8:	9d04b03a 	or	r2,r19,r20
  8089fc:	103f911e 	bne	r2,zero,808844 <__alt_mem_onchip_memory2+0xff7e8844>
  808a00:	00800044 	movi	r2,1
  808a04:	10803fcc 	andi	r2,r2,255
  808a08:	00c00044 	movi	r3,1
  808a0c:	10c05f26 	beq	r2,r3,808b8c <___vfiprintf_internal_r+0xb44>
  808a10:	00c00084 	movi	r3,2
  808a14:	10ffe31e 	bne	r2,r3,8089a4 <__alt_mem_onchip_memory2+0xff7e89a4>
  808a18:	0027883a 	mov	r19,zero
  808a1c:	0029883a 	mov	r20,zero
  808a20:	00015106 	br	808f68 <___vfiprintf_internal_r+0xf20>
  808a24:	9cc03fcc 	andi	r19,r19,255
  808a28:	b811883a 	mov	r8,r23
  808a2c:	9802c01e 	bne	r19,zero,809530 <___vfiprintf_internal_r+0x14e8>
  808a30:	01402074 	movhi	r5,129
  808a34:	2941c604 	addi	r5,r5,1816
  808a38:	d9402615 	stw	r5,152(sp)
  808a3c:	8880080c 	andi	r2,r17,32
  808a40:	103f541e 	bne	r2,zero,808794 <__alt_mem_onchip_memory2+0xff7e8794>
  808a44:	8880040c 	andi	r2,r17,16
  808a48:	1001f226 	beq	r2,zero,809214 <___vfiprintf_internal_r+0x11cc>
  808a4c:	d9402217 	ldw	r5,136(sp)
  808a50:	0029883a 	mov	r20,zero
  808a54:	2cc00017 	ldw	r19,0(r5)
  808a58:	29400104 	addi	r5,r5,4
  808a5c:	d9402215 	stw	r5,136(sp)
  808a60:	003f5106 	br	8087a8 <__alt_mem_onchip_memory2+0xff7e87a8>
  808a64:	d8c02217 	ldw	r3,136(sp)
  808a68:	b811883a 	mov	r8,r23
  808a6c:	d8001d85 	stb	zero,118(sp)
  808a70:	1dc00017 	ldw	r23,0(r3)
  808a74:	1f000104 	addi	fp,r3,4
  808a78:	b8025926 	beq	r23,zero,8093e0 <___vfiprintf_internal_r+0x1398>
  808a7c:	80023316 	blt	r16,zero,80934c <___vfiprintf_internal_r+0x1304>
  808a80:	800d883a 	mov	r6,r16
  808a84:	000b883a 	mov	r5,zero
  808a88:	b809883a 	mov	r4,r23
  808a8c:	da002a15 	stw	r8,168(sp)
  808a90:	0805f980 	call	805f98 <memchr>
  808a94:	da002a17 	ldw	r8,168(sp)
  808a98:	10026826 	beq	r2,zero,80943c <___vfiprintf_internal_r+0x13f4>
  808a9c:	15e9c83a 	sub	r20,r2,r23
  808aa0:	dd401d83 	ldbu	r21,118(sp)
  808aa4:	df002215 	stw	fp,136(sp)
  808aa8:	0021883a 	mov	r16,zero
  808aac:	003e6906 	br	808454 <__alt_mem_onchip_memory2+0xff7e8454>
  808ab0:	9cc03fcc 	andi	r19,r19,255
  808ab4:	b811883a 	mov	r8,r23
  808ab8:	983fc126 	beq	r19,zero,8089c0 <__alt_mem_onchip_memory2+0xff7e89c0>
  808abc:	d8c02303 	ldbu	r3,140(sp)
  808ac0:	d8c01d85 	stb	r3,118(sp)
  808ac4:	003fbe06 	br	8089c0 <__alt_mem_onchip_memory2+0xff7e89c0>
  808ac8:	d9002217 	ldw	r4,136(sp)
  808acc:	d9402217 	ldw	r5,136(sp)
  808ad0:	21000017 	ldw	r4,0(r4)
  808ad4:	28800104 	addi	r2,r5,4
  808ad8:	d9002515 	stw	r4,148(sp)
  808adc:	203e3d16 	blt	r4,zero,8083d4 <__alt_mem_onchip_memory2+0xff7e83d4>
  808ae0:	d8802215 	stw	r2,136(sp)
  808ae4:	b0c00007 	ldb	r3,0(r22)
  808ae8:	003db406 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  808aec:	00c00ac4 	movi	r3,43
  808af0:	d8c02305 	stb	r3,140(sp)
  808af4:	04c00044 	movi	r19,1
  808af8:	b0c00007 	ldb	r3,0(r22)
  808afc:	003daf06 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  808b00:	b0c00007 	ldb	r3,0(r22)
  808b04:	01000a84 	movi	r4,42
  808b08:	b4000044 	addi	r16,r22,1
  808b0c:	19025e26 	beq	r3,r4,809488 <___vfiprintf_internal_r+0x1440>
  808b10:	1f3ff404 	addi	fp,r3,-48
  808b14:	0009883a 	mov	r4,zero
  808b18:	af025236 	bltu	r21,fp,809464 <___vfiprintf_internal_r+0x141c>
  808b1c:	01400284 	movi	r5,10
  808b20:	080acec0 	call	80acec <__mulsi3>
  808b24:	80c00007 	ldb	r3,0(r16)
  808b28:	1709883a 	add	r4,r2,fp
  808b2c:	85800044 	addi	r22,r16,1
  808b30:	1f3ff404 	addi	fp,r3,-48
  808b34:	b021883a 	mov	r16,r22
  808b38:	af3ff82e 	bgeu	r21,fp,808b1c <__alt_mem_onchip_memory2+0xff7e8b1c>
  808b3c:	2021883a 	mov	r16,r4
  808b40:	203d9f0e 	bge	r4,zero,8081c0 <__alt_mem_onchip_memory2+0xff7e81c0>
  808b44:	043fffc4 	movi	r16,-1
  808b48:	003d9d06 	br	8081c0 <__alt_mem_onchip_memory2+0xff7e81c0>
  808b4c:	8c401014 	ori	r17,r17,64
  808b50:	b0c00007 	ldb	r3,0(r22)
  808b54:	003d9906 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  808b58:	d9002217 	ldw	r4,136(sp)
  808b5c:	d8001d85 	stb	zero,118(sp)
  808b60:	20c00204 	addi	r3,r4,8
  808b64:	24c00017 	ldw	r19,0(r4)
  808b68:	25000117 	ldw	r20,4(r4)
  808b6c:	8001e716 	blt	r16,zero,80930c <___vfiprintf_internal_r+0x12c4>
  808b70:	013fdfc4 	movi	r4,-129
  808b74:	9d04b03a 	or	r2,r19,r20
  808b78:	d8c02215 	stw	r3,136(sp)
  808b7c:	8922703a 	and	r17,r17,r4
  808b80:	002b883a 	mov	r21,zero
  808b84:	103f2f1e 	bne	r2,zero,808844 <__alt_mem_onchip_memory2+0xff7e8844>
  808b88:	803e2f26 	beq	r16,zero,808448 <__alt_mem_onchip_memory2+0xff7e8448>
  808b8c:	0027883a 	mov	r19,zero
  808b90:	9cc00c04 	addi	r19,r19,48
  808b94:	dcc019c5 	stb	r19,103(sp)
  808b98:	dd002817 	ldw	r20,160(sp)
  808b9c:	ddc019c4 	addi	r23,sp,103
  808ba0:	003e2c06 	br	808454 <__alt_mem_onchip_memory2+0xff7e8454>
  808ba4:	9cc03fcc 	andi	r19,r19,255
  808ba8:	b811883a 	mov	r8,r23
  808bac:	9802571e 	bne	r19,zero,80950c <___vfiprintf_internal_r+0x14c4>
  808bb0:	18005726 	beq	r3,zero,808d10 <___vfiprintf_internal_r+0xcc8>
  808bb4:	04c00044 	movi	r19,1
  808bb8:	d8c01005 	stb	r3,64(sp)
  808bbc:	d8001d85 	stb	zero,118(sp)
  808bc0:	9829883a 	mov	r20,r19
  808bc4:	ddc01004 	addi	r23,sp,64
  808bc8:	003f0a06 	br	8087f4 <__alt_mem_onchip_memory2+0xff7e87f4>
  808bcc:	d9402017 	ldw	r5,128(sp)
  808bd0:	d9002117 	ldw	r4,132(sp)
  808bd4:	d9801a04 	addi	r6,sp,104
  808bd8:	da802a15 	stw	r10,168(sp)
  808bdc:	0807f340 	call	807f34 <__sprint_r.part.0>
  808be0:	da802a17 	ldw	r10,168(sp)
  808be4:	1000501e 	bne	r2,zero,808d28 <___vfiprintf_internal_r+0xce0>
  808be8:	d9801b17 	ldw	r6,108(sp)
  808bec:	d8801c17 	ldw	r2,112(sp)
  808bf0:	d811883a 	mov	r8,sp
  808bf4:	31000044 	addi	r4,r6,1
  808bf8:	003e3606 	br	8084d4 <__alt_mem_onchip_memory2+0xff7e84d4>
  808bfc:	d9001b17 	ldw	r4,108(sp)
  808c00:	d8801c17 	ldw	r2,112(sp)
  808c04:	21400044 	addi	r5,r4,1
  808c08:	d9801d87 	ldb	r6,118(sp)
  808c0c:	303e5226 	beq	r6,zero,808558 <__alt_mem_onchip_memory2+0xff7e8558>
  808c10:	01800044 	movi	r6,1
  808c14:	d9001d84 	addi	r4,sp,118
  808c18:	1185883a 	add	r2,r2,r6
  808c1c:	41000015 	stw	r4,0(r8)
  808c20:	41800115 	stw	r6,4(r8)
  808c24:	d8801c15 	stw	r2,112(sp)
  808c28:	d9401b15 	stw	r5,108(sp)
  808c2c:	010001c4 	movi	r4,7
  808c30:	2140b00e 	bge	r4,r5,808ef4 <___vfiprintf_internal_r+0xeac>
  808c34:	1000f61e 	bne	r2,zero,809010 <___vfiprintf_internal_r+0xfc8>
  808c38:	3800b31e 	bne	r7,zero,808f08 <___vfiprintf_internal_r+0xec0>
  808c3c:	0009883a 	mov	r4,zero
  808c40:	300b883a 	mov	r5,r6
  808c44:	d811883a 	mov	r8,sp
  808c48:	01802004 	movi	r6,128
  808c4c:	19be5226 	beq	r3,r6,808598 <__alt_mem_onchip_memory2+0xff7e8598>
  808c50:	8521c83a 	sub	r16,r16,r20
  808c54:	043e790e 	bge	zero,r16,80863c <__alt_mem_onchip_memory2+0xff7e863c>
  808c58:	05400404 	movi	r21,16
  808c5c:	ac01b00e 	bge	r21,r16,809320 <___vfiprintf_internal_r+0x12d8>
  808c60:	01402074 	movhi	r5,129
  808c64:	29422b04 	addi	r5,r5,2220
  808c68:	d9402315 	stw	r5,140(sp)
  808c6c:	070001c4 	movi	fp,7
  808c70:	00000506 	br	808c88 <___vfiprintf_internal_r+0xc40>
  808c74:	21400084 	addi	r5,r4,2
  808c78:	42000204 	addi	r8,r8,8
  808c7c:	1809883a 	mov	r4,r3
  808c80:	843ffc04 	addi	r16,r16,-16
  808c84:	ac000d0e 	bge	r21,r16,808cbc <___vfiprintf_internal_r+0xc74>
  808c88:	10800404 	addi	r2,r2,16
  808c8c:	20c00044 	addi	r3,r4,1
  808c90:	44800015 	stw	r18,0(r8)
  808c94:	45400115 	stw	r21,4(r8)
  808c98:	d8801c15 	stw	r2,112(sp)
  808c9c:	d8c01b15 	stw	r3,108(sp)
  808ca0:	e0fff40e 	bge	fp,r3,808c74 <__alt_mem_onchip_memory2+0xff7e8c74>
  808ca4:	1000101e 	bne	r2,zero,808ce8 <___vfiprintf_internal_r+0xca0>
  808ca8:	843ffc04 	addi	r16,r16,-16
  808cac:	01400044 	movi	r5,1
  808cb0:	0009883a 	mov	r4,zero
  808cb4:	d811883a 	mov	r8,sp
  808cb8:	ac3ff316 	blt	r21,r16,808c88 <__alt_mem_onchip_memory2+0xff7e8c88>
  808cbc:	d8c02317 	ldw	r3,140(sp)
  808cc0:	1405883a 	add	r2,r2,r16
  808cc4:	44000115 	stw	r16,4(r8)
  808cc8:	40c00015 	stw	r3,0(r8)
  808ccc:	d8801c15 	stw	r2,112(sp)
  808cd0:	d9401b15 	stw	r5,108(sp)
  808cd4:	00c001c4 	movi	r3,7
  808cd8:	19401916 	blt	r3,r5,808d40 <___vfiprintf_internal_r+0xcf8>
  808cdc:	42000204 	addi	r8,r8,8
  808ce0:	29400044 	addi	r5,r5,1
  808ce4:	003e5506 	br	80863c <__alt_mem_onchip_memory2+0xff7e863c>
  808ce8:	d9402017 	ldw	r5,128(sp)
  808cec:	d9002117 	ldw	r4,132(sp)
  808cf0:	d9801a04 	addi	r6,sp,104
  808cf4:	0807f340 	call	807f34 <__sprint_r.part.0>
  808cf8:	10000b1e 	bne	r2,zero,808d28 <___vfiprintf_internal_r+0xce0>
  808cfc:	d9001b17 	ldw	r4,108(sp)
  808d00:	d8801c17 	ldw	r2,112(sp)
  808d04:	d811883a 	mov	r8,sp
  808d08:	21400044 	addi	r5,r4,1
  808d0c:	003fdc06 	br	808c80 <__alt_mem_onchip_memory2+0xff7e8c80>
  808d10:	d8801c17 	ldw	r2,112(sp)
  808d14:	10000426 	beq	r2,zero,808d28 <___vfiprintf_internal_r+0xce0>
  808d18:	d9402017 	ldw	r5,128(sp)
  808d1c:	d9002117 	ldw	r4,132(sp)
  808d20:	d9801a04 	addi	r6,sp,104
  808d24:	0807f340 	call	807f34 <__sprint_r.part.0>
  808d28:	d9402017 	ldw	r5,128(sp)
  808d2c:	2880030b 	ldhu	r2,12(r5)
  808d30:	1080100c 	andi	r2,r2,64
  808d34:	10014d1e 	bne	r2,zero,80926c <___vfiprintf_internal_r+0x1224>
  808d38:	d8802417 	ldw	r2,144(sp)
  808d3c:	003d9706 	br	80839c <__alt_mem_onchip_memory2+0xff7e839c>
  808d40:	1000d21e 	bne	r2,zero,80908c <___vfiprintf_internal_r+0x1044>
  808d44:	00c00044 	movi	r3,1
  808d48:	a005883a 	mov	r2,r20
  808d4c:	ddc00015 	stw	r23,0(sp)
  808d50:	dd000115 	stw	r20,4(sp)
  808d54:	dd001c15 	stw	r20,112(sp)
  808d58:	d8c01b15 	stw	r3,108(sp)
  808d5c:	d811883a 	mov	r8,sp
  808d60:	42000204 	addi	r8,r8,8
  808d64:	8c40010c 	andi	r17,r17,4
  808d68:	88004026 	beq	r17,zero,808e6c <___vfiprintf_internal_r+0xe24>
  808d6c:	d9002517 	ldw	r4,148(sp)
  808d70:	24e3c83a 	sub	r17,r4,r19
  808d74:	04403d0e 	bge	zero,r17,808e6c <___vfiprintf_internal_r+0xe24>
  808d78:	04000404 	movi	r16,16
  808d7c:	8441a90e 	bge	r16,r17,809424 <___vfiprintf_internal_r+0x13dc>
  808d80:	00c02074 	movhi	r3,129
  808d84:	18c22f04 	addi	r3,r3,2236
  808d88:	d9001b17 	ldw	r4,108(sp)
  808d8c:	d8c02315 	stw	r3,140(sp)
  808d90:	050001c4 	movi	r20,7
  808d94:	dd402117 	ldw	r21,132(sp)
  808d98:	ddc02017 	ldw	r23,128(sp)
  808d9c:	00000506 	br	808db4 <___vfiprintf_internal_r+0xd6c>
  808da0:	21400084 	addi	r5,r4,2
  808da4:	42000204 	addi	r8,r8,8
  808da8:	1809883a 	mov	r4,r3
  808dac:	8c7ffc04 	addi	r17,r17,-16
  808db0:	84400f0e 	bge	r16,r17,808df0 <___vfiprintf_internal_r+0xda8>
  808db4:	01402074 	movhi	r5,129
  808db8:	10800404 	addi	r2,r2,16
  808dbc:	20c00044 	addi	r3,r4,1
  808dc0:	29422f04 	addi	r5,r5,2236
  808dc4:	41400015 	stw	r5,0(r8)
  808dc8:	44000115 	stw	r16,4(r8)
  808dcc:	d8801c15 	stw	r2,112(sp)
  808dd0:	d8c01b15 	stw	r3,108(sp)
  808dd4:	a0fff20e 	bge	r20,r3,808da0 <__alt_mem_onchip_memory2+0xff7e8da0>
  808dd8:	1000141e 	bne	r2,zero,808e2c <___vfiprintf_internal_r+0xde4>
  808ddc:	8c7ffc04 	addi	r17,r17,-16
  808de0:	01400044 	movi	r5,1
  808de4:	0009883a 	mov	r4,zero
  808de8:	d811883a 	mov	r8,sp
  808dec:	847ff116 	blt	r16,r17,808db4 <__alt_mem_onchip_memory2+0xff7e8db4>
  808df0:	d8c02317 	ldw	r3,140(sp)
  808df4:	1445883a 	add	r2,r2,r17
  808df8:	44400115 	stw	r17,4(r8)
  808dfc:	40c00015 	stw	r3,0(r8)
  808e00:	d8801c15 	stw	r2,112(sp)
  808e04:	d9401b15 	stw	r5,108(sp)
  808e08:	00c001c4 	movi	r3,7
  808e0c:	1940170e 	bge	r3,r5,808e6c <___vfiprintf_internal_r+0xe24>
  808e10:	1000101e 	bne	r2,zero,808e54 <___vfiprintf_internal_r+0xe0c>
  808e14:	d8802517 	ldw	r2,148(sp)
  808e18:	14c11616 	blt	r2,r19,809274 <___vfiprintf_internal_r+0x122c>
  808e1c:	d9002417 	ldw	r4,144(sp)
  808e20:	2089883a 	add	r4,r4,r2
  808e24:	d9002415 	stw	r4,144(sp)
  808e28:	003e1806 	br	80868c <__alt_mem_onchip_memory2+0xff7e868c>
  808e2c:	d9801a04 	addi	r6,sp,104
  808e30:	b80b883a 	mov	r5,r23
  808e34:	a809883a 	mov	r4,r21
  808e38:	0807f340 	call	807f34 <__sprint_r.part.0>
  808e3c:	103fba1e 	bne	r2,zero,808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  808e40:	d9001b17 	ldw	r4,108(sp)
  808e44:	d8801c17 	ldw	r2,112(sp)
  808e48:	d811883a 	mov	r8,sp
  808e4c:	21400044 	addi	r5,r4,1
  808e50:	003fd606 	br	808dac <__alt_mem_onchip_memory2+0xff7e8dac>
  808e54:	d9402017 	ldw	r5,128(sp)
  808e58:	d9002117 	ldw	r4,132(sp)
  808e5c:	d9801a04 	addi	r6,sp,104
  808e60:	0807f340 	call	807f34 <__sprint_r.part.0>
  808e64:	103fb01e 	bne	r2,zero,808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  808e68:	d8801c17 	ldw	r2,112(sp)
  808e6c:	d8c02517 	ldw	r3,148(sp)
  808e70:	1cc0010e 	bge	r3,r19,808e78 <___vfiprintf_internal_r+0xe30>
  808e74:	9807883a 	mov	r3,r19
  808e78:	d9002417 	ldw	r4,144(sp)
  808e7c:	20c9883a 	add	r4,r4,r3
  808e80:	d9002415 	stw	r4,144(sp)
  808e84:	103e0126 	beq	r2,zero,80868c <__alt_mem_onchip_memory2+0xff7e868c>
  808e88:	d9402017 	ldw	r5,128(sp)
  808e8c:	d9002117 	ldw	r4,132(sp)
  808e90:	d9801a04 	addi	r6,sp,104
  808e94:	0807f340 	call	807f34 <__sprint_r.part.0>
  808e98:	103dfc26 	beq	r2,zero,80868c <__alt_mem_onchip_memory2+0xff7e868c>
  808e9c:	003fa206 	br	808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  808ea0:	d9402017 	ldw	r5,128(sp)
  808ea4:	d9002117 	ldw	r4,132(sp)
  808ea8:	d9801a04 	addi	r6,sp,104
  808eac:	d9c02b15 	stw	r7,172(sp)
  808eb0:	0807f340 	call	807f34 <__sprint_r.part.0>
  808eb4:	d9c02b17 	ldw	r7,172(sp)
  808eb8:	103f9b1e 	bne	r2,zero,808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  808ebc:	d9001b17 	ldw	r4,108(sp)
  808ec0:	d8801c17 	ldw	r2,112(sp)
  808ec4:	d811883a 	mov	r8,sp
  808ec8:	21800044 	addi	r6,r4,1
  808ecc:	003dbf06 	br	8085cc <__alt_mem_onchip_memory2+0xff7e85cc>
  808ed0:	1000d81e 	bne	r2,zero,809234 <___vfiprintf_internal_r+0x11ec>
  808ed4:	d9001d87 	ldb	r4,118(sp)
  808ed8:	20000a26 	beq	r4,zero,808f04 <___vfiprintf_internal_r+0xebc>
  808edc:	00800044 	movi	r2,1
  808ee0:	d9001d84 	addi	r4,sp,118
  808ee4:	100b883a 	mov	r5,r2
  808ee8:	d9000015 	stw	r4,0(sp)
  808eec:	d8800115 	stw	r2,4(sp)
  808ef0:	d811883a 	mov	r8,sp
  808ef4:	2809883a 	mov	r4,r5
  808ef8:	42000204 	addi	r8,r8,8
  808efc:	29400044 	addi	r5,r5,1
  808f00:	003d9506 	br	808558 <__alt_mem_onchip_memory2+0xff7e8558>
  808f04:	3800fd26 	beq	r7,zero,8092fc <___vfiprintf_internal_r+0x12b4>
  808f08:	00800084 	movi	r2,2
  808f0c:	d9001d04 	addi	r4,sp,116
  808f10:	d9000015 	stw	r4,0(sp)
  808f14:	d8800115 	stw	r2,4(sp)
  808f18:	01400044 	movi	r5,1
  808f1c:	d811883a 	mov	r8,sp
  808f20:	2809883a 	mov	r4,r5
  808f24:	42000204 	addi	r8,r8,8
  808f28:	29400044 	addi	r5,r5,1
  808f2c:	003f4606 	br	808c48 <__alt_mem_onchip_memory2+0xff7e8c48>
  808f30:	d8802517 	ldw	r2,148(sp)
  808f34:	14c0010e 	bge	r2,r19,808f3c <___vfiprintf_internal_r+0xef4>
  808f38:	9805883a 	mov	r2,r19
  808f3c:	d9402417 	ldw	r5,144(sp)
  808f40:	288b883a 	add	r5,r5,r2
  808f44:	d9402415 	stw	r5,144(sp)
  808f48:	003dd006 	br	80868c <__alt_mem_onchip_memory2+0xff7e868c>
  808f4c:	d8001d85 	stb	zero,118(sp)
  808f50:	80005d16 	blt	r16,zero,8090c8 <___vfiprintf_internal_r+0x1080>
  808f54:	00ffdfc4 	movi	r3,-129
  808f58:	9d04b03a 	or	r2,r19,r20
  808f5c:	88e2703a 	and	r17,r17,r3
  808f60:	103d3726 	beq	r2,zero,808440 <__alt_mem_onchip_memory2+0xff7e8440>
  808f64:	002b883a 	mov	r21,zero
  808f68:	d9002617 	ldw	r4,152(sp)
  808f6c:	ddc01a04 	addi	r23,sp,104
  808f70:	988003cc 	andi	r2,r19,15
  808f74:	a006973a 	slli	r3,r20,28
  808f78:	2085883a 	add	r2,r4,r2
  808f7c:	9826d13a 	srli	r19,r19,4
  808f80:	10800003 	ldbu	r2,0(r2)
  808f84:	a028d13a 	srli	r20,r20,4
  808f88:	bdffffc4 	addi	r23,r23,-1
  808f8c:	1ce6b03a 	or	r19,r3,r19
  808f90:	b8800005 	stb	r2,0(r23)
  808f94:	9d04b03a 	or	r2,r19,r20
  808f98:	103ff51e 	bne	r2,zero,808f70 <__alt_mem_onchip_memory2+0xff7e8f70>
  808f9c:	d8801e17 	ldw	r2,120(sp)
  808fa0:	15e9c83a 	sub	r20,r2,r23
  808fa4:	003d2b06 	br	808454 <__alt_mem_onchip_memory2+0xff7e8454>
  808fa8:	d9402017 	ldw	r5,128(sp)
  808fac:	d9002117 	ldw	r4,132(sp)
  808fb0:	d9801a04 	addi	r6,sp,104
  808fb4:	0807f340 	call	807f34 <__sprint_r.part.0>
  808fb8:	103f5b1e 	bne	r2,zero,808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  808fbc:	d8801c17 	ldw	r2,112(sp)
  808fc0:	d811883a 	mov	r8,sp
  808fc4:	003f6706 	br	808d64 <__alt_mem_onchip_memory2+0xff7e8d64>
  808fc8:	d9402017 	ldw	r5,128(sp)
  808fcc:	d9002117 	ldw	r4,132(sp)
  808fd0:	d9801a04 	addi	r6,sp,104
  808fd4:	0807f340 	call	807f34 <__sprint_r.part.0>
  808fd8:	103f531e 	bne	r2,zero,808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  808fdc:	d811883a 	mov	r8,sp
  808fe0:	003cd906 	br	808348 <__alt_mem_onchip_memory2+0xff7e8348>
  808fe4:	10803fcc 	andi	r2,r2,255
  808fe8:	1080201c 	xori	r2,r2,128
  808fec:	10bfe004 	addi	r2,r2,-128
  808ff0:	00c00c04 	movi	r3,48
  808ff4:	10ffe926 	beq	r2,r3,808f9c <__alt_mem_onchip_memory2+0xff7e8f9c>
  808ff8:	b8ffffc5 	stb	r3,-1(r23)
  808ffc:	d8c01e17 	ldw	r3,120(sp)
  809000:	b8bfffc4 	addi	r2,r23,-1
  809004:	102f883a 	mov	r23,r2
  809008:	18a9c83a 	sub	r20,r3,r2
  80900c:	003d1106 	br	808454 <__alt_mem_onchip_memory2+0xff7e8454>
  809010:	d9402017 	ldw	r5,128(sp)
  809014:	d9002117 	ldw	r4,132(sp)
  809018:	d9801a04 	addi	r6,sp,104
  80901c:	d8c02a15 	stw	r3,168(sp)
  809020:	d9c02b15 	stw	r7,172(sp)
  809024:	0807f340 	call	807f34 <__sprint_r.part.0>
  809028:	d8c02a17 	ldw	r3,168(sp)
  80902c:	d9c02b17 	ldw	r7,172(sp)
  809030:	103f3d1e 	bne	r2,zero,808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  809034:	d9001b17 	ldw	r4,108(sp)
  809038:	d8801c17 	ldw	r2,112(sp)
  80903c:	d811883a 	mov	r8,sp
  809040:	21400044 	addi	r5,r4,1
  809044:	003d4406 	br	808558 <__alt_mem_onchip_memory2+0xff7e8558>
  809048:	d9402017 	ldw	r5,128(sp)
  80904c:	d9002117 	ldw	r4,132(sp)
  809050:	d9801a04 	addi	r6,sp,104
  809054:	d8c02a15 	stw	r3,168(sp)
  809058:	0807f340 	call	807f34 <__sprint_r.part.0>
  80905c:	d8c02a17 	ldw	r3,168(sp)
  809060:	103f311e 	bne	r2,zero,808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  809064:	d9001b17 	ldw	r4,108(sp)
  809068:	d8801c17 	ldw	r2,112(sp)
  80906c:	d811883a 	mov	r8,sp
  809070:	21400044 	addi	r5,r4,1
  809074:	003ef406 	br	808c48 <__alt_mem_onchip_memory2+0xff7e8c48>
  809078:	1000bd1e 	bne	r2,zero,809370 <___vfiprintf_internal_r+0x1328>
  80907c:	01400044 	movi	r5,1
  809080:	0009883a 	mov	r4,zero
  809084:	d811883a 	mov	r8,sp
  809088:	003ef106 	br	808c50 <__alt_mem_onchip_memory2+0xff7e8c50>
  80908c:	d9402017 	ldw	r5,128(sp)
  809090:	d9002117 	ldw	r4,132(sp)
  809094:	d9801a04 	addi	r6,sp,104
  809098:	0807f340 	call	807f34 <__sprint_r.part.0>
  80909c:	103f221e 	bne	r2,zero,808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  8090a0:	d9401b17 	ldw	r5,108(sp)
  8090a4:	d8801c17 	ldw	r2,112(sp)
  8090a8:	d811883a 	mov	r8,sp
  8090ac:	29400044 	addi	r5,r5,1
  8090b0:	003d6206 	br	80863c <__alt_mem_onchip_memory2+0xff7e863c>
  8090b4:	01402074 	movhi	r5,129
  8090b8:	2941cb04 	addi	r5,r5,1836
  8090bc:	d9402615 	stw	r5,152(sp)
  8090c0:	d8c02215 	stw	r3,136(sp)
  8090c4:	1023883a 	mov	r17,r2
  8090c8:	9d04b03a 	or	r2,r19,r20
  8090cc:	103fa51e 	bne	r2,zero,808f64 <__alt_mem_onchip_memory2+0xff7e8f64>
  8090d0:	002b883a 	mov	r21,zero
  8090d4:	00800084 	movi	r2,2
  8090d8:	003e4a06 	br	808a04 <__alt_mem_onchip_memory2+0xff7e8a04>
  8090dc:	01402074 	movhi	r5,129
  8090e0:	2941cb04 	addi	r5,r5,1836
  8090e4:	002b883a 	mov	r21,zero
  8090e8:	d9402615 	stw	r5,152(sp)
  8090ec:	003f9e06 	br	808f68 <__alt_mem_onchip_memory2+0xff7e8f68>
  8090f0:	d9402217 	ldw	r5,136(sp)
  8090f4:	d8001d85 	stb	zero,118(sp)
  8090f8:	0029883a 	mov	r20,zero
  8090fc:	28800104 	addi	r2,r5,4
  809100:	2cc00017 	ldw	r19,0(r5)
  809104:	803e3a16 	blt	r16,zero,8089f0 <__alt_mem_onchip_memory2+0xff7e89f0>
  809108:	00ffdfc4 	movi	r3,-129
  80910c:	d8802215 	stw	r2,136(sp)
  809110:	88e2703a 	and	r17,r17,r3
  809114:	002b883a 	mov	r21,zero
  809118:	983e9b26 	beq	r19,zero,808b88 <__alt_mem_onchip_memory2+0xff7e8b88>
  80911c:	00800244 	movi	r2,9
  809120:	14fdc936 	bltu	r2,r19,808848 <__alt_mem_onchip_memory2+0xff7e8848>
  809124:	003e9a06 	br	808b90 <__alt_mem_onchip_memory2+0xff7e8b90>
  809128:	00800c04 	movi	r2,48
  80912c:	d8c01d45 	stb	r3,117(sp)
  809130:	d8801d05 	stb	r2,116(sp)
  809134:	d8001d85 	stb	zero,118(sp)
  809138:	88c00094 	ori	r3,r17,2
  80913c:	80009c16 	blt	r16,zero,8093b0 <___vfiprintf_internal_r+0x1368>
  809140:	00bfdfc4 	movi	r2,-129
  809144:	88a2703a 	and	r17,r17,r2
  809148:	8c400094 	ori	r17,r17,2
  80914c:	002b883a 	mov	r21,zero
  809150:	003f8506 	br	808f68 <__alt_mem_onchip_memory2+0xff7e8f68>
  809154:	b029883a 	mov	r20,r22
  809158:	003c0b06 	br	808188 <__alt_mem_onchip_memory2+0xff7e8188>
  80915c:	04e7c83a 	sub	r19,zero,r19
  809160:	05400b44 	movi	r21,45
  809164:	9804c03a 	cmpne	r2,r19,zero
  809168:	0529c83a 	sub	r20,zero,r20
  80916c:	dd401d85 	stb	r21,118(sp)
  809170:	a0a9c83a 	sub	r20,r20,r2
  809174:	80009716 	blt	r16,zero,8093d4 <___vfiprintf_internal_r+0x138c>
  809178:	00bfdfc4 	movi	r2,-129
  80917c:	88a2703a 	and	r17,r17,r2
  809180:	003db006 	br	808844 <__alt_mem_onchip_memory2+0xff7e8844>
  809184:	b0c00007 	ldb	r3,0(r22)
  809188:	003c0c06 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  80918c:	8880100c 	andi	r2,r17,64
  809190:	d8001d85 	stb	zero,118(sp)
  809194:	1000461e 	bne	r2,zero,8092b0 <___vfiprintf_internal_r+0x1268>
  809198:	d9002217 	ldw	r4,136(sp)
  80919c:	0029883a 	mov	r20,zero
  8091a0:	20800104 	addi	r2,r4,4
  8091a4:	24c00017 	ldw	r19,0(r4)
  8091a8:	803df80e 	bge	r16,zero,80898c <__alt_mem_onchip_memory2+0xff7e898c>
  8091ac:	9d06b03a 	or	r3,r19,r20
  8091b0:	d8802215 	stw	r2,136(sp)
  8091b4:	183d5e1e 	bne	r3,zero,808730 <__alt_mem_onchip_memory2+0xff7e8730>
  8091b8:	002b883a 	mov	r21,zero
  8091bc:	0005883a 	mov	r2,zero
  8091c0:	003e1006 	br	808a04 <__alt_mem_onchip_memory2+0xff7e8a04>
  8091c4:	8880040c 	andi	r2,r17,16
  8091c8:	1000321e 	bne	r2,zero,809294 <___vfiprintf_internal_r+0x124c>
  8091cc:	8c40100c 	andi	r17,r17,64
  8091d0:	88008d26 	beq	r17,zero,809408 <___vfiprintf_internal_r+0x13c0>
  8091d4:	d9402217 	ldw	r5,136(sp)
  8091d8:	d8c02417 	ldw	r3,144(sp)
  8091dc:	28800017 	ldw	r2,0(r5)
  8091e0:	29400104 	addi	r5,r5,4
  8091e4:	d9402215 	stw	r5,136(sp)
  8091e8:	10c0000d 	sth	r3,0(r2)
  8091ec:	003bca06 	br	808118 <__alt_mem_onchip_memory2+0xff7e8118>
  8091f0:	8880100c 	andi	r2,r17,64
  8091f4:	10003a26 	beq	r2,zero,8092e0 <___vfiprintf_internal_r+0x1298>
  8091f8:	d8802217 	ldw	r2,136(sp)
  8091fc:	14c0000f 	ldh	r19,0(r2)
  809200:	10800104 	addi	r2,r2,4
  809204:	d8802215 	stw	r2,136(sp)
  809208:	9829d7fa 	srai	r20,r19,31
  80920c:	a005883a 	mov	r2,r20
  809210:	003d8506 	br	808828 <__alt_mem_onchip_memory2+0xff7e8828>
  809214:	8880100c 	andi	r2,r17,64
  809218:	10002b26 	beq	r2,zero,8092c8 <___vfiprintf_internal_r+0x1280>
  80921c:	d8802217 	ldw	r2,136(sp)
  809220:	0029883a 	mov	r20,zero
  809224:	14c0000b 	ldhu	r19,0(r2)
  809228:	10800104 	addi	r2,r2,4
  80922c:	d8802215 	stw	r2,136(sp)
  809230:	003d5d06 	br	8087a8 <__alt_mem_onchip_memory2+0xff7e87a8>
  809234:	d9402017 	ldw	r5,128(sp)
  809238:	d9002117 	ldw	r4,132(sp)
  80923c:	d9801a04 	addi	r6,sp,104
  809240:	d8c02a15 	stw	r3,168(sp)
  809244:	d9c02b15 	stw	r7,172(sp)
  809248:	0807f340 	call	807f34 <__sprint_r.part.0>
  80924c:	d8c02a17 	ldw	r3,168(sp)
  809250:	d9c02b17 	ldw	r7,172(sp)
  809254:	103eb41e 	bne	r2,zero,808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  809258:	d9001b17 	ldw	r4,108(sp)
  80925c:	d8801c17 	ldw	r2,112(sp)
  809260:	d811883a 	mov	r8,sp
  809264:	21400044 	addi	r5,r4,1
  809268:	003e6706 	br	808c08 <__alt_mem_onchip_memory2+0xff7e8c08>
  80926c:	00bfffc4 	movi	r2,-1
  809270:	003c4a06 	br	80839c <__alt_mem_onchip_memory2+0xff7e839c>
  809274:	9805883a 	mov	r2,r19
  809278:	003ee806 	br	808e1c <__alt_mem_onchip_memory2+0xff7e8e1c>
  80927c:	d8c02217 	ldw	r3,136(sp)
  809280:	0029883a 	mov	r20,zero
  809284:	18800104 	addi	r2,r3,4
  809288:	1cc0000b 	ldhu	r19,0(r3)
  80928c:	803f9e0e 	bge	r16,zero,809108 <__alt_mem_onchip_memory2+0xff7e9108>
  809290:	003dd706 	br	8089f0 <__alt_mem_onchip_memory2+0xff7e89f0>
  809294:	d8c02217 	ldw	r3,136(sp)
  809298:	d9002417 	ldw	r4,144(sp)
  80929c:	18800017 	ldw	r2,0(r3)
  8092a0:	18c00104 	addi	r3,r3,4
  8092a4:	d8c02215 	stw	r3,136(sp)
  8092a8:	11000015 	stw	r4,0(r2)
  8092ac:	003b9a06 	br	808118 <__alt_mem_onchip_memory2+0xff7e8118>
  8092b0:	d8c02217 	ldw	r3,136(sp)
  8092b4:	0029883a 	mov	r20,zero
  8092b8:	18800104 	addi	r2,r3,4
  8092bc:	1cc0000b 	ldhu	r19,0(r3)
  8092c0:	803db20e 	bge	r16,zero,80898c <__alt_mem_onchip_memory2+0xff7e898c>
  8092c4:	003fb906 	br	8091ac <__alt_mem_onchip_memory2+0xff7e91ac>
  8092c8:	d9002217 	ldw	r4,136(sp)
  8092cc:	0029883a 	mov	r20,zero
  8092d0:	24c00017 	ldw	r19,0(r4)
  8092d4:	21000104 	addi	r4,r4,4
  8092d8:	d9002215 	stw	r4,136(sp)
  8092dc:	003d3206 	br	8087a8 <__alt_mem_onchip_memory2+0xff7e87a8>
  8092e0:	d8c02217 	ldw	r3,136(sp)
  8092e4:	1cc00017 	ldw	r19,0(r3)
  8092e8:	18c00104 	addi	r3,r3,4
  8092ec:	d8c02215 	stw	r3,136(sp)
  8092f0:	9829d7fa 	srai	r20,r19,31
  8092f4:	a005883a 	mov	r2,r20
  8092f8:	003d4b06 	br	808828 <__alt_mem_onchip_memory2+0xff7e8828>
  8092fc:	0009883a 	mov	r4,zero
  809300:	01400044 	movi	r5,1
  809304:	d811883a 	mov	r8,sp
  809308:	003e4f06 	br	808c48 <__alt_mem_onchip_memory2+0xff7e8c48>
  80930c:	d8c02215 	stw	r3,136(sp)
  809310:	002b883a 	mov	r21,zero
  809314:	003db806 	br	8089f8 <__alt_mem_onchip_memory2+0xff7e89f8>
  809318:	d811883a 	mov	r8,sp
  80931c:	003e9606 	br	808d78 <__alt_mem_onchip_memory2+0xff7e8d78>
  809320:	01002074 	movhi	r4,129
  809324:	21022b04 	addi	r4,r4,2220
  809328:	d9002315 	stw	r4,140(sp)
  80932c:	003e6306 	br	808cbc <__alt_mem_onchip_memory2+0xff7e8cbc>
  809330:	b0c00043 	ldbu	r3,1(r22)
  809334:	8c400814 	ori	r17,r17,32
  809338:	b5800044 	addi	r22,r22,1
  80933c:	18c03fcc 	andi	r3,r3,255
  809340:	18c0201c 	xori	r3,r3,128
  809344:	18ffe004 	addi	r3,r3,-128
  809348:	003b9c06 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  80934c:	b809883a 	mov	r4,r23
  809350:	da002a15 	stw	r8,168(sp)
  809354:	08005c80 	call	8005c8 <strlen>
  809358:	1029883a 	mov	r20,r2
  80935c:	dd401d83 	ldbu	r21,118(sp)
  809360:	df002215 	stw	fp,136(sp)
  809364:	0021883a 	mov	r16,zero
  809368:	da002a17 	ldw	r8,168(sp)
  80936c:	003c3906 	br	808454 <__alt_mem_onchip_memory2+0xff7e8454>
  809370:	d9402017 	ldw	r5,128(sp)
  809374:	d9002117 	ldw	r4,132(sp)
  809378:	d9801a04 	addi	r6,sp,104
  80937c:	0807f340 	call	807f34 <__sprint_r.part.0>
  809380:	103e691e 	bne	r2,zero,808d28 <__alt_mem_onchip_memory2+0xff7e8d28>
  809384:	d9001b17 	ldw	r4,108(sp)
  809388:	d8801c17 	ldw	r2,112(sp)
  80938c:	d811883a 	mov	r8,sp
  809390:	21400044 	addi	r5,r4,1
  809394:	003e2e06 	br	808c50 <__alt_mem_onchip_memory2+0xff7e8c50>
  809398:	01002074 	movhi	r4,129
  80939c:	21022f04 	addi	r4,r4,2236
  8093a0:	d9002315 	stw	r4,140(sp)
  8093a4:	d9001b17 	ldw	r4,108(sp)
  8093a8:	21000044 	addi	r4,r4,1
  8093ac:	003c5e06 	br	808528 <__alt_mem_onchip_memory2+0xff7e8528>
  8093b0:	002b883a 	mov	r21,zero
  8093b4:	00800084 	movi	r2,2
  8093b8:	10803fcc 	andi	r2,r2,255
  8093bc:	01000044 	movi	r4,1
  8093c0:	11002b26 	beq	r2,r4,809470 <___vfiprintf_internal_r+0x1428>
  8093c4:	01000084 	movi	r4,2
  8093c8:	11002b1e 	bne	r2,r4,809478 <___vfiprintf_internal_r+0x1430>
  8093cc:	1823883a 	mov	r17,r3
  8093d0:	003ee506 	br	808f68 <__alt_mem_onchip_memory2+0xff7e8f68>
  8093d4:	8807883a 	mov	r3,r17
  8093d8:	00800044 	movi	r2,1
  8093dc:	003ff606 	br	8093b8 <__alt_mem_onchip_memory2+0xff7e93b8>
  8093e0:	00800184 	movi	r2,6
  8093e4:	1400012e 	bgeu	r2,r16,8093ec <___vfiprintf_internal_r+0x13a4>
  8093e8:	1021883a 	mov	r16,r2
  8093ec:	8029883a 	mov	r20,r16
  8093f0:	8027883a 	mov	r19,r16
  8093f4:	80002216 	blt	r16,zero,809480 <___vfiprintf_internal_r+0x1438>
  8093f8:	05c02074 	movhi	r23,129
  8093fc:	df002215 	stw	fp,136(sp)
  809400:	bdc1d004 	addi	r23,r23,1856
  809404:	003cfb06 	br	8087f4 <__alt_mem_onchip_memory2+0xff7e87f4>
  809408:	d9002217 	ldw	r4,136(sp)
  80940c:	d9402417 	ldw	r5,144(sp)
  809410:	20800017 	ldw	r2,0(r4)
  809414:	21000104 	addi	r4,r4,4
  809418:	d9002215 	stw	r4,136(sp)
  80941c:	11400015 	stw	r5,0(r2)
  809420:	003b3d06 	br	808118 <__alt_mem_onchip_memory2+0xff7e8118>
  809424:	01402074 	movhi	r5,129
  809428:	29422f04 	addi	r5,r5,2236
  80942c:	d9402315 	stw	r5,140(sp)
  809430:	d9401b17 	ldw	r5,108(sp)
  809434:	29400044 	addi	r5,r5,1
  809438:	003e6d06 	br	808df0 <__alt_mem_onchip_memory2+0xff7e8df0>
  80943c:	8029883a 	mov	r20,r16
  809440:	dd401d83 	ldbu	r21,118(sp)
  809444:	df002215 	stw	fp,136(sp)
  809448:	0021883a 	mov	r16,zero
  80944c:	003c0106 	br	808454 <__alt_mem_onchip_memory2+0xff7e8454>
  809450:	00c02074 	movhi	r3,129
  809454:	18c22b04 	addi	r3,r3,2220
  809458:	d8c02315 	stw	r3,140(sp)
  80945c:	280d883a 	mov	r6,r5
  809460:	003c6906 	br	808608 <__alt_mem_onchip_memory2+0xff7e8608>
  809464:	802d883a 	mov	r22,r16
  809468:	0021883a 	mov	r16,zero
  80946c:	003b5406 	br	8081c0 <__alt_mem_onchip_memory2+0xff7e81c0>
  809470:	1823883a 	mov	r17,r3
  809474:	003cf306 	br	808844 <__alt_mem_onchip_memory2+0xff7e8844>
  809478:	1823883a 	mov	r17,r3
  80947c:	003cad06 	br	808734 <__alt_mem_onchip_memory2+0xff7e8734>
  809480:	0027883a 	mov	r19,zero
  809484:	003fdc06 	br	8093f8 <__alt_mem_onchip_memory2+0xff7e93f8>
  809488:	d9402217 	ldw	r5,136(sp)
  80948c:	8005883a 	mov	r2,r16
  809490:	b0c00043 	ldbu	r3,1(r22)
  809494:	2c000017 	ldw	r16,0(r5)
  809498:	29000104 	addi	r4,r5,4
  80949c:	d9002215 	stw	r4,136(sp)
  8094a0:	102d883a 	mov	r22,r2
  8094a4:	803fa50e 	bge	r16,zero,80933c <__alt_mem_onchip_memory2+0xff7e933c>
  8094a8:	18c03fcc 	andi	r3,r3,255
  8094ac:	18c0201c 	xori	r3,r3,128
  8094b0:	043fffc4 	movi	r16,-1
  8094b4:	18ffe004 	addi	r3,r3,-128
  8094b8:	003b4006 	br	8081bc <__alt_mem_onchip_memory2+0xff7e81bc>
  8094bc:	d9402303 	ldbu	r5,140(sp)
  8094c0:	d9401d85 	stb	r5,118(sp)
  8094c4:	003cae06 	br	808780 <__alt_mem_onchip_memory2+0xff7e8780>
  8094c8:	d8c02303 	ldbu	r3,140(sp)
  8094cc:	d8c01d85 	stb	r3,118(sp)
  8094d0:	003d1406 	br	808924 <__alt_mem_onchip_memory2+0xff7e8924>
  8094d4:	d8c02303 	ldbu	r3,140(sp)
  8094d8:	d8c01d85 	stb	r3,118(sp)
  8094dc:	003cca06 	br	808808 <__alt_mem_onchip_memory2+0xff7e8808>
  8094e0:	8880004c 	andi	r2,r17,1
  8094e4:	002b883a 	mov	r21,zero
  8094e8:	10000526 	beq	r2,zero,809500 <___vfiprintf_internal_r+0x14b8>
  8094ec:	00800c04 	movi	r2,48
  8094f0:	d88019c5 	stb	r2,103(sp)
  8094f4:	dd002817 	ldw	r20,160(sp)
  8094f8:	ddc019c4 	addi	r23,sp,103
  8094fc:	003bd506 	br	808454 <__alt_mem_onchip_memory2+0xff7e8454>
  809500:	0029883a 	mov	r20,zero
  809504:	ddc01a04 	addi	r23,sp,104
  809508:	003bd206 	br	808454 <__alt_mem_onchip_memory2+0xff7e8454>
  80950c:	d9002303 	ldbu	r4,140(sp)
  809510:	d9001d85 	stb	r4,118(sp)
  809514:	003da606 	br	808bb0 <__alt_mem_onchip_memory2+0xff7e8bb0>
  809518:	d8c02303 	ldbu	r3,140(sp)
  80951c:	d8c01d85 	stb	r3,118(sp)
  809520:	003c7606 	br	8086fc <__alt_mem_onchip_memory2+0xff7e86fc>
  809524:	d8c02303 	ldbu	r3,140(sp)
  809528:	d8c01d85 	stb	r3,118(sp)
  80952c:	003c6506 	br	8086c4 <__alt_mem_onchip_memory2+0xff7e86c4>
  809530:	d9002303 	ldbu	r4,140(sp)
  809534:	d9001d85 	stb	r4,118(sp)
  809538:	003d3d06 	br	808a30 <__alt_mem_onchip_memory2+0xff7e8a30>
  80953c:	d8c02303 	ldbu	r3,140(sp)
  809540:	d8c01d85 	stb	r3,118(sp)
  809544:	003d1d06 	br	8089bc <__alt_mem_onchip_memory2+0xff7e89bc>
  809548:	d8c02303 	ldbu	r3,140(sp)
  80954c:	d8c01d85 	stb	r3,118(sp)
  809550:	003d0306 	br	808960 <__alt_mem_onchip_memory2+0xff7e8960>

00809554 <__vfiprintf_internal>:
  809554:	00802074 	movhi	r2,129
  809558:	10895e04 	addi	r2,r2,9592
  80955c:	300f883a 	mov	r7,r6
  809560:	280d883a 	mov	r6,r5
  809564:	200b883a 	mov	r5,r4
  809568:	11000017 	ldw	r4,0(r2)
  80956c:	08080481 	jmpi	808048 <___vfiprintf_internal_r>

00809570 <__sbprintf>:
  809570:	2880030b 	ldhu	r2,12(r5)
  809574:	2ac01917 	ldw	r11,100(r5)
  809578:	2a80038b 	ldhu	r10,14(r5)
  80957c:	2a400717 	ldw	r9,28(r5)
  809580:	2a000917 	ldw	r8,36(r5)
  809584:	defee204 	addi	sp,sp,-1144
  809588:	00c10004 	movi	r3,1024
  80958c:	dc011a15 	stw	r16,1128(sp)
  809590:	10bfff4c 	andi	r2,r2,65533
  809594:	2821883a 	mov	r16,r5
  809598:	d8cb883a 	add	r5,sp,r3
  80959c:	dc811c15 	stw	r18,1136(sp)
  8095a0:	dc411b15 	stw	r17,1132(sp)
  8095a4:	dfc11d15 	stw	ra,1140(sp)
  8095a8:	2025883a 	mov	r18,r4
  8095ac:	d881030d 	sth	r2,1036(sp)
  8095b0:	dac11915 	stw	r11,1124(sp)
  8095b4:	da81038d 	sth	r10,1038(sp)
  8095b8:	da410715 	stw	r9,1052(sp)
  8095bc:	da010915 	stw	r8,1060(sp)
  8095c0:	dec10015 	stw	sp,1024(sp)
  8095c4:	dec10415 	stw	sp,1040(sp)
  8095c8:	d8c10215 	stw	r3,1032(sp)
  8095cc:	d8c10515 	stw	r3,1044(sp)
  8095d0:	d8010615 	stw	zero,1048(sp)
  8095d4:	08080480 	call	808048 <___vfiprintf_internal_r>
  8095d8:	1023883a 	mov	r17,r2
  8095dc:	10000416 	blt	r2,zero,8095f0 <__sbprintf+0x80>
  8095e0:	d9410004 	addi	r5,sp,1024
  8095e4:	9009883a 	mov	r4,r18
  8095e8:	08046340 	call	804634 <_fflush_r>
  8095ec:	10000d1e 	bne	r2,zero,809624 <__sbprintf+0xb4>
  8095f0:	d881030b 	ldhu	r2,1036(sp)
  8095f4:	1080100c 	andi	r2,r2,64
  8095f8:	10000326 	beq	r2,zero,809608 <__sbprintf+0x98>
  8095fc:	8080030b 	ldhu	r2,12(r16)
  809600:	10801014 	ori	r2,r2,64
  809604:	8080030d 	sth	r2,12(r16)
  809608:	8805883a 	mov	r2,r17
  80960c:	dfc11d17 	ldw	ra,1140(sp)
  809610:	dc811c17 	ldw	r18,1136(sp)
  809614:	dc411b17 	ldw	r17,1132(sp)
  809618:	dc011a17 	ldw	r16,1128(sp)
  80961c:	dec11e04 	addi	sp,sp,1144
  809620:	f800283a 	ret
  809624:	047fffc4 	movi	r17,-1
  809628:	003ff106 	br	8095f0 <__alt_mem_onchip_memory2+0xff7e95f0>

0080962c <_write_r>:
  80962c:	defffd04 	addi	sp,sp,-12
  809630:	2805883a 	mov	r2,r5
  809634:	dc000015 	stw	r16,0(sp)
  809638:	04002074 	movhi	r16,129
  80963c:	dc400115 	stw	r17,4(sp)
  809640:	300b883a 	mov	r5,r6
  809644:	84105f04 	addi	r16,r16,16764
  809648:	2023883a 	mov	r17,r4
  80964c:	380d883a 	mov	r6,r7
  809650:	1009883a 	mov	r4,r2
  809654:	dfc00215 	stw	ra,8(sp)
  809658:	80000015 	stw	zero,0(r16)
  80965c:	080de7c0 	call	80de7c <write>
  809660:	00ffffc4 	movi	r3,-1
  809664:	10c00526 	beq	r2,r3,80967c <_write_r+0x50>
  809668:	dfc00217 	ldw	ra,8(sp)
  80966c:	dc400117 	ldw	r17,4(sp)
  809670:	dc000017 	ldw	r16,0(sp)
  809674:	dec00304 	addi	sp,sp,12
  809678:	f800283a 	ret
  80967c:	80c00017 	ldw	r3,0(r16)
  809680:	183ff926 	beq	r3,zero,809668 <__alt_mem_onchip_memory2+0xff7e9668>
  809684:	88c00015 	stw	r3,0(r17)
  809688:	003ff706 	br	809668 <__alt_mem_onchip_memory2+0xff7e9668>

0080968c <_close_r>:
  80968c:	defffd04 	addi	sp,sp,-12
  809690:	dc000015 	stw	r16,0(sp)
  809694:	04002074 	movhi	r16,129
  809698:	dc400115 	stw	r17,4(sp)
  80969c:	84105f04 	addi	r16,r16,16764
  8096a0:	2023883a 	mov	r17,r4
  8096a4:	2809883a 	mov	r4,r5
  8096a8:	dfc00215 	stw	ra,8(sp)
  8096ac:	80000015 	stw	zero,0(r16)
  8096b0:	080d5f40 	call	80d5f4 <close>
  8096b4:	00ffffc4 	movi	r3,-1
  8096b8:	10c00526 	beq	r2,r3,8096d0 <_close_r+0x44>
  8096bc:	dfc00217 	ldw	ra,8(sp)
  8096c0:	dc400117 	ldw	r17,4(sp)
  8096c4:	dc000017 	ldw	r16,0(sp)
  8096c8:	dec00304 	addi	sp,sp,12
  8096cc:	f800283a 	ret
  8096d0:	80c00017 	ldw	r3,0(r16)
  8096d4:	183ff926 	beq	r3,zero,8096bc <__alt_mem_onchip_memory2+0xff7e96bc>
  8096d8:	88c00015 	stw	r3,0(r17)
  8096dc:	003ff706 	br	8096bc <__alt_mem_onchip_memory2+0xff7e96bc>

008096e0 <_calloc_r>:
  8096e0:	defffe04 	addi	sp,sp,-8
  8096e4:	2805883a 	mov	r2,r5
  8096e8:	dc000015 	stw	r16,0(sp)
  8096ec:	300b883a 	mov	r5,r6
  8096f0:	2021883a 	mov	r16,r4
  8096f4:	1009883a 	mov	r4,r2
  8096f8:	dfc00115 	stw	ra,4(sp)
  8096fc:	080acec0 	call	80acec <__mulsi3>
  809700:	100b883a 	mov	r5,r2
  809704:	8009883a 	mov	r4,r16
  809708:	080578c0 	call	80578c <_malloc_r>
  80970c:	10002926 	beq	r2,zero,8097b4 <_calloc_r+0xd4>
  809710:	11bfff17 	ldw	r6,-4(r2)
  809714:	1021883a 	mov	r16,r2
  809718:	00bfff04 	movi	r2,-4
  80971c:	308c703a 	and	r6,r6,r2
  809720:	00c00904 	movi	r3,36
  809724:	308d883a 	add	r6,r6,r2
  809728:	19801636 	bltu	r3,r6,809784 <_calloc_r+0xa4>
  80972c:	008004c4 	movi	r2,19
  809730:	11800b2e 	bgeu	r2,r6,809760 <_calloc_r+0x80>
  809734:	80000015 	stw	zero,0(r16)
  809738:	80000115 	stw	zero,4(r16)
  80973c:	008006c4 	movi	r2,27
  809740:	11801a2e 	bgeu	r2,r6,8097ac <_calloc_r+0xcc>
  809744:	80000215 	stw	zero,8(r16)
  809748:	80000315 	stw	zero,12(r16)
  80974c:	30c0151e 	bne	r6,r3,8097a4 <_calloc_r+0xc4>
  809750:	80000415 	stw	zero,16(r16)
  809754:	80800604 	addi	r2,r16,24
  809758:	80000515 	stw	zero,20(r16)
  80975c:	00000106 	br	809764 <_calloc_r+0x84>
  809760:	8005883a 	mov	r2,r16
  809764:	10000015 	stw	zero,0(r2)
  809768:	10000115 	stw	zero,4(r2)
  80976c:	10000215 	stw	zero,8(r2)
  809770:	8005883a 	mov	r2,r16
  809774:	dfc00117 	ldw	ra,4(sp)
  809778:	dc000017 	ldw	r16,0(sp)
  80977c:	dec00204 	addi	sp,sp,8
  809780:	f800283a 	ret
  809784:	000b883a 	mov	r5,zero
  809788:	8009883a 	mov	r4,r16
  80978c:	08063200 	call	806320 <memset>
  809790:	8005883a 	mov	r2,r16
  809794:	dfc00117 	ldw	ra,4(sp)
  809798:	dc000017 	ldw	r16,0(sp)
  80979c:	dec00204 	addi	sp,sp,8
  8097a0:	f800283a 	ret
  8097a4:	80800404 	addi	r2,r16,16
  8097a8:	003fee06 	br	809764 <__alt_mem_onchip_memory2+0xff7e9764>
  8097ac:	80800204 	addi	r2,r16,8
  8097b0:	003fec06 	br	809764 <__alt_mem_onchip_memory2+0xff7e9764>
  8097b4:	0005883a 	mov	r2,zero
  8097b8:	003fee06 	br	809774 <__alt_mem_onchip_memory2+0xff7e9774>

008097bc <_fclose_r>:
  8097bc:	28003926 	beq	r5,zero,8098a4 <_fclose_r+0xe8>
  8097c0:	defffc04 	addi	sp,sp,-16
  8097c4:	dc400115 	stw	r17,4(sp)
  8097c8:	dc000015 	stw	r16,0(sp)
  8097cc:	dfc00315 	stw	ra,12(sp)
  8097d0:	dc800215 	stw	r18,8(sp)
  8097d4:	2023883a 	mov	r17,r4
  8097d8:	2821883a 	mov	r16,r5
  8097dc:	20000226 	beq	r4,zero,8097e8 <_fclose_r+0x2c>
  8097e0:	20800e17 	ldw	r2,56(r4)
  8097e4:	10002726 	beq	r2,zero,809884 <_fclose_r+0xc8>
  8097e8:	8080030f 	ldh	r2,12(r16)
  8097ec:	1000071e 	bne	r2,zero,80980c <_fclose_r+0x50>
  8097f0:	0005883a 	mov	r2,zero
  8097f4:	dfc00317 	ldw	ra,12(sp)
  8097f8:	dc800217 	ldw	r18,8(sp)
  8097fc:	dc400117 	ldw	r17,4(sp)
  809800:	dc000017 	ldw	r16,0(sp)
  809804:	dec00404 	addi	sp,sp,16
  809808:	f800283a 	ret
  80980c:	800b883a 	mov	r5,r16
  809810:	8809883a 	mov	r4,r17
  809814:	08044180 	call	804418 <__sflush_r>
  809818:	1025883a 	mov	r18,r2
  80981c:	80800b17 	ldw	r2,44(r16)
  809820:	10000426 	beq	r2,zero,809834 <_fclose_r+0x78>
  809824:	81400717 	ldw	r5,28(r16)
  809828:	8809883a 	mov	r4,r17
  80982c:	103ee83a 	callr	r2
  809830:	10001616 	blt	r2,zero,80988c <_fclose_r+0xd0>
  809834:	8080030b 	ldhu	r2,12(r16)
  809838:	1080200c 	andi	r2,r2,128
  80983c:	1000151e 	bne	r2,zero,809894 <_fclose_r+0xd8>
  809840:	81400c17 	ldw	r5,48(r16)
  809844:	28000526 	beq	r5,zero,80985c <_fclose_r+0xa0>
  809848:	80801004 	addi	r2,r16,64
  80984c:	28800226 	beq	r5,r2,809858 <_fclose_r+0x9c>
  809850:	8809883a 	mov	r4,r17
  809854:	0804b940 	call	804b94 <_free_r>
  809858:	80000c15 	stw	zero,48(r16)
  80985c:	81401117 	ldw	r5,68(r16)
  809860:	28000326 	beq	r5,zero,809870 <_fclose_r+0xb4>
  809864:	8809883a 	mov	r4,r17
  809868:	0804b940 	call	804b94 <_free_r>
  80986c:	80001115 	stw	zero,68(r16)
  809870:	0804a300 	call	804a30 <__sfp_lock_acquire>
  809874:	8000030d 	sth	zero,12(r16)
  809878:	0804a340 	call	804a34 <__sfp_lock_release>
  80987c:	9005883a 	mov	r2,r18
  809880:	003fdc06 	br	8097f4 <__alt_mem_onchip_memory2+0xff7e97f4>
  809884:	0804a200 	call	804a20 <__sinit>
  809888:	003fd706 	br	8097e8 <__alt_mem_onchip_memory2+0xff7e97e8>
  80988c:	04bfffc4 	movi	r18,-1
  809890:	003fe806 	br	809834 <__alt_mem_onchip_memory2+0xff7e9834>
  809894:	81400417 	ldw	r5,16(r16)
  809898:	8809883a 	mov	r4,r17
  80989c:	0804b940 	call	804b94 <_free_r>
  8098a0:	003fe706 	br	809840 <__alt_mem_onchip_memory2+0xff7e9840>
  8098a4:	0005883a 	mov	r2,zero
  8098a8:	f800283a 	ret

008098ac <fclose>:
  8098ac:	00802074 	movhi	r2,129
  8098b0:	10895e04 	addi	r2,r2,9592
  8098b4:	200b883a 	mov	r5,r4
  8098b8:	11000017 	ldw	r4,0(r2)
  8098bc:	08097bc1 	jmpi	8097bc <_fclose_r>

008098c0 <__fputwc>:
  8098c0:	defff804 	addi	sp,sp,-32
  8098c4:	dcc00415 	stw	r19,16(sp)
  8098c8:	dc800315 	stw	r18,12(sp)
  8098cc:	dc000115 	stw	r16,4(sp)
  8098d0:	dfc00715 	stw	ra,28(sp)
  8098d4:	dd400615 	stw	r21,24(sp)
  8098d8:	dd000515 	stw	r20,20(sp)
  8098dc:	dc400215 	stw	r17,8(sp)
  8098e0:	2027883a 	mov	r19,r4
  8098e4:	2825883a 	mov	r18,r5
  8098e8:	3021883a 	mov	r16,r6
  8098ec:	080557c0 	call	80557c <__locale_mb_cur_max>
  8098f0:	00c00044 	movi	r3,1
  8098f4:	10c03e26 	beq	r2,r3,8099f0 <__fputwc+0x130>
  8098f8:	81c01704 	addi	r7,r16,92
  8098fc:	900d883a 	mov	r6,r18
  809900:	d80b883a 	mov	r5,sp
  809904:	9809883a 	mov	r4,r19
  809908:	0809d900 	call	809d90 <_wcrtomb_r>
  80990c:	1029883a 	mov	r20,r2
  809910:	00bfffc4 	movi	r2,-1
  809914:	a0802026 	beq	r20,r2,809998 <__fputwc+0xd8>
  809918:	d9400003 	ldbu	r5,0(sp)
  80991c:	a0001c26 	beq	r20,zero,809990 <__fputwc+0xd0>
  809920:	0023883a 	mov	r17,zero
  809924:	05400284 	movi	r21,10
  809928:	00000906 	br	809950 <__fputwc+0x90>
  80992c:	80800017 	ldw	r2,0(r16)
  809930:	11400005 	stb	r5,0(r2)
  809934:	80c00017 	ldw	r3,0(r16)
  809938:	18c00044 	addi	r3,r3,1
  80993c:	80c00015 	stw	r3,0(r16)
  809940:	8c400044 	addi	r17,r17,1
  809944:	dc45883a 	add	r2,sp,r17
  809948:	8d00112e 	bgeu	r17,r20,809990 <__fputwc+0xd0>
  80994c:	11400003 	ldbu	r5,0(r2)
  809950:	80c00217 	ldw	r3,8(r16)
  809954:	18ffffc4 	addi	r3,r3,-1
  809958:	80c00215 	stw	r3,8(r16)
  80995c:	183ff30e 	bge	r3,zero,80992c <__alt_mem_onchip_memory2+0xff7e992c>
  809960:	80800617 	ldw	r2,24(r16)
  809964:	18801916 	blt	r3,r2,8099cc <__fputwc+0x10c>
  809968:	80800017 	ldw	r2,0(r16)
  80996c:	11400005 	stb	r5,0(r2)
  809970:	80800017 	ldw	r2,0(r16)
  809974:	10c00003 	ldbu	r3,0(r2)
  809978:	10800044 	addi	r2,r2,1
  80997c:	1d402326 	beq	r3,r21,809a0c <__fputwc+0x14c>
  809980:	80800015 	stw	r2,0(r16)
  809984:	8c400044 	addi	r17,r17,1
  809988:	dc45883a 	add	r2,sp,r17
  80998c:	8d3fef36 	bltu	r17,r20,80994c <__alt_mem_onchip_memory2+0xff7e994c>
  809990:	9005883a 	mov	r2,r18
  809994:	00000406 	br	8099a8 <__fputwc+0xe8>
  809998:	80c0030b 	ldhu	r3,12(r16)
  80999c:	a005883a 	mov	r2,r20
  8099a0:	18c01014 	ori	r3,r3,64
  8099a4:	80c0030d 	sth	r3,12(r16)
  8099a8:	dfc00717 	ldw	ra,28(sp)
  8099ac:	dd400617 	ldw	r21,24(sp)
  8099b0:	dd000517 	ldw	r20,20(sp)
  8099b4:	dcc00417 	ldw	r19,16(sp)
  8099b8:	dc800317 	ldw	r18,12(sp)
  8099bc:	dc400217 	ldw	r17,8(sp)
  8099c0:	dc000117 	ldw	r16,4(sp)
  8099c4:	dec00804 	addi	sp,sp,32
  8099c8:	f800283a 	ret
  8099cc:	800d883a 	mov	r6,r16
  8099d0:	29403fcc 	andi	r5,r5,255
  8099d4:	9809883a 	mov	r4,r19
  8099d8:	0809c380 	call	809c38 <__swbuf_r>
  8099dc:	10bfffe0 	cmpeqi	r2,r2,-1
  8099e0:	10803fcc 	andi	r2,r2,255
  8099e4:	103fd626 	beq	r2,zero,809940 <__alt_mem_onchip_memory2+0xff7e9940>
  8099e8:	00bfffc4 	movi	r2,-1
  8099ec:	003fee06 	br	8099a8 <__alt_mem_onchip_memory2+0xff7e99a8>
  8099f0:	90ffffc4 	addi	r3,r18,-1
  8099f4:	01003f84 	movi	r4,254
  8099f8:	20ffbf36 	bltu	r4,r3,8098f8 <__alt_mem_onchip_memory2+0xff7e98f8>
  8099fc:	900b883a 	mov	r5,r18
  809a00:	dc800005 	stb	r18,0(sp)
  809a04:	1029883a 	mov	r20,r2
  809a08:	003fc506 	br	809920 <__alt_mem_onchip_memory2+0xff7e9920>
  809a0c:	800d883a 	mov	r6,r16
  809a10:	a80b883a 	mov	r5,r21
  809a14:	9809883a 	mov	r4,r19
  809a18:	0809c380 	call	809c38 <__swbuf_r>
  809a1c:	10bfffe0 	cmpeqi	r2,r2,-1
  809a20:	003fef06 	br	8099e0 <__alt_mem_onchip_memory2+0xff7e99e0>

00809a24 <_fputwc_r>:
  809a24:	3080030b 	ldhu	r2,12(r6)
  809a28:	10c8000c 	andi	r3,r2,8192
  809a2c:	1800051e 	bne	r3,zero,809a44 <_fputwc_r+0x20>
  809a30:	30c01917 	ldw	r3,100(r6)
  809a34:	10880014 	ori	r2,r2,8192
  809a38:	3080030d 	sth	r2,12(r6)
  809a3c:	18880014 	ori	r2,r3,8192
  809a40:	30801915 	stw	r2,100(r6)
  809a44:	08098c01 	jmpi	8098c0 <__fputwc>

00809a48 <fputwc>:
  809a48:	00802074 	movhi	r2,129
  809a4c:	defffc04 	addi	sp,sp,-16
  809a50:	10895e04 	addi	r2,r2,9592
  809a54:	dc000115 	stw	r16,4(sp)
  809a58:	14000017 	ldw	r16,0(r2)
  809a5c:	dc400215 	stw	r17,8(sp)
  809a60:	dfc00315 	stw	ra,12(sp)
  809a64:	2023883a 	mov	r17,r4
  809a68:	80000226 	beq	r16,zero,809a74 <fputwc+0x2c>
  809a6c:	80800e17 	ldw	r2,56(r16)
  809a70:	10001026 	beq	r2,zero,809ab4 <fputwc+0x6c>
  809a74:	2880030b 	ldhu	r2,12(r5)
  809a78:	10c8000c 	andi	r3,r2,8192
  809a7c:	1800051e 	bne	r3,zero,809a94 <fputwc+0x4c>
  809a80:	28c01917 	ldw	r3,100(r5)
  809a84:	10880014 	ori	r2,r2,8192
  809a88:	2880030d 	sth	r2,12(r5)
  809a8c:	18880014 	ori	r2,r3,8192
  809a90:	28801915 	stw	r2,100(r5)
  809a94:	280d883a 	mov	r6,r5
  809a98:	8009883a 	mov	r4,r16
  809a9c:	880b883a 	mov	r5,r17
  809aa0:	dfc00317 	ldw	ra,12(sp)
  809aa4:	dc400217 	ldw	r17,8(sp)
  809aa8:	dc000117 	ldw	r16,4(sp)
  809aac:	dec00404 	addi	sp,sp,16
  809ab0:	08098c01 	jmpi	8098c0 <__fputwc>
  809ab4:	8009883a 	mov	r4,r16
  809ab8:	d9400015 	stw	r5,0(sp)
  809abc:	0804a200 	call	804a20 <__sinit>
  809ac0:	d9400017 	ldw	r5,0(sp)
  809ac4:	003feb06 	br	809a74 <__alt_mem_onchip_memory2+0xff7e9a74>

00809ac8 <_fstat_r>:
  809ac8:	defffd04 	addi	sp,sp,-12
  809acc:	2805883a 	mov	r2,r5
  809ad0:	dc000015 	stw	r16,0(sp)
  809ad4:	04002074 	movhi	r16,129
  809ad8:	dc400115 	stw	r17,4(sp)
  809adc:	84105f04 	addi	r16,r16,16764
  809ae0:	2023883a 	mov	r17,r4
  809ae4:	300b883a 	mov	r5,r6
  809ae8:	1009883a 	mov	r4,r2
  809aec:	dfc00215 	stw	ra,8(sp)
  809af0:	80000015 	stw	zero,0(r16)
  809af4:	080d7340 	call	80d734 <fstat>
  809af8:	00ffffc4 	movi	r3,-1
  809afc:	10c00526 	beq	r2,r3,809b14 <_fstat_r+0x4c>
  809b00:	dfc00217 	ldw	ra,8(sp)
  809b04:	dc400117 	ldw	r17,4(sp)
  809b08:	dc000017 	ldw	r16,0(sp)
  809b0c:	dec00304 	addi	sp,sp,12
  809b10:	f800283a 	ret
  809b14:	80c00017 	ldw	r3,0(r16)
  809b18:	183ff926 	beq	r3,zero,809b00 <__alt_mem_onchip_memory2+0xff7e9b00>
  809b1c:	88c00015 	stw	r3,0(r17)
  809b20:	003ff706 	br	809b00 <__alt_mem_onchip_memory2+0xff7e9b00>

00809b24 <_isatty_r>:
  809b24:	defffd04 	addi	sp,sp,-12
  809b28:	dc000015 	stw	r16,0(sp)
  809b2c:	04002074 	movhi	r16,129
  809b30:	dc400115 	stw	r17,4(sp)
  809b34:	84105f04 	addi	r16,r16,16764
  809b38:	2023883a 	mov	r17,r4
  809b3c:	2809883a 	mov	r4,r5
  809b40:	dfc00215 	stw	ra,8(sp)
  809b44:	80000015 	stw	zero,0(r16)
  809b48:	080d8280 	call	80d828 <isatty>
  809b4c:	00ffffc4 	movi	r3,-1
  809b50:	10c00526 	beq	r2,r3,809b68 <_isatty_r+0x44>
  809b54:	dfc00217 	ldw	ra,8(sp)
  809b58:	dc400117 	ldw	r17,4(sp)
  809b5c:	dc000017 	ldw	r16,0(sp)
  809b60:	dec00304 	addi	sp,sp,12
  809b64:	f800283a 	ret
  809b68:	80c00017 	ldw	r3,0(r16)
  809b6c:	183ff926 	beq	r3,zero,809b54 <__alt_mem_onchip_memory2+0xff7e9b54>
  809b70:	88c00015 	stw	r3,0(r17)
  809b74:	003ff706 	br	809b54 <__alt_mem_onchip_memory2+0xff7e9b54>

00809b78 <_lseek_r>:
  809b78:	defffd04 	addi	sp,sp,-12
  809b7c:	2805883a 	mov	r2,r5
  809b80:	dc000015 	stw	r16,0(sp)
  809b84:	04002074 	movhi	r16,129
  809b88:	dc400115 	stw	r17,4(sp)
  809b8c:	300b883a 	mov	r5,r6
  809b90:	84105f04 	addi	r16,r16,16764
  809b94:	2023883a 	mov	r17,r4
  809b98:	380d883a 	mov	r6,r7
  809b9c:	1009883a 	mov	r4,r2
  809ba0:	dfc00215 	stw	ra,8(sp)
  809ba4:	80000015 	stw	zero,0(r16)
  809ba8:	080d9fc0 	call	80d9fc <lseek>
  809bac:	00ffffc4 	movi	r3,-1
  809bb0:	10c00526 	beq	r2,r3,809bc8 <_lseek_r+0x50>
  809bb4:	dfc00217 	ldw	ra,8(sp)
  809bb8:	dc400117 	ldw	r17,4(sp)
  809bbc:	dc000017 	ldw	r16,0(sp)
  809bc0:	dec00304 	addi	sp,sp,12
  809bc4:	f800283a 	ret
  809bc8:	80c00017 	ldw	r3,0(r16)
  809bcc:	183ff926 	beq	r3,zero,809bb4 <__alt_mem_onchip_memory2+0xff7e9bb4>
  809bd0:	88c00015 	stw	r3,0(r17)
  809bd4:	003ff706 	br	809bb4 <__alt_mem_onchip_memory2+0xff7e9bb4>

00809bd8 <_read_r>:
  809bd8:	defffd04 	addi	sp,sp,-12
  809bdc:	2805883a 	mov	r2,r5
  809be0:	dc000015 	stw	r16,0(sp)
  809be4:	04002074 	movhi	r16,129
  809be8:	dc400115 	stw	r17,4(sp)
  809bec:	300b883a 	mov	r5,r6
  809bf0:	84105f04 	addi	r16,r16,16764
  809bf4:	2023883a 	mov	r17,r4
  809bf8:	380d883a 	mov	r6,r7
  809bfc:	1009883a 	mov	r4,r2
  809c00:	dfc00215 	stw	ra,8(sp)
  809c04:	80000015 	stw	zero,0(r16)
  809c08:	080dbd80 	call	80dbd8 <read>
  809c0c:	00ffffc4 	movi	r3,-1
  809c10:	10c00526 	beq	r2,r3,809c28 <_read_r+0x50>
  809c14:	dfc00217 	ldw	ra,8(sp)
  809c18:	dc400117 	ldw	r17,4(sp)
  809c1c:	dc000017 	ldw	r16,0(sp)
  809c20:	dec00304 	addi	sp,sp,12
  809c24:	f800283a 	ret
  809c28:	80c00017 	ldw	r3,0(r16)
  809c2c:	183ff926 	beq	r3,zero,809c14 <__alt_mem_onchip_memory2+0xff7e9c14>
  809c30:	88c00015 	stw	r3,0(r17)
  809c34:	003ff706 	br	809c14 <__alt_mem_onchip_memory2+0xff7e9c14>

00809c38 <__swbuf_r>:
  809c38:	defffb04 	addi	sp,sp,-20
  809c3c:	dcc00315 	stw	r19,12(sp)
  809c40:	dc800215 	stw	r18,8(sp)
  809c44:	dc000015 	stw	r16,0(sp)
  809c48:	dfc00415 	stw	ra,16(sp)
  809c4c:	dc400115 	stw	r17,4(sp)
  809c50:	2025883a 	mov	r18,r4
  809c54:	2827883a 	mov	r19,r5
  809c58:	3021883a 	mov	r16,r6
  809c5c:	20000226 	beq	r4,zero,809c68 <__swbuf_r+0x30>
  809c60:	20800e17 	ldw	r2,56(r4)
  809c64:	10004226 	beq	r2,zero,809d70 <__swbuf_r+0x138>
  809c68:	80800617 	ldw	r2,24(r16)
  809c6c:	8100030b 	ldhu	r4,12(r16)
  809c70:	80800215 	stw	r2,8(r16)
  809c74:	2080020c 	andi	r2,r4,8
  809c78:	10003626 	beq	r2,zero,809d54 <__swbuf_r+0x11c>
  809c7c:	80c00417 	ldw	r3,16(r16)
  809c80:	18003426 	beq	r3,zero,809d54 <__swbuf_r+0x11c>
  809c84:	2088000c 	andi	r2,r4,8192
  809c88:	9c403fcc 	andi	r17,r19,255
  809c8c:	10001a26 	beq	r2,zero,809cf8 <__swbuf_r+0xc0>
  809c90:	80800017 	ldw	r2,0(r16)
  809c94:	81000517 	ldw	r4,20(r16)
  809c98:	10c7c83a 	sub	r3,r2,r3
  809c9c:	1900200e 	bge	r3,r4,809d20 <__swbuf_r+0xe8>
  809ca0:	18c00044 	addi	r3,r3,1
  809ca4:	81000217 	ldw	r4,8(r16)
  809ca8:	11400044 	addi	r5,r2,1
  809cac:	81400015 	stw	r5,0(r16)
  809cb0:	213fffc4 	addi	r4,r4,-1
  809cb4:	81000215 	stw	r4,8(r16)
  809cb8:	14c00005 	stb	r19,0(r2)
  809cbc:	80800517 	ldw	r2,20(r16)
  809cc0:	10c01e26 	beq	r2,r3,809d3c <__swbuf_r+0x104>
  809cc4:	8080030b 	ldhu	r2,12(r16)
  809cc8:	1080004c 	andi	r2,r2,1
  809ccc:	10000226 	beq	r2,zero,809cd8 <__swbuf_r+0xa0>
  809cd0:	00800284 	movi	r2,10
  809cd4:	88801926 	beq	r17,r2,809d3c <__swbuf_r+0x104>
  809cd8:	8805883a 	mov	r2,r17
  809cdc:	dfc00417 	ldw	ra,16(sp)
  809ce0:	dcc00317 	ldw	r19,12(sp)
  809ce4:	dc800217 	ldw	r18,8(sp)
  809ce8:	dc400117 	ldw	r17,4(sp)
  809cec:	dc000017 	ldw	r16,0(sp)
  809cf0:	dec00504 	addi	sp,sp,20
  809cf4:	f800283a 	ret
  809cf8:	81401917 	ldw	r5,100(r16)
  809cfc:	00b7ffc4 	movi	r2,-8193
  809d00:	21080014 	ori	r4,r4,8192
  809d04:	2884703a 	and	r2,r5,r2
  809d08:	80801915 	stw	r2,100(r16)
  809d0c:	80800017 	ldw	r2,0(r16)
  809d10:	8100030d 	sth	r4,12(r16)
  809d14:	81000517 	ldw	r4,20(r16)
  809d18:	10c7c83a 	sub	r3,r2,r3
  809d1c:	193fe016 	blt	r3,r4,809ca0 <__alt_mem_onchip_memory2+0xff7e9ca0>
  809d20:	800b883a 	mov	r5,r16
  809d24:	9009883a 	mov	r4,r18
  809d28:	08046340 	call	804634 <_fflush_r>
  809d2c:	1000071e 	bne	r2,zero,809d4c <__swbuf_r+0x114>
  809d30:	80800017 	ldw	r2,0(r16)
  809d34:	00c00044 	movi	r3,1
  809d38:	003fda06 	br	809ca4 <__alt_mem_onchip_memory2+0xff7e9ca4>
  809d3c:	800b883a 	mov	r5,r16
  809d40:	9009883a 	mov	r4,r18
  809d44:	08046340 	call	804634 <_fflush_r>
  809d48:	103fe326 	beq	r2,zero,809cd8 <__alt_mem_onchip_memory2+0xff7e9cd8>
  809d4c:	00bfffc4 	movi	r2,-1
  809d50:	003fe206 	br	809cdc <__alt_mem_onchip_memory2+0xff7e9cdc>
  809d54:	800b883a 	mov	r5,r16
  809d58:	9009883a 	mov	r4,r18
  809d5c:	0802a140 	call	802a14 <__swsetup_r>
  809d60:	103ffa1e 	bne	r2,zero,809d4c <__alt_mem_onchip_memory2+0xff7e9d4c>
  809d64:	8100030b 	ldhu	r4,12(r16)
  809d68:	80c00417 	ldw	r3,16(r16)
  809d6c:	003fc506 	br	809c84 <__alt_mem_onchip_memory2+0xff7e9c84>
  809d70:	0804a200 	call	804a20 <__sinit>
  809d74:	003fbc06 	br	809c68 <__alt_mem_onchip_memory2+0xff7e9c68>

00809d78 <__swbuf>:
  809d78:	00802074 	movhi	r2,129
  809d7c:	10895e04 	addi	r2,r2,9592
  809d80:	280d883a 	mov	r6,r5
  809d84:	200b883a 	mov	r5,r4
  809d88:	11000017 	ldw	r4,0(r2)
  809d8c:	0809c381 	jmpi	809c38 <__swbuf_r>

00809d90 <_wcrtomb_r>:
  809d90:	defff604 	addi	sp,sp,-40
  809d94:	00802074 	movhi	r2,129
  809d98:	dc800815 	stw	r18,32(sp)
  809d9c:	dc400715 	stw	r17,28(sp)
  809da0:	dc000615 	stw	r16,24(sp)
  809da4:	10896204 	addi	r2,r2,9608
  809da8:	dfc00915 	stw	ra,36(sp)
  809dac:	2021883a 	mov	r16,r4
  809db0:	3823883a 	mov	r17,r7
  809db4:	14800017 	ldw	r18,0(r2)
  809db8:	28001426 	beq	r5,zero,809e0c <_wcrtomb_r+0x7c>
  809dbc:	d9400415 	stw	r5,16(sp)
  809dc0:	d9800515 	stw	r6,20(sp)
  809dc4:	08055700 	call	805570 <__locale_charset>
  809dc8:	d9800517 	ldw	r6,20(sp)
  809dcc:	d9400417 	ldw	r5,16(sp)
  809dd0:	100f883a 	mov	r7,r2
  809dd4:	dc400015 	stw	r17,0(sp)
  809dd8:	8009883a 	mov	r4,r16
  809ddc:	903ee83a 	callr	r18
  809de0:	00ffffc4 	movi	r3,-1
  809de4:	10c0031e 	bne	r2,r3,809df4 <_wcrtomb_r+0x64>
  809de8:	88000015 	stw	zero,0(r17)
  809dec:	00c02284 	movi	r3,138
  809df0:	80c00015 	stw	r3,0(r16)
  809df4:	dfc00917 	ldw	ra,36(sp)
  809df8:	dc800817 	ldw	r18,32(sp)
  809dfc:	dc400717 	ldw	r17,28(sp)
  809e00:	dc000617 	ldw	r16,24(sp)
  809e04:	dec00a04 	addi	sp,sp,40
  809e08:	f800283a 	ret
  809e0c:	08055700 	call	805570 <__locale_charset>
  809e10:	100f883a 	mov	r7,r2
  809e14:	dc400015 	stw	r17,0(sp)
  809e18:	000d883a 	mov	r6,zero
  809e1c:	d9400104 	addi	r5,sp,4
  809e20:	8009883a 	mov	r4,r16
  809e24:	903ee83a 	callr	r18
  809e28:	003fed06 	br	809de0 <__alt_mem_onchip_memory2+0xff7e9de0>

00809e2c <wcrtomb>:
  809e2c:	defff604 	addi	sp,sp,-40
  809e30:	00802074 	movhi	r2,129
  809e34:	dc800615 	stw	r18,24(sp)
  809e38:	dc400515 	stw	r17,20(sp)
  809e3c:	10895e04 	addi	r2,r2,9592
  809e40:	dfc00915 	stw	ra,36(sp)
  809e44:	dd000815 	stw	r20,32(sp)
  809e48:	dcc00715 	stw	r19,28(sp)
  809e4c:	dc000415 	stw	r16,16(sp)
  809e50:	3025883a 	mov	r18,r6
  809e54:	14400017 	ldw	r17,0(r2)
  809e58:	20001926 	beq	r4,zero,809ec0 <wcrtomb+0x94>
  809e5c:	00802074 	movhi	r2,129
  809e60:	10896204 	addi	r2,r2,9608
  809e64:	15000017 	ldw	r20,0(r2)
  809e68:	2021883a 	mov	r16,r4
  809e6c:	2827883a 	mov	r19,r5
  809e70:	08055700 	call	805570 <__locale_charset>
  809e74:	100f883a 	mov	r7,r2
  809e78:	dc800015 	stw	r18,0(sp)
  809e7c:	980d883a 	mov	r6,r19
  809e80:	800b883a 	mov	r5,r16
  809e84:	8809883a 	mov	r4,r17
  809e88:	a03ee83a 	callr	r20
  809e8c:	00ffffc4 	movi	r3,-1
  809e90:	10c0031e 	bne	r2,r3,809ea0 <wcrtomb+0x74>
  809e94:	90000015 	stw	zero,0(r18)
  809e98:	00c02284 	movi	r3,138
  809e9c:	88c00015 	stw	r3,0(r17)
  809ea0:	dfc00917 	ldw	ra,36(sp)
  809ea4:	dd000817 	ldw	r20,32(sp)
  809ea8:	dcc00717 	ldw	r19,28(sp)
  809eac:	dc800617 	ldw	r18,24(sp)
  809eb0:	dc400517 	ldw	r17,20(sp)
  809eb4:	dc000417 	ldw	r16,16(sp)
  809eb8:	dec00a04 	addi	sp,sp,40
  809ebc:	f800283a 	ret
  809ec0:	00802074 	movhi	r2,129
  809ec4:	10896204 	addi	r2,r2,9608
  809ec8:	14000017 	ldw	r16,0(r2)
  809ecc:	08055700 	call	805570 <__locale_charset>
  809ed0:	100f883a 	mov	r7,r2
  809ed4:	dc800015 	stw	r18,0(sp)
  809ed8:	000d883a 	mov	r6,zero
  809edc:	d9400104 	addi	r5,sp,4
  809ee0:	8809883a 	mov	r4,r17
  809ee4:	803ee83a 	callr	r16
  809ee8:	003fe806 	br	809e8c <__alt_mem_onchip_memory2+0xff7e9e8c>

00809eec <__ascii_wctomb>:
  809eec:	28000526 	beq	r5,zero,809f04 <__ascii_wctomb+0x18>
  809ef0:	00803fc4 	movi	r2,255
  809ef4:	11800536 	bltu	r2,r6,809f0c <__ascii_wctomb+0x20>
  809ef8:	29800005 	stb	r6,0(r5)
  809efc:	00800044 	movi	r2,1
  809f00:	f800283a 	ret
  809f04:	0005883a 	mov	r2,zero
  809f08:	f800283a 	ret
  809f0c:	00802284 	movi	r2,138
  809f10:	20800015 	stw	r2,0(r4)
  809f14:	00bfffc4 	movi	r2,-1
  809f18:	f800283a 	ret

00809f1c <_wctomb_r>:
  809f1c:	00802074 	movhi	r2,129
  809f20:	defff904 	addi	sp,sp,-28
  809f24:	10896204 	addi	r2,r2,9608
  809f28:	dfc00615 	stw	ra,24(sp)
  809f2c:	dc400515 	stw	r17,20(sp)
  809f30:	dc000415 	stw	r16,16(sp)
  809f34:	3823883a 	mov	r17,r7
  809f38:	14000017 	ldw	r16,0(r2)
  809f3c:	d9000115 	stw	r4,4(sp)
  809f40:	d9400215 	stw	r5,8(sp)
  809f44:	d9800315 	stw	r6,12(sp)
  809f48:	08055700 	call	805570 <__locale_charset>
  809f4c:	d9800317 	ldw	r6,12(sp)
  809f50:	d9400217 	ldw	r5,8(sp)
  809f54:	d9000117 	ldw	r4,4(sp)
  809f58:	100f883a 	mov	r7,r2
  809f5c:	dc400015 	stw	r17,0(sp)
  809f60:	803ee83a 	callr	r16
  809f64:	dfc00617 	ldw	ra,24(sp)
  809f68:	dc400517 	ldw	r17,20(sp)
  809f6c:	dc000417 	ldw	r16,16(sp)
  809f70:	dec00704 	addi	sp,sp,28
  809f74:	f800283a 	ret

00809f78 <__udivdi3>:
  809f78:	defff404 	addi	sp,sp,-48
  809f7c:	dcc00515 	stw	r19,20(sp)
  809f80:	dc000215 	stw	r16,8(sp)
  809f84:	dfc00b15 	stw	ra,44(sp)
  809f88:	df000a15 	stw	fp,40(sp)
  809f8c:	ddc00915 	stw	r23,36(sp)
  809f90:	dd800815 	stw	r22,32(sp)
  809f94:	dd400715 	stw	r21,28(sp)
  809f98:	dd000615 	stw	r20,24(sp)
  809f9c:	dc800415 	stw	r18,16(sp)
  809fa0:	dc400315 	stw	r17,12(sp)
  809fa4:	2027883a 	mov	r19,r4
  809fa8:	2821883a 	mov	r16,r5
  809fac:	3800461e 	bne	r7,zero,80a0c8 <__udivdi3+0x150>
  809fb0:	3023883a 	mov	r17,r6
  809fb4:	2025883a 	mov	r18,r4
  809fb8:	2980572e 	bgeu	r5,r6,80a118 <__udivdi3+0x1a0>
  809fbc:	00bfffd4 	movui	r2,65535
  809fc0:	282d883a 	mov	r22,r5
  809fc4:	1180b236 	bltu	r2,r6,80a290 <__udivdi3+0x318>
  809fc8:	00803fc4 	movi	r2,255
  809fcc:	1185803a 	cmpltu	r2,r2,r6
  809fd0:	100490fa 	slli	r2,r2,3
  809fd4:	3086d83a 	srl	r3,r6,r2
  809fd8:	01002074 	movhi	r4,129
  809fdc:	21023304 	addi	r4,r4,2252
  809fe0:	20c7883a 	add	r3,r4,r3
  809fe4:	18c00003 	ldbu	r3,0(r3)
  809fe8:	1885883a 	add	r2,r3,r2
  809fec:	00c00804 	movi	r3,32
  809ff0:	1887c83a 	sub	r3,r3,r2
  809ff4:	18000526 	beq	r3,zero,80a00c <__udivdi3+0x94>
  809ff8:	80e0983a 	sll	r16,r16,r3
  809ffc:	9884d83a 	srl	r2,r19,r2
  80a000:	30e2983a 	sll	r17,r6,r3
  80a004:	98e4983a 	sll	r18,r19,r3
  80a008:	142cb03a 	or	r22,r2,r16
  80a00c:	882ad43a 	srli	r21,r17,16
  80a010:	b009883a 	mov	r4,r22
  80a014:	8d3fffcc 	andi	r20,r17,65535
  80a018:	a80b883a 	mov	r5,r21
  80a01c:	080ac940 	call	80ac94 <__umodsi3>
  80a020:	b009883a 	mov	r4,r22
  80a024:	a80b883a 	mov	r5,r21
  80a028:	1027883a 	mov	r19,r2
  80a02c:	080ac300 	call	80ac30 <__udivsi3>
  80a030:	100b883a 	mov	r5,r2
  80a034:	a009883a 	mov	r4,r20
  80a038:	102d883a 	mov	r22,r2
  80a03c:	080acec0 	call	80acec <__mulsi3>
  80a040:	9826943a 	slli	r19,r19,16
  80a044:	9006d43a 	srli	r3,r18,16
  80a048:	1cc6b03a 	or	r3,r3,r19
  80a04c:	1880052e 	bgeu	r3,r2,80a064 <__udivdi3+0xec>
  80a050:	1c47883a 	add	r3,r3,r17
  80a054:	b13fffc4 	addi	r4,r22,-1
  80a058:	1c400136 	bltu	r3,r17,80a060 <__udivdi3+0xe8>
  80a05c:	18814236 	bltu	r3,r2,80a568 <__udivdi3+0x5f0>
  80a060:	202d883a 	mov	r22,r4
  80a064:	18a1c83a 	sub	r16,r3,r2
  80a068:	8009883a 	mov	r4,r16
  80a06c:	a80b883a 	mov	r5,r21
  80a070:	080ac940 	call	80ac94 <__umodsi3>
  80a074:	1027883a 	mov	r19,r2
  80a078:	8009883a 	mov	r4,r16
  80a07c:	a80b883a 	mov	r5,r21
  80a080:	9826943a 	slli	r19,r19,16
  80a084:	080ac300 	call	80ac30 <__udivsi3>
  80a088:	100b883a 	mov	r5,r2
  80a08c:	a009883a 	mov	r4,r20
  80a090:	94bfffcc 	andi	r18,r18,65535
  80a094:	1021883a 	mov	r16,r2
  80a098:	94e4b03a 	or	r18,r18,r19
  80a09c:	080acec0 	call	80acec <__mulsi3>
  80a0a0:	9080052e 	bgeu	r18,r2,80a0b8 <__udivdi3+0x140>
  80a0a4:	8ca5883a 	add	r18,r17,r18
  80a0a8:	80ffffc4 	addi	r3,r16,-1
  80a0ac:	94410c36 	bltu	r18,r17,80a4e0 <__udivdi3+0x568>
  80a0b0:	90810b2e 	bgeu	r18,r2,80a4e0 <__udivdi3+0x568>
  80a0b4:	843fff84 	addi	r16,r16,-2
  80a0b8:	b004943a 	slli	r2,r22,16
  80a0bc:	0007883a 	mov	r3,zero
  80a0c0:	1404b03a 	or	r2,r2,r16
  80a0c4:	00005e06 	br	80a240 <__udivdi3+0x2c8>
  80a0c8:	29c05b36 	bltu	r5,r7,80a238 <__udivdi3+0x2c0>
  80a0cc:	00bfffd4 	movui	r2,65535
  80a0d0:	11c0672e 	bgeu	r2,r7,80a270 <__udivdi3+0x2f8>
  80a0d4:	00804034 	movhi	r2,256
  80a0d8:	10bfffc4 	addi	r2,r2,-1
  80a0dc:	11c10a36 	bltu	r2,r7,80a508 <__udivdi3+0x590>
  80a0e0:	00800404 	movi	r2,16
  80a0e4:	3886d83a 	srl	r3,r7,r2
  80a0e8:	01002074 	movhi	r4,129
  80a0ec:	21023304 	addi	r4,r4,2252
  80a0f0:	20c7883a 	add	r3,r4,r3
  80a0f4:	18c00003 	ldbu	r3,0(r3)
  80a0f8:	05c00804 	movi	r23,32
  80a0fc:	1885883a 	add	r2,r3,r2
  80a100:	b8afc83a 	sub	r23,r23,r2
  80a104:	b800671e 	bne	r23,zero,80a2a4 <__udivdi3+0x32c>
  80a108:	3c010536 	bltu	r7,r16,80a520 <__udivdi3+0x5a8>
  80a10c:	9985403a 	cmpgeu	r2,r19,r6
  80a110:	0007883a 	mov	r3,zero
  80a114:	00004a06 	br	80a240 <__udivdi3+0x2c8>
  80a118:	3000041e 	bne	r6,zero,80a12c <__udivdi3+0x1b4>
  80a11c:	000b883a 	mov	r5,zero
  80a120:	01000044 	movi	r4,1
  80a124:	080ac300 	call	80ac30 <__udivsi3>
  80a128:	1023883a 	mov	r17,r2
  80a12c:	00bfffd4 	movui	r2,65535
  80a130:	1440532e 	bgeu	r2,r17,80a280 <__udivdi3+0x308>
  80a134:	00804034 	movhi	r2,256
  80a138:	10bfffc4 	addi	r2,r2,-1
  80a13c:	1440f436 	bltu	r2,r17,80a510 <__udivdi3+0x598>
  80a140:	00800404 	movi	r2,16
  80a144:	8886d83a 	srl	r3,r17,r2
  80a148:	01002074 	movhi	r4,129
  80a14c:	21023304 	addi	r4,r4,2252
  80a150:	20c7883a 	add	r3,r4,r3
  80a154:	18c00003 	ldbu	r3,0(r3)
  80a158:	1885883a 	add	r2,r3,r2
  80a15c:	00c00804 	movi	r3,32
  80a160:	1887c83a 	sub	r3,r3,r2
  80a164:	1800a51e 	bne	r3,zero,80a3fc <__udivdi3+0x484>
  80a168:	882ad43a 	srli	r21,r17,16
  80a16c:	8461c83a 	sub	r16,r16,r17
  80a170:	8d3fffcc 	andi	r20,r17,65535
  80a174:	00c00044 	movi	r3,1
  80a178:	a80b883a 	mov	r5,r21
  80a17c:	8009883a 	mov	r4,r16
  80a180:	d8c00115 	stw	r3,4(sp)
  80a184:	080ac940 	call	80ac94 <__umodsi3>
  80a188:	a80b883a 	mov	r5,r21
  80a18c:	8009883a 	mov	r4,r16
  80a190:	1027883a 	mov	r19,r2
  80a194:	080ac300 	call	80ac30 <__udivsi3>
  80a198:	a00b883a 	mov	r5,r20
  80a19c:	1009883a 	mov	r4,r2
  80a1a0:	102d883a 	mov	r22,r2
  80a1a4:	080acec0 	call	80acec <__mulsi3>
  80a1a8:	9826943a 	slli	r19,r19,16
  80a1ac:	900ed43a 	srli	r7,r18,16
  80a1b0:	d8c00117 	ldw	r3,4(sp)
  80a1b4:	3cceb03a 	or	r7,r7,r19
  80a1b8:	3880052e 	bgeu	r7,r2,80a1d0 <__udivdi3+0x258>
  80a1bc:	3c4f883a 	add	r7,r7,r17
  80a1c0:	b13fffc4 	addi	r4,r22,-1
  80a1c4:	3c400136 	bltu	r7,r17,80a1cc <__udivdi3+0x254>
  80a1c8:	3880e436 	bltu	r7,r2,80a55c <__udivdi3+0x5e4>
  80a1cc:	202d883a 	mov	r22,r4
  80a1d0:	38a1c83a 	sub	r16,r7,r2
  80a1d4:	8009883a 	mov	r4,r16
  80a1d8:	a80b883a 	mov	r5,r21
  80a1dc:	d8c00115 	stw	r3,4(sp)
  80a1e0:	080ac940 	call	80ac94 <__umodsi3>
  80a1e4:	1027883a 	mov	r19,r2
  80a1e8:	8009883a 	mov	r4,r16
  80a1ec:	a80b883a 	mov	r5,r21
  80a1f0:	9826943a 	slli	r19,r19,16
  80a1f4:	080ac300 	call	80ac30 <__udivsi3>
  80a1f8:	a00b883a 	mov	r5,r20
  80a1fc:	1009883a 	mov	r4,r2
  80a200:	94bfffcc 	andi	r18,r18,65535
  80a204:	1021883a 	mov	r16,r2
  80a208:	94e4b03a 	or	r18,r18,r19
  80a20c:	080acec0 	call	80acec <__mulsi3>
  80a210:	d8c00117 	ldw	r3,4(sp)
  80a214:	9080052e 	bgeu	r18,r2,80a22c <__udivdi3+0x2b4>
  80a218:	8ca5883a 	add	r18,r17,r18
  80a21c:	813fffc4 	addi	r4,r16,-1
  80a220:	9440ad36 	bltu	r18,r17,80a4d8 <__udivdi3+0x560>
  80a224:	9080ac2e 	bgeu	r18,r2,80a4d8 <__udivdi3+0x560>
  80a228:	843fff84 	addi	r16,r16,-2
  80a22c:	b004943a 	slli	r2,r22,16
  80a230:	1404b03a 	or	r2,r2,r16
  80a234:	00000206 	br	80a240 <__udivdi3+0x2c8>
  80a238:	0007883a 	mov	r3,zero
  80a23c:	0005883a 	mov	r2,zero
  80a240:	dfc00b17 	ldw	ra,44(sp)
  80a244:	df000a17 	ldw	fp,40(sp)
  80a248:	ddc00917 	ldw	r23,36(sp)
  80a24c:	dd800817 	ldw	r22,32(sp)
  80a250:	dd400717 	ldw	r21,28(sp)
  80a254:	dd000617 	ldw	r20,24(sp)
  80a258:	dcc00517 	ldw	r19,20(sp)
  80a25c:	dc800417 	ldw	r18,16(sp)
  80a260:	dc400317 	ldw	r17,12(sp)
  80a264:	dc000217 	ldw	r16,8(sp)
  80a268:	dec00c04 	addi	sp,sp,48
  80a26c:	f800283a 	ret
  80a270:	00803fc4 	movi	r2,255
  80a274:	11c5803a 	cmpltu	r2,r2,r7
  80a278:	100490fa 	slli	r2,r2,3
  80a27c:	003f9906 	br	80a0e4 <__alt_mem_onchip_memory2+0xff7ea0e4>
  80a280:	00803fc4 	movi	r2,255
  80a284:	1445803a 	cmpltu	r2,r2,r17
  80a288:	100490fa 	slli	r2,r2,3
  80a28c:	003fad06 	br	80a144 <__alt_mem_onchip_memory2+0xff7ea144>
  80a290:	00804034 	movhi	r2,256
  80a294:	10bfffc4 	addi	r2,r2,-1
  80a298:	11809f36 	bltu	r2,r6,80a518 <__udivdi3+0x5a0>
  80a29c:	00800404 	movi	r2,16
  80a2a0:	003f4c06 	br	809fd4 <__alt_mem_onchip_memory2+0xff7e9fd4>
  80a2a4:	3dce983a 	sll	r7,r7,r23
  80a2a8:	30b8d83a 	srl	fp,r6,r2
  80a2ac:	80a2d83a 	srl	r17,r16,r2
  80a2b0:	35cc983a 	sll	r6,r6,r23
  80a2b4:	3f38b03a 	or	fp,r7,fp
  80a2b8:	e024d43a 	srli	r18,fp,16
  80a2bc:	9884d83a 	srl	r2,r19,r2
  80a2c0:	85e0983a 	sll	r16,r16,r23
  80a2c4:	8809883a 	mov	r4,r17
  80a2c8:	900b883a 	mov	r5,r18
  80a2cc:	d9800015 	stw	r6,0(sp)
  80a2d0:	1420b03a 	or	r16,r2,r16
  80a2d4:	080ac940 	call	80ac94 <__umodsi3>
  80a2d8:	900b883a 	mov	r5,r18
  80a2dc:	8809883a 	mov	r4,r17
  80a2e0:	1029883a 	mov	r20,r2
  80a2e4:	e5bfffcc 	andi	r22,fp,65535
  80a2e8:	080ac300 	call	80ac30 <__udivsi3>
  80a2ec:	100b883a 	mov	r5,r2
  80a2f0:	b009883a 	mov	r4,r22
  80a2f4:	102b883a 	mov	r21,r2
  80a2f8:	080acec0 	call	80acec <__mulsi3>
  80a2fc:	a028943a 	slli	r20,r20,16
  80a300:	8006d43a 	srli	r3,r16,16
  80a304:	1d06b03a 	or	r3,r3,r20
  80a308:	1880042e 	bgeu	r3,r2,80a31c <__udivdi3+0x3a4>
  80a30c:	1f07883a 	add	r3,r3,fp
  80a310:	a93fffc4 	addi	r4,r21,-1
  80a314:	1f00892e 	bgeu	r3,fp,80a53c <__udivdi3+0x5c4>
  80a318:	202b883a 	mov	r21,r4
  80a31c:	18a3c83a 	sub	r17,r3,r2
  80a320:	8809883a 	mov	r4,r17
  80a324:	900b883a 	mov	r5,r18
  80a328:	080ac940 	call	80ac94 <__umodsi3>
  80a32c:	1029883a 	mov	r20,r2
  80a330:	8809883a 	mov	r4,r17
  80a334:	900b883a 	mov	r5,r18
  80a338:	a028943a 	slli	r20,r20,16
  80a33c:	080ac300 	call	80ac30 <__udivsi3>
  80a340:	100b883a 	mov	r5,r2
  80a344:	b009883a 	mov	r4,r22
  80a348:	843fffcc 	andi	r16,r16,65535
  80a34c:	1023883a 	mov	r17,r2
  80a350:	8520b03a 	or	r16,r16,r20
  80a354:	080acec0 	call	80acec <__mulsi3>
  80a358:	8080042e 	bgeu	r16,r2,80a36c <__udivdi3+0x3f4>
  80a35c:	8721883a 	add	r16,r16,fp
  80a360:	88ffffc4 	addi	r3,r17,-1
  80a364:	8700712e 	bgeu	r16,fp,80a52c <__udivdi3+0x5b4>
  80a368:	1823883a 	mov	r17,r3
  80a36c:	a80e943a 	slli	r7,r21,16
  80a370:	d8c00017 	ldw	r3,0(sp)
  80a374:	80a1c83a 	sub	r16,r16,r2
  80a378:	3c64b03a 	or	r18,r7,r17
  80a37c:	1d3fffcc 	andi	r20,r3,65535
  80a380:	9022d43a 	srli	r17,r18,16
  80a384:	95bfffcc 	andi	r22,r18,65535
  80a388:	a00b883a 	mov	r5,r20
  80a38c:	b009883a 	mov	r4,r22
  80a390:	182ad43a 	srli	r21,r3,16
  80a394:	080acec0 	call	80acec <__mulsi3>
  80a398:	a00b883a 	mov	r5,r20
  80a39c:	8809883a 	mov	r4,r17
  80a3a0:	1039883a 	mov	fp,r2
  80a3a4:	080acec0 	call	80acec <__mulsi3>
  80a3a8:	8809883a 	mov	r4,r17
  80a3ac:	a80b883a 	mov	r5,r21
  80a3b0:	1029883a 	mov	r20,r2
  80a3b4:	080acec0 	call	80acec <__mulsi3>
  80a3b8:	a80b883a 	mov	r5,r21
  80a3bc:	b009883a 	mov	r4,r22
  80a3c0:	1023883a 	mov	r17,r2
  80a3c4:	080acec0 	call	80acec <__mulsi3>
  80a3c8:	e006d43a 	srli	r3,fp,16
  80a3cc:	1505883a 	add	r2,r2,r20
  80a3d0:	1887883a 	add	r3,r3,r2
  80a3d4:	1d00022e 	bgeu	r3,r20,80a3e0 <__udivdi3+0x468>
  80a3d8:	00800074 	movhi	r2,1
  80a3dc:	88a3883a 	add	r17,r17,r2
  80a3e0:	1804d43a 	srli	r2,r3,16
  80a3e4:	1463883a 	add	r17,r2,r17
  80a3e8:	84404436 	bltu	r16,r17,80a4fc <__udivdi3+0x584>
  80a3ec:	84403e26 	beq	r16,r17,80a4e8 <__udivdi3+0x570>
  80a3f0:	9005883a 	mov	r2,r18
  80a3f4:	0007883a 	mov	r3,zero
  80a3f8:	003f9106 	br	80a240 <__alt_mem_onchip_memory2+0xff7ea240>
  80a3fc:	88e2983a 	sll	r17,r17,r3
  80a400:	80aed83a 	srl	r23,r16,r2
  80a404:	80e0983a 	sll	r16,r16,r3
  80a408:	882ad43a 	srli	r21,r17,16
  80a40c:	9884d83a 	srl	r2,r19,r2
  80a410:	b809883a 	mov	r4,r23
  80a414:	a80b883a 	mov	r5,r21
  80a418:	98e4983a 	sll	r18,r19,r3
  80a41c:	142cb03a 	or	r22,r2,r16
  80a420:	080ac940 	call	80ac94 <__umodsi3>
  80a424:	b809883a 	mov	r4,r23
  80a428:	a80b883a 	mov	r5,r21
  80a42c:	1027883a 	mov	r19,r2
  80a430:	8d3fffcc 	andi	r20,r17,65535
  80a434:	080ac300 	call	80ac30 <__udivsi3>
  80a438:	a009883a 	mov	r4,r20
  80a43c:	100b883a 	mov	r5,r2
  80a440:	102f883a 	mov	r23,r2
  80a444:	080acec0 	call	80acec <__mulsi3>
  80a448:	9826943a 	slli	r19,r19,16
  80a44c:	b008d43a 	srli	r4,r22,16
  80a450:	24c8b03a 	or	r4,r4,r19
  80a454:	2080062e 	bgeu	r4,r2,80a470 <__udivdi3+0x4f8>
  80a458:	2449883a 	add	r4,r4,r17
  80a45c:	b8ffffc4 	addi	r3,r23,-1
  80a460:	24403c36 	bltu	r4,r17,80a554 <__udivdi3+0x5dc>
  80a464:	20803b2e 	bgeu	r4,r2,80a554 <__udivdi3+0x5dc>
  80a468:	bdffff84 	addi	r23,r23,-2
  80a46c:	2449883a 	add	r4,r4,r17
  80a470:	20a1c83a 	sub	r16,r4,r2
  80a474:	a80b883a 	mov	r5,r21
  80a478:	8009883a 	mov	r4,r16
  80a47c:	080ac940 	call	80ac94 <__umodsi3>
  80a480:	a80b883a 	mov	r5,r21
  80a484:	8009883a 	mov	r4,r16
  80a488:	1027883a 	mov	r19,r2
  80a48c:	080ac300 	call	80ac30 <__udivsi3>
  80a490:	a009883a 	mov	r4,r20
  80a494:	100b883a 	mov	r5,r2
  80a498:	9826943a 	slli	r19,r19,16
  80a49c:	1039883a 	mov	fp,r2
  80a4a0:	080acec0 	call	80acec <__mulsi3>
  80a4a4:	b13fffcc 	andi	r4,r22,65535
  80a4a8:	24c8b03a 	or	r4,r4,r19
  80a4ac:	2080062e 	bgeu	r4,r2,80a4c8 <__udivdi3+0x550>
  80a4b0:	2449883a 	add	r4,r4,r17
  80a4b4:	e0ffffc4 	addi	r3,fp,-1
  80a4b8:	24402436 	bltu	r4,r17,80a54c <__udivdi3+0x5d4>
  80a4bc:	2080232e 	bgeu	r4,r2,80a54c <__udivdi3+0x5d4>
  80a4c0:	e73fff84 	addi	fp,fp,-2
  80a4c4:	2449883a 	add	r4,r4,r17
  80a4c8:	b82e943a 	slli	r23,r23,16
  80a4cc:	20a1c83a 	sub	r16,r4,r2
  80a4d0:	bf06b03a 	or	r3,r23,fp
  80a4d4:	003f2806 	br	80a178 <__alt_mem_onchip_memory2+0xff7ea178>
  80a4d8:	2021883a 	mov	r16,r4
  80a4dc:	003f5306 	br	80a22c <__alt_mem_onchip_memory2+0xff7ea22c>
  80a4e0:	1821883a 	mov	r16,r3
  80a4e4:	003ef406 	br	80a0b8 <__alt_mem_onchip_memory2+0xff7ea0b8>
  80a4e8:	1806943a 	slli	r3,r3,16
  80a4ec:	9de6983a 	sll	r19,r19,r23
  80a4f0:	e73fffcc 	andi	fp,fp,65535
  80a4f4:	1f07883a 	add	r3,r3,fp
  80a4f8:	98ffbd2e 	bgeu	r19,r3,80a3f0 <__alt_mem_onchip_memory2+0xff7ea3f0>
  80a4fc:	90bfffc4 	addi	r2,r18,-1
  80a500:	0007883a 	mov	r3,zero
  80a504:	003f4e06 	br	80a240 <__alt_mem_onchip_memory2+0xff7ea240>
  80a508:	00800604 	movi	r2,24
  80a50c:	003ef506 	br	80a0e4 <__alt_mem_onchip_memory2+0xff7ea0e4>
  80a510:	00800604 	movi	r2,24
  80a514:	003f0b06 	br	80a144 <__alt_mem_onchip_memory2+0xff7ea144>
  80a518:	00800604 	movi	r2,24
  80a51c:	003ead06 	br	809fd4 <__alt_mem_onchip_memory2+0xff7e9fd4>
  80a520:	0007883a 	mov	r3,zero
  80a524:	00800044 	movi	r2,1
  80a528:	003f4506 	br	80a240 <__alt_mem_onchip_memory2+0xff7ea240>
  80a52c:	80bf8e2e 	bgeu	r16,r2,80a368 <__alt_mem_onchip_memory2+0xff7ea368>
  80a530:	8c7fff84 	addi	r17,r17,-2
  80a534:	8721883a 	add	r16,r16,fp
  80a538:	003f8c06 	br	80a36c <__alt_mem_onchip_memory2+0xff7ea36c>
  80a53c:	18bf762e 	bgeu	r3,r2,80a318 <__alt_mem_onchip_memory2+0xff7ea318>
  80a540:	ad7fff84 	addi	r21,r21,-2
  80a544:	1f07883a 	add	r3,r3,fp
  80a548:	003f7406 	br	80a31c <__alt_mem_onchip_memory2+0xff7ea31c>
  80a54c:	1839883a 	mov	fp,r3
  80a550:	003fdd06 	br	80a4c8 <__alt_mem_onchip_memory2+0xff7ea4c8>
  80a554:	182f883a 	mov	r23,r3
  80a558:	003fc506 	br	80a470 <__alt_mem_onchip_memory2+0xff7ea470>
  80a55c:	b5bfff84 	addi	r22,r22,-2
  80a560:	3c4f883a 	add	r7,r7,r17
  80a564:	003f1a06 	br	80a1d0 <__alt_mem_onchip_memory2+0xff7ea1d0>
  80a568:	b5bfff84 	addi	r22,r22,-2
  80a56c:	1c47883a 	add	r3,r3,r17
  80a570:	003ebc06 	br	80a064 <__alt_mem_onchip_memory2+0xff7ea064>

0080a574 <__umoddi3>:
  80a574:	defff304 	addi	sp,sp,-52
  80a578:	df000b15 	stw	fp,44(sp)
  80a57c:	dc400415 	stw	r17,16(sp)
  80a580:	dc000315 	stw	r16,12(sp)
  80a584:	dfc00c15 	stw	ra,48(sp)
  80a588:	ddc00a15 	stw	r23,40(sp)
  80a58c:	dd800915 	stw	r22,36(sp)
  80a590:	dd400815 	stw	r21,32(sp)
  80a594:	dd000715 	stw	r20,28(sp)
  80a598:	dcc00615 	stw	r19,24(sp)
  80a59c:	dc800515 	stw	r18,20(sp)
  80a5a0:	2021883a 	mov	r16,r4
  80a5a4:	2823883a 	mov	r17,r5
  80a5a8:	2839883a 	mov	fp,r5
  80a5ac:	3800401e 	bne	r7,zero,80a6b0 <__umoddi3+0x13c>
  80a5b0:	3027883a 	mov	r19,r6
  80a5b4:	2029883a 	mov	r20,r4
  80a5b8:	2980552e 	bgeu	r5,r6,80a710 <__umoddi3+0x19c>
  80a5bc:	00bfffd4 	movui	r2,65535
  80a5c0:	1180a236 	bltu	r2,r6,80a84c <__umoddi3+0x2d8>
  80a5c4:	01003fc4 	movi	r4,255
  80a5c8:	2189803a 	cmpltu	r4,r4,r6
  80a5cc:	200890fa 	slli	r4,r4,3
  80a5d0:	3104d83a 	srl	r2,r6,r4
  80a5d4:	00c02074 	movhi	r3,129
  80a5d8:	18c23304 	addi	r3,r3,2252
  80a5dc:	1885883a 	add	r2,r3,r2
  80a5e0:	10c00003 	ldbu	r3,0(r2)
  80a5e4:	00800804 	movi	r2,32
  80a5e8:	1909883a 	add	r4,r3,r4
  80a5ec:	1125c83a 	sub	r18,r2,r4
  80a5f0:	90000526 	beq	r18,zero,80a608 <__umoddi3+0x94>
  80a5f4:	8ca2983a 	sll	r17,r17,r18
  80a5f8:	8108d83a 	srl	r4,r16,r4
  80a5fc:	34a6983a 	sll	r19,r6,r18
  80a600:	84a8983a 	sll	r20,r16,r18
  80a604:	2478b03a 	or	fp,r4,r17
  80a608:	982cd43a 	srli	r22,r19,16
  80a60c:	e009883a 	mov	r4,fp
  80a610:	9dffffcc 	andi	r23,r19,65535
  80a614:	b00b883a 	mov	r5,r22
  80a618:	080ac940 	call	80ac94 <__umodsi3>
  80a61c:	b00b883a 	mov	r5,r22
  80a620:	e009883a 	mov	r4,fp
  80a624:	102b883a 	mov	r21,r2
  80a628:	080ac300 	call	80ac30 <__udivsi3>
  80a62c:	100b883a 	mov	r5,r2
  80a630:	b809883a 	mov	r4,r23
  80a634:	080acec0 	call	80acec <__mulsi3>
  80a638:	a82a943a 	slli	r21,r21,16
  80a63c:	a006d43a 	srli	r3,r20,16
  80a640:	1d46b03a 	or	r3,r3,r21
  80a644:	1880032e 	bgeu	r3,r2,80a654 <__umoddi3+0xe0>
  80a648:	1cc7883a 	add	r3,r3,r19
  80a64c:	1cc00136 	bltu	r3,r19,80a654 <__umoddi3+0xe0>
  80a650:	18813136 	bltu	r3,r2,80ab18 <__umoddi3+0x5a4>
  80a654:	18a1c83a 	sub	r16,r3,r2
  80a658:	b00b883a 	mov	r5,r22
  80a65c:	8009883a 	mov	r4,r16
  80a660:	080ac940 	call	80ac94 <__umodsi3>
  80a664:	b00b883a 	mov	r5,r22
  80a668:	8009883a 	mov	r4,r16
  80a66c:	1023883a 	mov	r17,r2
  80a670:	080ac300 	call	80ac30 <__udivsi3>
  80a674:	100b883a 	mov	r5,r2
  80a678:	b809883a 	mov	r4,r23
  80a67c:	8822943a 	slli	r17,r17,16
  80a680:	080acec0 	call	80acec <__mulsi3>
  80a684:	a0ffffcc 	andi	r3,r20,65535
  80a688:	1c46b03a 	or	r3,r3,r17
  80a68c:	1880042e 	bgeu	r3,r2,80a6a0 <__umoddi3+0x12c>
  80a690:	1cc7883a 	add	r3,r3,r19
  80a694:	1cc00236 	bltu	r3,r19,80a6a0 <__umoddi3+0x12c>
  80a698:	1880012e 	bgeu	r3,r2,80a6a0 <__umoddi3+0x12c>
  80a69c:	1cc7883a 	add	r3,r3,r19
  80a6a0:	1885c83a 	sub	r2,r3,r2
  80a6a4:	1484d83a 	srl	r2,r2,r18
  80a6a8:	0007883a 	mov	r3,zero
  80a6ac:	00005306 	br	80a7fc <__umoddi3+0x288>
  80a6b0:	29c05036 	bltu	r5,r7,80a7f4 <__umoddi3+0x280>
  80a6b4:	00bfffd4 	movui	r2,65535
  80a6b8:	11c05c2e 	bgeu	r2,r7,80a82c <__umoddi3+0x2b8>
  80a6bc:	00804034 	movhi	r2,256
  80a6c0:	10bfffc4 	addi	r2,r2,-1
  80a6c4:	11c10636 	bltu	r2,r7,80aae0 <__umoddi3+0x56c>
  80a6c8:	01000404 	movi	r4,16
  80a6cc:	3904d83a 	srl	r2,r7,r4
  80a6d0:	00c02074 	movhi	r3,129
  80a6d4:	18c23304 	addi	r3,r3,2252
  80a6d8:	1885883a 	add	r2,r3,r2
  80a6dc:	14c00003 	ldbu	r19,0(r2)
  80a6e0:	00c00804 	movi	r3,32
  80a6e4:	9927883a 	add	r19,r19,r4
  80a6e8:	1ce9c83a 	sub	r20,r3,r19
  80a6ec:	a0005c1e 	bne	r20,zero,80a860 <__umoddi3+0x2ec>
  80a6f0:	3c400136 	bltu	r7,r17,80a6f8 <__umoddi3+0x184>
  80a6f4:	81810a36 	bltu	r16,r6,80ab20 <__umoddi3+0x5ac>
  80a6f8:	8185c83a 	sub	r2,r16,r6
  80a6fc:	89e3c83a 	sub	r17,r17,r7
  80a700:	8089803a 	cmpltu	r4,r16,r2
  80a704:	8939c83a 	sub	fp,r17,r4
  80a708:	e007883a 	mov	r3,fp
  80a70c:	00003b06 	br	80a7fc <__umoddi3+0x288>
  80a710:	3000041e 	bne	r6,zero,80a724 <__umoddi3+0x1b0>
  80a714:	000b883a 	mov	r5,zero
  80a718:	01000044 	movi	r4,1
  80a71c:	080ac300 	call	80ac30 <__udivsi3>
  80a720:	1027883a 	mov	r19,r2
  80a724:	00bfffd4 	movui	r2,65535
  80a728:	14c0442e 	bgeu	r2,r19,80a83c <__umoddi3+0x2c8>
  80a72c:	00804034 	movhi	r2,256
  80a730:	10bfffc4 	addi	r2,r2,-1
  80a734:	14c0ec36 	bltu	r2,r19,80aae8 <__umoddi3+0x574>
  80a738:	00800404 	movi	r2,16
  80a73c:	9886d83a 	srl	r3,r19,r2
  80a740:	01002074 	movhi	r4,129
  80a744:	21023304 	addi	r4,r4,2252
  80a748:	20c7883a 	add	r3,r4,r3
  80a74c:	18c00003 	ldbu	r3,0(r3)
  80a750:	1887883a 	add	r3,r3,r2
  80a754:	00800804 	movi	r2,32
  80a758:	10e5c83a 	sub	r18,r2,r3
  80a75c:	9000ab1e 	bne	r18,zero,80aa0c <__umoddi3+0x498>
  80a760:	982cd43a 	srli	r22,r19,16
  80a764:	8ce3c83a 	sub	r17,r17,r19
  80a768:	9dffffcc 	andi	r23,r19,65535
  80a76c:	b00b883a 	mov	r5,r22
  80a770:	8809883a 	mov	r4,r17
  80a774:	080ac940 	call	80ac94 <__umodsi3>
  80a778:	b00b883a 	mov	r5,r22
  80a77c:	8809883a 	mov	r4,r17
  80a780:	102b883a 	mov	r21,r2
  80a784:	080ac300 	call	80ac30 <__udivsi3>
  80a788:	b80b883a 	mov	r5,r23
  80a78c:	1009883a 	mov	r4,r2
  80a790:	080acec0 	call	80acec <__mulsi3>
  80a794:	a82a943a 	slli	r21,r21,16
  80a798:	a006d43a 	srli	r3,r20,16
  80a79c:	1d46b03a 	or	r3,r3,r21
  80a7a0:	1880042e 	bgeu	r3,r2,80a7b4 <__umoddi3+0x240>
  80a7a4:	1cc7883a 	add	r3,r3,r19
  80a7a8:	1cc00236 	bltu	r3,r19,80a7b4 <__umoddi3+0x240>
  80a7ac:	1880012e 	bgeu	r3,r2,80a7b4 <__umoddi3+0x240>
  80a7b0:	1cc7883a 	add	r3,r3,r19
  80a7b4:	18a1c83a 	sub	r16,r3,r2
  80a7b8:	b00b883a 	mov	r5,r22
  80a7bc:	8009883a 	mov	r4,r16
  80a7c0:	080ac940 	call	80ac94 <__umodsi3>
  80a7c4:	1023883a 	mov	r17,r2
  80a7c8:	b00b883a 	mov	r5,r22
  80a7cc:	8009883a 	mov	r4,r16
  80a7d0:	080ac300 	call	80ac30 <__udivsi3>
  80a7d4:	8822943a 	slli	r17,r17,16
  80a7d8:	b80b883a 	mov	r5,r23
  80a7dc:	1009883a 	mov	r4,r2
  80a7e0:	080acec0 	call	80acec <__mulsi3>
  80a7e4:	a53fffcc 	andi	r20,r20,65535
  80a7e8:	a446b03a 	or	r3,r20,r17
  80a7ec:	18bfac2e 	bgeu	r3,r2,80a6a0 <__alt_mem_onchip_memory2+0xff7ea6a0>
  80a7f0:	003fa706 	br	80a690 <__alt_mem_onchip_memory2+0xff7ea690>
  80a7f4:	2005883a 	mov	r2,r4
  80a7f8:	2807883a 	mov	r3,r5
  80a7fc:	dfc00c17 	ldw	ra,48(sp)
  80a800:	df000b17 	ldw	fp,44(sp)
  80a804:	ddc00a17 	ldw	r23,40(sp)
  80a808:	dd800917 	ldw	r22,36(sp)
  80a80c:	dd400817 	ldw	r21,32(sp)
  80a810:	dd000717 	ldw	r20,28(sp)
  80a814:	dcc00617 	ldw	r19,24(sp)
  80a818:	dc800517 	ldw	r18,20(sp)
  80a81c:	dc400417 	ldw	r17,16(sp)
  80a820:	dc000317 	ldw	r16,12(sp)
  80a824:	dec00d04 	addi	sp,sp,52
  80a828:	f800283a 	ret
  80a82c:	04c03fc4 	movi	r19,255
  80a830:	99c9803a 	cmpltu	r4,r19,r7
  80a834:	200890fa 	slli	r4,r4,3
  80a838:	003fa406 	br	80a6cc <__alt_mem_onchip_memory2+0xff7ea6cc>
  80a83c:	00803fc4 	movi	r2,255
  80a840:	14c5803a 	cmpltu	r2,r2,r19
  80a844:	100490fa 	slli	r2,r2,3
  80a848:	003fbc06 	br	80a73c <__alt_mem_onchip_memory2+0xff7ea73c>
  80a84c:	00804034 	movhi	r2,256
  80a850:	10bfffc4 	addi	r2,r2,-1
  80a854:	1180a636 	bltu	r2,r6,80aaf0 <__umoddi3+0x57c>
  80a858:	01000404 	movi	r4,16
  80a85c:	003f5c06 	br	80a5d0 <__alt_mem_onchip_memory2+0xff7ea5d0>
  80a860:	3d0e983a 	sll	r7,r7,r20
  80a864:	34ead83a 	srl	r21,r6,r19
  80a868:	8cc6d83a 	srl	r3,r17,r19
  80a86c:	8d10983a 	sll	r8,r17,r20
  80a870:	3d6ab03a 	or	r21,r7,r21
  80a874:	a82cd43a 	srli	r22,r21,16
  80a878:	84e2d83a 	srl	r17,r16,r19
  80a87c:	1809883a 	mov	r4,r3
  80a880:	b00b883a 	mov	r5,r22
  80a884:	8a22b03a 	or	r17,r17,r8
  80a888:	3524983a 	sll	r18,r6,r20
  80a88c:	dc400015 	stw	r17,0(sp)
  80a890:	d8c00115 	stw	r3,4(sp)
  80a894:	080ac940 	call	80ac94 <__umodsi3>
  80a898:	d8c00117 	ldw	r3,4(sp)
  80a89c:	b00b883a 	mov	r5,r22
  80a8a0:	1039883a 	mov	fp,r2
  80a8a4:	1809883a 	mov	r4,r3
  80a8a8:	080ac300 	call	80ac30 <__udivsi3>
  80a8ac:	adffffcc 	andi	r23,r21,65535
  80a8b0:	100b883a 	mov	r5,r2
  80a8b4:	b809883a 	mov	r4,r23
  80a8b8:	1023883a 	mov	r17,r2
  80a8bc:	080acec0 	call	80acec <__mulsi3>
  80a8c0:	d9400017 	ldw	r5,0(sp)
  80a8c4:	e008943a 	slli	r4,fp,16
  80a8c8:	8520983a 	sll	r16,r16,r20
  80a8cc:	2806d43a 	srli	r3,r5,16
  80a8d0:	1906b03a 	or	r3,r3,r4
  80a8d4:	1880042e 	bgeu	r3,r2,80a8e8 <__umoddi3+0x374>
  80a8d8:	1d47883a 	add	r3,r3,r21
  80a8dc:	893fffc4 	addi	r4,r17,-1
  80a8e0:	1d40892e 	bgeu	r3,r21,80ab08 <__umoddi3+0x594>
  80a8e4:	2023883a 	mov	r17,r4
  80a8e8:	18b9c83a 	sub	fp,r3,r2
  80a8ec:	b00b883a 	mov	r5,r22
  80a8f0:	e009883a 	mov	r4,fp
  80a8f4:	080ac940 	call	80ac94 <__umodsi3>
  80a8f8:	b00b883a 	mov	r5,r22
  80a8fc:	e009883a 	mov	r4,fp
  80a900:	d8800215 	stw	r2,8(sp)
  80a904:	080ac300 	call	80ac30 <__udivsi3>
  80a908:	100b883a 	mov	r5,r2
  80a90c:	b809883a 	mov	r4,r23
  80a910:	102d883a 	mov	r22,r2
  80a914:	080acec0 	call	80acec <__mulsi3>
  80a918:	d9800217 	ldw	r6,8(sp)
  80a91c:	d8c00017 	ldw	r3,0(sp)
  80a920:	300c943a 	slli	r6,r6,16
  80a924:	1a3fffcc 	andi	r8,r3,65535
  80a928:	4190b03a 	or	r8,r8,r6
  80a92c:	4080042e 	bgeu	r8,r2,80a940 <__umoddi3+0x3cc>
  80a930:	4551883a 	add	r8,r8,r21
  80a934:	b0ffffc4 	addi	r3,r22,-1
  80a938:	45406f2e 	bgeu	r8,r21,80aaf8 <__umoddi3+0x584>
  80a93c:	182d883a 	mov	r22,r3
  80a940:	880e943a 	slli	r7,r17,16
  80a944:	9006d43a 	srli	r3,r18,16
  80a948:	91bfffcc 	andi	r6,r18,65535
  80a94c:	3dacb03a 	or	r22,r7,r22
  80a950:	b02ed43a 	srli	r23,r22,16
  80a954:	b5bfffcc 	andi	r22,r22,65535
  80a958:	300b883a 	mov	r5,r6
  80a95c:	b009883a 	mov	r4,r22
  80a960:	40a3c83a 	sub	r17,r8,r2
  80a964:	d8c00115 	stw	r3,4(sp)
  80a968:	d9800215 	stw	r6,8(sp)
  80a96c:	080acec0 	call	80acec <__mulsi3>
  80a970:	d9800217 	ldw	r6,8(sp)
  80a974:	b809883a 	mov	r4,r23
  80a978:	1039883a 	mov	fp,r2
  80a97c:	300b883a 	mov	r5,r6
  80a980:	080acec0 	call	80acec <__mulsi3>
  80a984:	d8c00117 	ldw	r3,4(sp)
  80a988:	b809883a 	mov	r4,r23
  80a98c:	d8800215 	stw	r2,8(sp)
  80a990:	180b883a 	mov	r5,r3
  80a994:	080acec0 	call	80acec <__mulsi3>
  80a998:	d8c00117 	ldw	r3,4(sp)
  80a99c:	b009883a 	mov	r4,r22
  80a9a0:	102f883a 	mov	r23,r2
  80a9a4:	180b883a 	mov	r5,r3
  80a9a8:	080acec0 	call	80acec <__mulsi3>
  80a9ac:	d9800217 	ldw	r6,8(sp)
  80a9b0:	e006d43a 	srli	r3,fp,16
  80a9b4:	1185883a 	add	r2,r2,r6
  80a9b8:	1885883a 	add	r2,r3,r2
  80a9bc:	1180022e 	bgeu	r2,r6,80a9c8 <__umoddi3+0x454>
  80a9c0:	00c00074 	movhi	r3,1
  80a9c4:	b8ef883a 	add	r23,r23,r3
  80a9c8:	1006d43a 	srli	r3,r2,16
  80a9cc:	1004943a 	slli	r2,r2,16
  80a9d0:	e73fffcc 	andi	fp,fp,65535
  80a9d4:	1dc7883a 	add	r3,r3,r23
  80a9d8:	1739883a 	add	fp,r2,fp
  80a9dc:	88c03a36 	bltu	r17,r3,80aac8 <__umoddi3+0x554>
  80a9e0:	88c05126 	beq	r17,r3,80ab28 <__umoddi3+0x5b4>
  80a9e4:	88c9c83a 	sub	r4,r17,r3
  80a9e8:	e00f883a 	mov	r7,fp
  80a9ec:	81cfc83a 	sub	r7,r16,r7
  80a9f0:	81c7803a 	cmpltu	r3,r16,r7
  80a9f4:	20c7c83a 	sub	r3,r4,r3
  80a9f8:	1cc4983a 	sll	r2,r3,r19
  80a9fc:	3d0ed83a 	srl	r7,r7,r20
  80aa00:	1d06d83a 	srl	r3,r3,r20
  80aa04:	11c4b03a 	or	r2,r2,r7
  80aa08:	003f7c06 	br	80a7fc <__alt_mem_onchip_memory2+0xff7ea7fc>
  80aa0c:	9ca6983a 	sll	r19,r19,r18
  80aa10:	88f8d83a 	srl	fp,r17,r3
  80aa14:	80c4d83a 	srl	r2,r16,r3
  80aa18:	982cd43a 	srli	r22,r19,16
  80aa1c:	8ca2983a 	sll	r17,r17,r18
  80aa20:	e009883a 	mov	r4,fp
  80aa24:	b00b883a 	mov	r5,r22
  80aa28:	146ab03a 	or	r21,r2,r17
  80aa2c:	080ac940 	call	80ac94 <__umodsi3>
  80aa30:	b00b883a 	mov	r5,r22
  80aa34:	e009883a 	mov	r4,fp
  80aa38:	1029883a 	mov	r20,r2
  80aa3c:	9dffffcc 	andi	r23,r19,65535
  80aa40:	080ac300 	call	80ac30 <__udivsi3>
  80aa44:	b809883a 	mov	r4,r23
  80aa48:	100b883a 	mov	r5,r2
  80aa4c:	080acec0 	call	80acec <__mulsi3>
  80aa50:	a008943a 	slli	r4,r20,16
  80aa54:	a806d43a 	srli	r3,r21,16
  80aa58:	84a8983a 	sll	r20,r16,r18
  80aa5c:	1906b03a 	or	r3,r3,r4
  80aa60:	1880042e 	bgeu	r3,r2,80aa74 <__umoddi3+0x500>
  80aa64:	1cc7883a 	add	r3,r3,r19
  80aa68:	1cc00236 	bltu	r3,r19,80aa74 <__umoddi3+0x500>
  80aa6c:	1880012e 	bgeu	r3,r2,80aa74 <__umoddi3+0x500>
  80aa70:	1cc7883a 	add	r3,r3,r19
  80aa74:	18a3c83a 	sub	r17,r3,r2
  80aa78:	b00b883a 	mov	r5,r22
  80aa7c:	8809883a 	mov	r4,r17
  80aa80:	080ac940 	call	80ac94 <__umodsi3>
  80aa84:	b00b883a 	mov	r5,r22
  80aa88:	8809883a 	mov	r4,r17
  80aa8c:	1021883a 	mov	r16,r2
  80aa90:	080ac300 	call	80ac30 <__udivsi3>
  80aa94:	100b883a 	mov	r5,r2
  80aa98:	b809883a 	mov	r4,r23
  80aa9c:	8020943a 	slli	r16,r16,16
  80aaa0:	080acec0 	call	80acec <__mulsi3>
  80aaa4:	a8ffffcc 	andi	r3,r21,65535
  80aaa8:	1c06b03a 	or	r3,r3,r16
  80aaac:	1880042e 	bgeu	r3,r2,80aac0 <__umoddi3+0x54c>
  80aab0:	1cc7883a 	add	r3,r3,r19
  80aab4:	1cc00236 	bltu	r3,r19,80aac0 <__umoddi3+0x54c>
  80aab8:	1880012e 	bgeu	r3,r2,80aac0 <__umoddi3+0x54c>
  80aabc:	1cc7883a 	add	r3,r3,r19
  80aac0:	18a3c83a 	sub	r17,r3,r2
  80aac4:	003f2906 	br	80a76c <__alt_mem_onchip_memory2+0xff7ea76c>
  80aac8:	e48fc83a 	sub	r7,fp,r18
  80aacc:	1d49c83a 	sub	r4,r3,r21
  80aad0:	e1f9803a 	cmpltu	fp,fp,r7
  80aad4:	2739c83a 	sub	fp,r4,fp
  80aad8:	8f09c83a 	sub	r4,r17,fp
  80aadc:	003fc306 	br	80a9ec <__alt_mem_onchip_memory2+0xff7ea9ec>
  80aae0:	01000604 	movi	r4,24
  80aae4:	003ef906 	br	80a6cc <__alt_mem_onchip_memory2+0xff7ea6cc>
  80aae8:	00800604 	movi	r2,24
  80aaec:	003f1306 	br	80a73c <__alt_mem_onchip_memory2+0xff7ea73c>
  80aaf0:	01000604 	movi	r4,24
  80aaf4:	003eb606 	br	80a5d0 <__alt_mem_onchip_memory2+0xff7ea5d0>
  80aaf8:	40bf902e 	bgeu	r8,r2,80a93c <__alt_mem_onchip_memory2+0xff7ea93c>
  80aafc:	b5bfff84 	addi	r22,r22,-2
  80ab00:	4551883a 	add	r8,r8,r21
  80ab04:	003f8e06 	br	80a940 <__alt_mem_onchip_memory2+0xff7ea940>
  80ab08:	18bf762e 	bgeu	r3,r2,80a8e4 <__alt_mem_onchip_memory2+0xff7ea8e4>
  80ab0c:	8c7fff84 	addi	r17,r17,-2
  80ab10:	1d47883a 	add	r3,r3,r21
  80ab14:	003f7406 	br	80a8e8 <__alt_mem_onchip_memory2+0xff7ea8e8>
  80ab18:	1cc7883a 	add	r3,r3,r19
  80ab1c:	003ecd06 	br	80a654 <__alt_mem_onchip_memory2+0xff7ea654>
  80ab20:	8005883a 	mov	r2,r16
  80ab24:	003ef806 	br	80a708 <__alt_mem_onchip_memory2+0xff7ea708>
  80ab28:	873fe736 	bltu	r16,fp,80aac8 <__alt_mem_onchip_memory2+0xff7eaac8>
  80ab2c:	e00f883a 	mov	r7,fp
  80ab30:	0009883a 	mov	r4,zero
  80ab34:	003fad06 	br	80a9ec <__alt_mem_onchip_memory2+0xff7ea9ec>

0080ab38 <__divsi3>:
  80ab38:	20001b16 	blt	r4,zero,80aba8 <__divsi3+0x70>
  80ab3c:	000f883a 	mov	r7,zero
  80ab40:	28001616 	blt	r5,zero,80ab9c <__divsi3+0x64>
  80ab44:	200d883a 	mov	r6,r4
  80ab48:	29001a2e 	bgeu	r5,r4,80abb4 <__divsi3+0x7c>
  80ab4c:	00800804 	movi	r2,32
  80ab50:	00c00044 	movi	r3,1
  80ab54:	00000106 	br	80ab5c <__divsi3+0x24>
  80ab58:	10000d26 	beq	r2,zero,80ab90 <__divsi3+0x58>
  80ab5c:	294b883a 	add	r5,r5,r5
  80ab60:	10bfffc4 	addi	r2,r2,-1
  80ab64:	18c7883a 	add	r3,r3,r3
  80ab68:	293ffb36 	bltu	r5,r4,80ab58 <__alt_mem_onchip_memory2+0xff7eab58>
  80ab6c:	0005883a 	mov	r2,zero
  80ab70:	18000726 	beq	r3,zero,80ab90 <__divsi3+0x58>
  80ab74:	0005883a 	mov	r2,zero
  80ab78:	31400236 	bltu	r6,r5,80ab84 <__divsi3+0x4c>
  80ab7c:	314dc83a 	sub	r6,r6,r5
  80ab80:	10c4b03a 	or	r2,r2,r3
  80ab84:	1806d07a 	srli	r3,r3,1
  80ab88:	280ad07a 	srli	r5,r5,1
  80ab8c:	183ffa1e 	bne	r3,zero,80ab78 <__alt_mem_onchip_memory2+0xff7eab78>
  80ab90:	38000126 	beq	r7,zero,80ab98 <__divsi3+0x60>
  80ab94:	0085c83a 	sub	r2,zero,r2
  80ab98:	f800283a 	ret
  80ab9c:	014bc83a 	sub	r5,zero,r5
  80aba0:	39c0005c 	xori	r7,r7,1
  80aba4:	003fe706 	br	80ab44 <__alt_mem_onchip_memory2+0xff7eab44>
  80aba8:	0109c83a 	sub	r4,zero,r4
  80abac:	01c00044 	movi	r7,1
  80abb0:	003fe306 	br	80ab40 <__alt_mem_onchip_memory2+0xff7eab40>
  80abb4:	00c00044 	movi	r3,1
  80abb8:	003fee06 	br	80ab74 <__alt_mem_onchip_memory2+0xff7eab74>

0080abbc <__modsi3>:
  80abbc:	20001716 	blt	r4,zero,80ac1c <__modsi3+0x60>
  80abc0:	000f883a 	mov	r7,zero
  80abc4:	2005883a 	mov	r2,r4
  80abc8:	28001216 	blt	r5,zero,80ac14 <__modsi3+0x58>
  80abcc:	2900162e 	bgeu	r5,r4,80ac28 <__modsi3+0x6c>
  80abd0:	01800804 	movi	r6,32
  80abd4:	00c00044 	movi	r3,1
  80abd8:	00000106 	br	80abe0 <__modsi3+0x24>
  80abdc:	30000a26 	beq	r6,zero,80ac08 <__modsi3+0x4c>
  80abe0:	294b883a 	add	r5,r5,r5
  80abe4:	31bfffc4 	addi	r6,r6,-1
  80abe8:	18c7883a 	add	r3,r3,r3
  80abec:	293ffb36 	bltu	r5,r4,80abdc <__alt_mem_onchip_memory2+0xff7eabdc>
  80abf0:	18000526 	beq	r3,zero,80ac08 <__modsi3+0x4c>
  80abf4:	1806d07a 	srli	r3,r3,1
  80abf8:	11400136 	bltu	r2,r5,80ac00 <__modsi3+0x44>
  80abfc:	1145c83a 	sub	r2,r2,r5
  80ac00:	280ad07a 	srli	r5,r5,1
  80ac04:	183ffb1e 	bne	r3,zero,80abf4 <__alt_mem_onchip_memory2+0xff7eabf4>
  80ac08:	38000126 	beq	r7,zero,80ac10 <__modsi3+0x54>
  80ac0c:	0085c83a 	sub	r2,zero,r2
  80ac10:	f800283a 	ret
  80ac14:	014bc83a 	sub	r5,zero,r5
  80ac18:	003fec06 	br	80abcc <__alt_mem_onchip_memory2+0xff7eabcc>
  80ac1c:	0109c83a 	sub	r4,zero,r4
  80ac20:	01c00044 	movi	r7,1
  80ac24:	003fe706 	br	80abc4 <__alt_mem_onchip_memory2+0xff7eabc4>
  80ac28:	00c00044 	movi	r3,1
  80ac2c:	003ff106 	br	80abf4 <__alt_mem_onchip_memory2+0xff7eabf4>

0080ac30 <__udivsi3>:
  80ac30:	200d883a 	mov	r6,r4
  80ac34:	2900152e 	bgeu	r5,r4,80ac8c <__udivsi3+0x5c>
  80ac38:	28001416 	blt	r5,zero,80ac8c <__udivsi3+0x5c>
  80ac3c:	00800804 	movi	r2,32
  80ac40:	00c00044 	movi	r3,1
  80ac44:	00000206 	br	80ac50 <__udivsi3+0x20>
  80ac48:	10000e26 	beq	r2,zero,80ac84 <__udivsi3+0x54>
  80ac4c:	28000516 	blt	r5,zero,80ac64 <__udivsi3+0x34>
  80ac50:	294b883a 	add	r5,r5,r5
  80ac54:	10bfffc4 	addi	r2,r2,-1
  80ac58:	18c7883a 	add	r3,r3,r3
  80ac5c:	293ffa36 	bltu	r5,r4,80ac48 <__alt_mem_onchip_memory2+0xff7eac48>
  80ac60:	18000826 	beq	r3,zero,80ac84 <__udivsi3+0x54>
  80ac64:	0005883a 	mov	r2,zero
  80ac68:	31400236 	bltu	r6,r5,80ac74 <__udivsi3+0x44>
  80ac6c:	314dc83a 	sub	r6,r6,r5
  80ac70:	10c4b03a 	or	r2,r2,r3
  80ac74:	1806d07a 	srli	r3,r3,1
  80ac78:	280ad07a 	srli	r5,r5,1
  80ac7c:	183ffa1e 	bne	r3,zero,80ac68 <__alt_mem_onchip_memory2+0xff7eac68>
  80ac80:	f800283a 	ret
  80ac84:	0005883a 	mov	r2,zero
  80ac88:	f800283a 	ret
  80ac8c:	00c00044 	movi	r3,1
  80ac90:	003ff406 	br	80ac64 <__alt_mem_onchip_memory2+0xff7eac64>

0080ac94 <__umodsi3>:
  80ac94:	2005883a 	mov	r2,r4
  80ac98:	2900122e 	bgeu	r5,r4,80ace4 <__umodsi3+0x50>
  80ac9c:	28001116 	blt	r5,zero,80ace4 <__umodsi3+0x50>
  80aca0:	01800804 	movi	r6,32
  80aca4:	00c00044 	movi	r3,1
  80aca8:	00000206 	br	80acb4 <__umodsi3+0x20>
  80acac:	30000c26 	beq	r6,zero,80ace0 <__umodsi3+0x4c>
  80acb0:	28000516 	blt	r5,zero,80acc8 <__umodsi3+0x34>
  80acb4:	294b883a 	add	r5,r5,r5
  80acb8:	31bfffc4 	addi	r6,r6,-1
  80acbc:	18c7883a 	add	r3,r3,r3
  80acc0:	293ffa36 	bltu	r5,r4,80acac <__alt_mem_onchip_memory2+0xff7eacac>
  80acc4:	18000626 	beq	r3,zero,80ace0 <__umodsi3+0x4c>
  80acc8:	1806d07a 	srli	r3,r3,1
  80accc:	11400136 	bltu	r2,r5,80acd4 <__umodsi3+0x40>
  80acd0:	1145c83a 	sub	r2,r2,r5
  80acd4:	280ad07a 	srli	r5,r5,1
  80acd8:	183ffb1e 	bne	r3,zero,80acc8 <__alt_mem_onchip_memory2+0xff7eacc8>
  80acdc:	f800283a 	ret
  80ace0:	f800283a 	ret
  80ace4:	00c00044 	movi	r3,1
  80ace8:	003ff706 	br	80acc8 <__alt_mem_onchip_memory2+0xff7eacc8>

0080acec <__mulsi3>:
  80acec:	0005883a 	mov	r2,zero
  80acf0:	20000726 	beq	r4,zero,80ad10 <__mulsi3+0x24>
  80acf4:	20c0004c 	andi	r3,r4,1
  80acf8:	2008d07a 	srli	r4,r4,1
  80acfc:	18000126 	beq	r3,zero,80ad04 <__mulsi3+0x18>
  80ad00:	1145883a 	add	r2,r2,r5
  80ad04:	294b883a 	add	r5,r5,r5
  80ad08:	203ffa1e 	bne	r4,zero,80acf4 <__alt_mem_onchip_memory2+0xff7eacf4>
  80ad0c:	f800283a 	ret
  80ad10:	f800283a 	ret

0080ad14 <__adddf3>:
  80ad14:	02c00434 	movhi	r11,16
  80ad18:	5affffc4 	addi	r11,r11,-1
  80ad1c:	2806d7fa 	srli	r3,r5,31
  80ad20:	2ad4703a 	and	r10,r5,r11
  80ad24:	3ad2703a 	and	r9,r7,r11
  80ad28:	3804d53a 	srli	r2,r7,20
  80ad2c:	3018d77a 	srli	r12,r6,29
  80ad30:	280ad53a 	srli	r5,r5,20
  80ad34:	501490fa 	slli	r10,r10,3
  80ad38:	2010d77a 	srli	r8,r4,29
  80ad3c:	481290fa 	slli	r9,r9,3
  80ad40:	380ed7fa 	srli	r7,r7,31
  80ad44:	defffb04 	addi	sp,sp,-20
  80ad48:	dc800215 	stw	r18,8(sp)
  80ad4c:	dc400115 	stw	r17,4(sp)
  80ad50:	dc000015 	stw	r16,0(sp)
  80ad54:	dfc00415 	stw	ra,16(sp)
  80ad58:	dcc00315 	stw	r19,12(sp)
  80ad5c:	1c803fcc 	andi	r18,r3,255
  80ad60:	2c01ffcc 	andi	r16,r5,2047
  80ad64:	5210b03a 	or	r8,r10,r8
  80ad68:	202290fa 	slli	r17,r4,3
  80ad6c:	1081ffcc 	andi	r2,r2,2047
  80ad70:	4b12b03a 	or	r9,r9,r12
  80ad74:	300c90fa 	slli	r6,r6,3
  80ad78:	91c07526 	beq	r18,r7,80af50 <__adddf3+0x23c>
  80ad7c:	8087c83a 	sub	r3,r16,r2
  80ad80:	00c0ab0e 	bge	zero,r3,80b030 <__adddf3+0x31c>
  80ad84:	10002a1e 	bne	r2,zero,80ae30 <__adddf3+0x11c>
  80ad88:	4984b03a 	or	r2,r9,r6
  80ad8c:	1000961e 	bne	r2,zero,80afe8 <__adddf3+0x2d4>
  80ad90:	888001cc 	andi	r2,r17,7
  80ad94:	10000726 	beq	r2,zero,80adb4 <__adddf3+0xa0>
  80ad98:	888003cc 	andi	r2,r17,15
  80ad9c:	00c00104 	movi	r3,4
  80ada0:	10c00426 	beq	r2,r3,80adb4 <__adddf3+0xa0>
  80ada4:	88c7883a 	add	r3,r17,r3
  80ada8:	1c63803a 	cmpltu	r17,r3,r17
  80adac:	4451883a 	add	r8,r8,r17
  80adb0:	1823883a 	mov	r17,r3
  80adb4:	4080202c 	andhi	r2,r8,128
  80adb8:	10005926 	beq	r2,zero,80af20 <__adddf3+0x20c>
  80adbc:	84000044 	addi	r16,r16,1
  80adc0:	0081ffc4 	movi	r2,2047
  80adc4:	8080ba26 	beq	r16,r2,80b0b0 <__adddf3+0x39c>
  80adc8:	00bfe034 	movhi	r2,65408
  80adcc:	10bfffc4 	addi	r2,r2,-1
  80add0:	4090703a 	and	r8,r8,r2
  80add4:	4004977a 	slli	r2,r8,29
  80add8:	4010927a 	slli	r8,r8,9
  80addc:	8822d0fa 	srli	r17,r17,3
  80ade0:	8401ffcc 	andi	r16,r16,2047
  80ade4:	4010d33a 	srli	r8,r8,12
  80ade8:	9007883a 	mov	r3,r18
  80adec:	1444b03a 	or	r2,r2,r17
  80adf0:	8401ffcc 	andi	r16,r16,2047
  80adf4:	8020953a 	slli	r16,r16,20
  80adf8:	18c03fcc 	andi	r3,r3,255
  80adfc:	01000434 	movhi	r4,16
  80ae00:	213fffc4 	addi	r4,r4,-1
  80ae04:	180697fa 	slli	r3,r3,31
  80ae08:	4110703a 	and	r8,r8,r4
  80ae0c:	4410b03a 	or	r8,r8,r16
  80ae10:	40c6b03a 	or	r3,r8,r3
  80ae14:	dfc00417 	ldw	ra,16(sp)
  80ae18:	dcc00317 	ldw	r19,12(sp)
  80ae1c:	dc800217 	ldw	r18,8(sp)
  80ae20:	dc400117 	ldw	r17,4(sp)
  80ae24:	dc000017 	ldw	r16,0(sp)
  80ae28:	dec00504 	addi	sp,sp,20
  80ae2c:	f800283a 	ret
  80ae30:	0081ffc4 	movi	r2,2047
  80ae34:	80bfd626 	beq	r16,r2,80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80ae38:	4a402034 	orhi	r9,r9,128
  80ae3c:	00800e04 	movi	r2,56
  80ae40:	10c09f16 	blt	r2,r3,80b0c0 <__adddf3+0x3ac>
  80ae44:	008007c4 	movi	r2,31
  80ae48:	10c0c216 	blt	r2,r3,80b154 <__adddf3+0x440>
  80ae4c:	00800804 	movi	r2,32
  80ae50:	10c5c83a 	sub	r2,r2,r3
  80ae54:	488a983a 	sll	r5,r9,r2
  80ae58:	30c8d83a 	srl	r4,r6,r3
  80ae5c:	3084983a 	sll	r2,r6,r2
  80ae60:	48c6d83a 	srl	r3,r9,r3
  80ae64:	290cb03a 	or	r6,r5,r4
  80ae68:	1004c03a 	cmpne	r2,r2,zero
  80ae6c:	308cb03a 	or	r6,r6,r2
  80ae70:	898dc83a 	sub	r6,r17,r6
  80ae74:	89a3803a 	cmpltu	r17,r17,r6
  80ae78:	40d1c83a 	sub	r8,r8,r3
  80ae7c:	4451c83a 	sub	r8,r8,r17
  80ae80:	3023883a 	mov	r17,r6
  80ae84:	4080202c 	andhi	r2,r8,128
  80ae88:	10002326 	beq	r2,zero,80af18 <__adddf3+0x204>
  80ae8c:	04c02034 	movhi	r19,128
  80ae90:	9cffffc4 	addi	r19,r19,-1
  80ae94:	44e6703a 	and	r19,r8,r19
  80ae98:	98007626 	beq	r19,zero,80b074 <__adddf3+0x360>
  80ae9c:	9809883a 	mov	r4,r19
  80aea0:	080d5540 	call	80d554 <__clzsi2>
  80aea4:	10fffe04 	addi	r3,r2,-8
  80aea8:	010007c4 	movi	r4,31
  80aeac:	20c07716 	blt	r4,r3,80b08c <__adddf3+0x378>
  80aeb0:	00800804 	movi	r2,32
  80aeb4:	10c5c83a 	sub	r2,r2,r3
  80aeb8:	8884d83a 	srl	r2,r17,r2
  80aebc:	98d0983a 	sll	r8,r19,r3
  80aec0:	88e2983a 	sll	r17,r17,r3
  80aec4:	1204b03a 	or	r2,r2,r8
  80aec8:	1c007416 	blt	r3,r16,80b09c <__adddf3+0x388>
  80aecc:	1c21c83a 	sub	r16,r3,r16
  80aed0:	82000044 	addi	r8,r16,1
  80aed4:	00c007c4 	movi	r3,31
  80aed8:	1a009116 	blt	r3,r8,80b120 <__adddf3+0x40c>
  80aedc:	00c00804 	movi	r3,32
  80aee0:	1a07c83a 	sub	r3,r3,r8
  80aee4:	8a08d83a 	srl	r4,r17,r8
  80aee8:	88e2983a 	sll	r17,r17,r3
  80aeec:	10c6983a 	sll	r3,r2,r3
  80aef0:	1210d83a 	srl	r8,r2,r8
  80aef4:	8804c03a 	cmpne	r2,r17,zero
  80aef8:	1906b03a 	or	r3,r3,r4
  80aefc:	18a2b03a 	or	r17,r3,r2
  80af00:	0021883a 	mov	r16,zero
  80af04:	003fa206 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80af08:	1890b03a 	or	r8,r3,r2
  80af0c:	40017d26 	beq	r8,zero,80b504 <__adddf3+0x7f0>
  80af10:	1011883a 	mov	r8,r2
  80af14:	1823883a 	mov	r17,r3
  80af18:	888001cc 	andi	r2,r17,7
  80af1c:	103f9e1e 	bne	r2,zero,80ad98 <__alt_mem_onchip_memory2+0xff7ead98>
  80af20:	4004977a 	slli	r2,r8,29
  80af24:	8822d0fa 	srli	r17,r17,3
  80af28:	4010d0fa 	srli	r8,r8,3
  80af2c:	9007883a 	mov	r3,r18
  80af30:	1444b03a 	or	r2,r2,r17
  80af34:	0101ffc4 	movi	r4,2047
  80af38:	81002426 	beq	r16,r4,80afcc <__adddf3+0x2b8>
  80af3c:	8120703a 	and	r16,r16,r4
  80af40:	01000434 	movhi	r4,16
  80af44:	213fffc4 	addi	r4,r4,-1
  80af48:	4110703a 	and	r8,r8,r4
  80af4c:	003fa806 	br	80adf0 <__alt_mem_onchip_memory2+0xff7eadf0>
  80af50:	8089c83a 	sub	r4,r16,r2
  80af54:	01005e0e 	bge	zero,r4,80b0d0 <__adddf3+0x3bc>
  80af58:	10002b26 	beq	r2,zero,80b008 <__adddf3+0x2f4>
  80af5c:	0081ffc4 	movi	r2,2047
  80af60:	80bf8b26 	beq	r16,r2,80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80af64:	4a402034 	orhi	r9,r9,128
  80af68:	00800e04 	movi	r2,56
  80af6c:	1100a40e 	bge	r2,r4,80b200 <__adddf3+0x4ec>
  80af70:	498cb03a 	or	r6,r9,r6
  80af74:	300ac03a 	cmpne	r5,r6,zero
  80af78:	0013883a 	mov	r9,zero
  80af7c:	2c4b883a 	add	r5,r5,r17
  80af80:	2c63803a 	cmpltu	r17,r5,r17
  80af84:	4a11883a 	add	r8,r9,r8
  80af88:	8a11883a 	add	r8,r17,r8
  80af8c:	2823883a 	mov	r17,r5
  80af90:	4080202c 	andhi	r2,r8,128
  80af94:	103fe026 	beq	r2,zero,80af18 <__alt_mem_onchip_memory2+0xff7eaf18>
  80af98:	84000044 	addi	r16,r16,1
  80af9c:	0081ffc4 	movi	r2,2047
  80afa0:	8080d226 	beq	r16,r2,80b2ec <__adddf3+0x5d8>
  80afa4:	00bfe034 	movhi	r2,65408
  80afa8:	10bfffc4 	addi	r2,r2,-1
  80afac:	4090703a 	and	r8,r8,r2
  80afb0:	880ad07a 	srli	r5,r17,1
  80afb4:	400897fa 	slli	r4,r8,31
  80afb8:	88c0004c 	andi	r3,r17,1
  80afbc:	28e2b03a 	or	r17,r5,r3
  80afc0:	4010d07a 	srli	r8,r8,1
  80afc4:	2462b03a 	or	r17,r4,r17
  80afc8:	003f7106 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80afcc:	4088b03a 	or	r4,r8,r2
  80afd0:	20014526 	beq	r4,zero,80b4e8 <__adddf3+0x7d4>
  80afd4:	01000434 	movhi	r4,16
  80afd8:	42000234 	orhi	r8,r8,8
  80afdc:	213fffc4 	addi	r4,r4,-1
  80afe0:	4110703a 	and	r8,r8,r4
  80afe4:	003f8206 	br	80adf0 <__alt_mem_onchip_memory2+0xff7eadf0>
  80afe8:	18ffffc4 	addi	r3,r3,-1
  80afec:	1800491e 	bne	r3,zero,80b114 <__adddf3+0x400>
  80aff0:	898bc83a 	sub	r5,r17,r6
  80aff4:	8963803a 	cmpltu	r17,r17,r5
  80aff8:	4251c83a 	sub	r8,r8,r9
  80affc:	4451c83a 	sub	r8,r8,r17
  80b000:	2823883a 	mov	r17,r5
  80b004:	003f9f06 	br	80ae84 <__alt_mem_onchip_memory2+0xff7eae84>
  80b008:	4984b03a 	or	r2,r9,r6
  80b00c:	103f6026 	beq	r2,zero,80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b010:	213fffc4 	addi	r4,r4,-1
  80b014:	2000931e 	bne	r4,zero,80b264 <__adddf3+0x550>
  80b018:	898d883a 	add	r6,r17,r6
  80b01c:	3463803a 	cmpltu	r17,r6,r17
  80b020:	4251883a 	add	r8,r8,r9
  80b024:	8a11883a 	add	r8,r17,r8
  80b028:	3023883a 	mov	r17,r6
  80b02c:	003fd806 	br	80af90 <__alt_mem_onchip_memory2+0xff7eaf90>
  80b030:	1800541e 	bne	r3,zero,80b184 <__adddf3+0x470>
  80b034:	80800044 	addi	r2,r16,1
  80b038:	1081ffcc 	andi	r2,r2,2047
  80b03c:	00c00044 	movi	r3,1
  80b040:	1880a00e 	bge	r3,r2,80b2c4 <__adddf3+0x5b0>
  80b044:	8989c83a 	sub	r4,r17,r6
  80b048:	8905803a 	cmpltu	r2,r17,r4
  80b04c:	4267c83a 	sub	r19,r8,r9
  80b050:	98a7c83a 	sub	r19,r19,r2
  80b054:	9880202c 	andhi	r2,r19,128
  80b058:	10006326 	beq	r2,zero,80b1e8 <__adddf3+0x4d4>
  80b05c:	3463c83a 	sub	r17,r6,r17
  80b060:	4a07c83a 	sub	r3,r9,r8
  80b064:	344d803a 	cmpltu	r6,r6,r17
  80b068:	19a7c83a 	sub	r19,r3,r6
  80b06c:	3825883a 	mov	r18,r7
  80b070:	983f8a1e 	bne	r19,zero,80ae9c <__alt_mem_onchip_memory2+0xff7eae9c>
  80b074:	8809883a 	mov	r4,r17
  80b078:	080d5540 	call	80d554 <__clzsi2>
  80b07c:	10800804 	addi	r2,r2,32
  80b080:	10fffe04 	addi	r3,r2,-8
  80b084:	010007c4 	movi	r4,31
  80b088:	20ff890e 	bge	r4,r3,80aeb0 <__alt_mem_onchip_memory2+0xff7eaeb0>
  80b08c:	10bff604 	addi	r2,r2,-40
  80b090:	8884983a 	sll	r2,r17,r2
  80b094:	0023883a 	mov	r17,zero
  80b098:	1c3f8c0e 	bge	r3,r16,80aecc <__alt_mem_onchip_memory2+0xff7eaecc>
  80b09c:	023fe034 	movhi	r8,65408
  80b0a0:	423fffc4 	addi	r8,r8,-1
  80b0a4:	80e1c83a 	sub	r16,r16,r3
  80b0a8:	1210703a 	and	r8,r2,r8
  80b0ac:	003f3806 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b0b0:	9007883a 	mov	r3,r18
  80b0b4:	0011883a 	mov	r8,zero
  80b0b8:	0005883a 	mov	r2,zero
  80b0bc:	003f4c06 	br	80adf0 <__alt_mem_onchip_memory2+0xff7eadf0>
  80b0c0:	498cb03a 	or	r6,r9,r6
  80b0c4:	300cc03a 	cmpne	r6,r6,zero
  80b0c8:	0007883a 	mov	r3,zero
  80b0cc:	003f6806 	br	80ae70 <__alt_mem_onchip_memory2+0xff7eae70>
  80b0d0:	20009c1e 	bne	r4,zero,80b344 <__adddf3+0x630>
  80b0d4:	80800044 	addi	r2,r16,1
  80b0d8:	1141ffcc 	andi	r5,r2,2047
  80b0dc:	01000044 	movi	r4,1
  80b0e0:	2140670e 	bge	r4,r5,80b280 <__adddf3+0x56c>
  80b0e4:	0101ffc4 	movi	r4,2047
  80b0e8:	11007f26 	beq	r2,r4,80b2e8 <__adddf3+0x5d4>
  80b0ec:	898d883a 	add	r6,r17,r6
  80b0f0:	4247883a 	add	r3,r8,r9
  80b0f4:	3451803a 	cmpltu	r8,r6,r17
  80b0f8:	40d1883a 	add	r8,r8,r3
  80b0fc:	402297fa 	slli	r17,r8,31
  80b100:	300cd07a 	srli	r6,r6,1
  80b104:	4010d07a 	srli	r8,r8,1
  80b108:	1021883a 	mov	r16,r2
  80b10c:	89a2b03a 	or	r17,r17,r6
  80b110:	003f1f06 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b114:	0081ffc4 	movi	r2,2047
  80b118:	80bf481e 	bne	r16,r2,80ae3c <__alt_mem_onchip_memory2+0xff7eae3c>
  80b11c:	003f1c06 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b120:	843ff844 	addi	r16,r16,-31
  80b124:	01000804 	movi	r4,32
  80b128:	1406d83a 	srl	r3,r2,r16
  80b12c:	41005026 	beq	r8,r4,80b270 <__adddf3+0x55c>
  80b130:	01001004 	movi	r4,64
  80b134:	2211c83a 	sub	r8,r4,r8
  80b138:	1204983a 	sll	r2,r2,r8
  80b13c:	88a2b03a 	or	r17,r17,r2
  80b140:	8822c03a 	cmpne	r17,r17,zero
  80b144:	1c62b03a 	or	r17,r3,r17
  80b148:	0011883a 	mov	r8,zero
  80b14c:	0021883a 	mov	r16,zero
  80b150:	003f7106 	br	80af18 <__alt_mem_onchip_memory2+0xff7eaf18>
  80b154:	193ff804 	addi	r4,r3,-32
  80b158:	00800804 	movi	r2,32
  80b15c:	4908d83a 	srl	r4,r9,r4
  80b160:	18804526 	beq	r3,r2,80b278 <__adddf3+0x564>
  80b164:	00801004 	movi	r2,64
  80b168:	10c5c83a 	sub	r2,r2,r3
  80b16c:	4886983a 	sll	r3,r9,r2
  80b170:	198cb03a 	or	r6,r3,r6
  80b174:	300cc03a 	cmpne	r6,r6,zero
  80b178:	218cb03a 	or	r6,r4,r6
  80b17c:	0007883a 	mov	r3,zero
  80b180:	003f3b06 	br	80ae70 <__alt_mem_onchip_memory2+0xff7eae70>
  80b184:	80002a26 	beq	r16,zero,80b230 <__adddf3+0x51c>
  80b188:	0101ffc4 	movi	r4,2047
  80b18c:	11006826 	beq	r2,r4,80b330 <__adddf3+0x61c>
  80b190:	00c7c83a 	sub	r3,zero,r3
  80b194:	42002034 	orhi	r8,r8,128
  80b198:	01000e04 	movi	r4,56
  80b19c:	20c07c16 	blt	r4,r3,80b390 <__adddf3+0x67c>
  80b1a0:	010007c4 	movi	r4,31
  80b1a4:	20c0da16 	blt	r4,r3,80b510 <__adddf3+0x7fc>
  80b1a8:	01000804 	movi	r4,32
  80b1ac:	20c9c83a 	sub	r4,r4,r3
  80b1b0:	4114983a 	sll	r10,r8,r4
  80b1b4:	88cad83a 	srl	r5,r17,r3
  80b1b8:	8908983a 	sll	r4,r17,r4
  80b1bc:	40c6d83a 	srl	r3,r8,r3
  80b1c0:	5162b03a 	or	r17,r10,r5
  80b1c4:	2008c03a 	cmpne	r4,r4,zero
  80b1c8:	8922b03a 	or	r17,r17,r4
  80b1cc:	3463c83a 	sub	r17,r6,r17
  80b1d0:	48c7c83a 	sub	r3,r9,r3
  80b1d4:	344d803a 	cmpltu	r6,r6,r17
  80b1d8:	1991c83a 	sub	r8,r3,r6
  80b1dc:	1021883a 	mov	r16,r2
  80b1e0:	3825883a 	mov	r18,r7
  80b1e4:	003f2706 	br	80ae84 <__alt_mem_onchip_memory2+0xff7eae84>
  80b1e8:	24d0b03a 	or	r8,r4,r19
  80b1ec:	40001b1e 	bne	r8,zero,80b25c <__adddf3+0x548>
  80b1f0:	0005883a 	mov	r2,zero
  80b1f4:	0007883a 	mov	r3,zero
  80b1f8:	0021883a 	mov	r16,zero
  80b1fc:	003f4d06 	br	80af34 <__alt_mem_onchip_memory2+0xff7eaf34>
  80b200:	008007c4 	movi	r2,31
  80b204:	11003c16 	blt	r2,r4,80b2f8 <__adddf3+0x5e4>
  80b208:	00800804 	movi	r2,32
  80b20c:	1105c83a 	sub	r2,r2,r4
  80b210:	488e983a 	sll	r7,r9,r2
  80b214:	310ad83a 	srl	r5,r6,r4
  80b218:	3084983a 	sll	r2,r6,r2
  80b21c:	4912d83a 	srl	r9,r9,r4
  80b220:	394ab03a 	or	r5,r7,r5
  80b224:	1004c03a 	cmpne	r2,r2,zero
  80b228:	288ab03a 	or	r5,r5,r2
  80b22c:	003f5306 	br	80af7c <__alt_mem_onchip_memory2+0xff7eaf7c>
  80b230:	4448b03a 	or	r4,r8,r17
  80b234:	20003e26 	beq	r4,zero,80b330 <__adddf3+0x61c>
  80b238:	00c6303a 	nor	r3,zero,r3
  80b23c:	18003a1e 	bne	r3,zero,80b328 <__adddf3+0x614>
  80b240:	3463c83a 	sub	r17,r6,r17
  80b244:	4a07c83a 	sub	r3,r9,r8
  80b248:	344d803a 	cmpltu	r6,r6,r17
  80b24c:	1991c83a 	sub	r8,r3,r6
  80b250:	1021883a 	mov	r16,r2
  80b254:	3825883a 	mov	r18,r7
  80b258:	003f0a06 	br	80ae84 <__alt_mem_onchip_memory2+0xff7eae84>
  80b25c:	2023883a 	mov	r17,r4
  80b260:	003f0d06 	br	80ae98 <__alt_mem_onchip_memory2+0xff7eae98>
  80b264:	0081ffc4 	movi	r2,2047
  80b268:	80bf3f1e 	bne	r16,r2,80af68 <__alt_mem_onchip_memory2+0xff7eaf68>
  80b26c:	003ec806 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b270:	0005883a 	mov	r2,zero
  80b274:	003fb106 	br	80b13c <__alt_mem_onchip_memory2+0xff7eb13c>
  80b278:	0007883a 	mov	r3,zero
  80b27c:	003fbc06 	br	80b170 <__alt_mem_onchip_memory2+0xff7eb170>
  80b280:	4444b03a 	or	r2,r8,r17
  80b284:	8000871e 	bne	r16,zero,80b4a4 <__adddf3+0x790>
  80b288:	1000ba26 	beq	r2,zero,80b574 <__adddf3+0x860>
  80b28c:	4984b03a 	or	r2,r9,r6
  80b290:	103ebf26 	beq	r2,zero,80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b294:	8985883a 	add	r2,r17,r6
  80b298:	4247883a 	add	r3,r8,r9
  80b29c:	1451803a 	cmpltu	r8,r2,r17
  80b2a0:	40d1883a 	add	r8,r8,r3
  80b2a4:	40c0202c 	andhi	r3,r8,128
  80b2a8:	1023883a 	mov	r17,r2
  80b2ac:	183f1a26 	beq	r3,zero,80af18 <__alt_mem_onchip_memory2+0xff7eaf18>
  80b2b0:	00bfe034 	movhi	r2,65408
  80b2b4:	10bfffc4 	addi	r2,r2,-1
  80b2b8:	2021883a 	mov	r16,r4
  80b2bc:	4090703a 	and	r8,r8,r2
  80b2c0:	003eb306 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b2c4:	4444b03a 	or	r2,r8,r17
  80b2c8:	8000291e 	bne	r16,zero,80b370 <__adddf3+0x65c>
  80b2cc:	10004b1e 	bne	r2,zero,80b3fc <__adddf3+0x6e8>
  80b2d0:	4990b03a 	or	r8,r9,r6
  80b2d4:	40008b26 	beq	r8,zero,80b504 <__adddf3+0x7f0>
  80b2d8:	4811883a 	mov	r8,r9
  80b2dc:	3023883a 	mov	r17,r6
  80b2e0:	3825883a 	mov	r18,r7
  80b2e4:	003eaa06 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b2e8:	1021883a 	mov	r16,r2
  80b2ec:	0011883a 	mov	r8,zero
  80b2f0:	0005883a 	mov	r2,zero
  80b2f4:	003f0f06 	br	80af34 <__alt_mem_onchip_memory2+0xff7eaf34>
  80b2f8:	217ff804 	addi	r5,r4,-32
  80b2fc:	00800804 	movi	r2,32
  80b300:	494ad83a 	srl	r5,r9,r5
  80b304:	20807d26 	beq	r4,r2,80b4fc <__adddf3+0x7e8>
  80b308:	00801004 	movi	r2,64
  80b30c:	1109c83a 	sub	r4,r2,r4
  80b310:	4912983a 	sll	r9,r9,r4
  80b314:	498cb03a 	or	r6,r9,r6
  80b318:	300cc03a 	cmpne	r6,r6,zero
  80b31c:	298ab03a 	or	r5,r5,r6
  80b320:	0013883a 	mov	r9,zero
  80b324:	003f1506 	br	80af7c <__alt_mem_onchip_memory2+0xff7eaf7c>
  80b328:	0101ffc4 	movi	r4,2047
  80b32c:	113f9a1e 	bne	r2,r4,80b198 <__alt_mem_onchip_memory2+0xff7eb198>
  80b330:	4811883a 	mov	r8,r9
  80b334:	3023883a 	mov	r17,r6
  80b338:	1021883a 	mov	r16,r2
  80b33c:	3825883a 	mov	r18,r7
  80b340:	003e9306 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b344:	8000161e 	bne	r16,zero,80b3a0 <__adddf3+0x68c>
  80b348:	444ab03a 	or	r5,r8,r17
  80b34c:	28005126 	beq	r5,zero,80b494 <__adddf3+0x780>
  80b350:	0108303a 	nor	r4,zero,r4
  80b354:	20004d1e 	bne	r4,zero,80b48c <__adddf3+0x778>
  80b358:	89a3883a 	add	r17,r17,r6
  80b35c:	4253883a 	add	r9,r8,r9
  80b360:	898d803a 	cmpltu	r6,r17,r6
  80b364:	3251883a 	add	r8,r6,r9
  80b368:	1021883a 	mov	r16,r2
  80b36c:	003f0806 	br	80af90 <__alt_mem_onchip_memory2+0xff7eaf90>
  80b370:	1000301e 	bne	r2,zero,80b434 <__adddf3+0x720>
  80b374:	4984b03a 	or	r2,r9,r6
  80b378:	10007126 	beq	r2,zero,80b540 <__adddf3+0x82c>
  80b37c:	4811883a 	mov	r8,r9
  80b380:	3023883a 	mov	r17,r6
  80b384:	3825883a 	mov	r18,r7
  80b388:	0401ffc4 	movi	r16,2047
  80b38c:	003e8006 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b390:	4462b03a 	or	r17,r8,r17
  80b394:	8822c03a 	cmpne	r17,r17,zero
  80b398:	0007883a 	mov	r3,zero
  80b39c:	003f8b06 	br	80b1cc <__alt_mem_onchip_memory2+0xff7eb1cc>
  80b3a0:	0141ffc4 	movi	r5,2047
  80b3a4:	11403b26 	beq	r2,r5,80b494 <__adddf3+0x780>
  80b3a8:	0109c83a 	sub	r4,zero,r4
  80b3ac:	42002034 	orhi	r8,r8,128
  80b3b0:	01400e04 	movi	r5,56
  80b3b4:	29006716 	blt	r5,r4,80b554 <__adddf3+0x840>
  80b3b8:	014007c4 	movi	r5,31
  80b3bc:	29007016 	blt	r5,r4,80b580 <__adddf3+0x86c>
  80b3c0:	01400804 	movi	r5,32
  80b3c4:	290bc83a 	sub	r5,r5,r4
  80b3c8:	4154983a 	sll	r10,r8,r5
  80b3cc:	890ed83a 	srl	r7,r17,r4
  80b3d0:	894a983a 	sll	r5,r17,r5
  80b3d4:	4108d83a 	srl	r4,r8,r4
  80b3d8:	51e2b03a 	or	r17,r10,r7
  80b3dc:	280ac03a 	cmpne	r5,r5,zero
  80b3e0:	8962b03a 	or	r17,r17,r5
  80b3e4:	89a3883a 	add	r17,r17,r6
  80b3e8:	2253883a 	add	r9,r4,r9
  80b3ec:	898d803a 	cmpltu	r6,r17,r6
  80b3f0:	3251883a 	add	r8,r6,r9
  80b3f4:	1021883a 	mov	r16,r2
  80b3f8:	003ee506 	br	80af90 <__alt_mem_onchip_memory2+0xff7eaf90>
  80b3fc:	4984b03a 	or	r2,r9,r6
  80b400:	103e6326 	beq	r2,zero,80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b404:	8987c83a 	sub	r3,r17,r6
  80b408:	88c9803a 	cmpltu	r4,r17,r3
  80b40c:	4245c83a 	sub	r2,r8,r9
  80b410:	1105c83a 	sub	r2,r2,r4
  80b414:	1100202c 	andhi	r4,r2,128
  80b418:	203ebb26 	beq	r4,zero,80af08 <__alt_mem_onchip_memory2+0xff7eaf08>
  80b41c:	3463c83a 	sub	r17,r6,r17
  80b420:	4a07c83a 	sub	r3,r9,r8
  80b424:	344d803a 	cmpltu	r6,r6,r17
  80b428:	1991c83a 	sub	r8,r3,r6
  80b42c:	3825883a 	mov	r18,r7
  80b430:	003e5706 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b434:	4984b03a 	or	r2,r9,r6
  80b438:	10002e26 	beq	r2,zero,80b4f4 <__adddf3+0x7e0>
  80b43c:	4004d0fa 	srli	r2,r8,3
  80b440:	8822d0fa 	srli	r17,r17,3
  80b444:	4010977a 	slli	r8,r8,29
  80b448:	10c0022c 	andhi	r3,r2,8
  80b44c:	4462b03a 	or	r17,r8,r17
  80b450:	18000826 	beq	r3,zero,80b474 <__adddf3+0x760>
  80b454:	4808d0fa 	srli	r4,r9,3
  80b458:	20c0022c 	andhi	r3,r4,8
  80b45c:	1800051e 	bne	r3,zero,80b474 <__adddf3+0x760>
  80b460:	300cd0fa 	srli	r6,r6,3
  80b464:	4806977a 	slli	r3,r9,29
  80b468:	2005883a 	mov	r2,r4
  80b46c:	3825883a 	mov	r18,r7
  80b470:	19a2b03a 	or	r17,r3,r6
  80b474:	8810d77a 	srli	r8,r17,29
  80b478:	100490fa 	slli	r2,r2,3
  80b47c:	882290fa 	slli	r17,r17,3
  80b480:	0401ffc4 	movi	r16,2047
  80b484:	4090b03a 	or	r8,r8,r2
  80b488:	003e4106 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b48c:	0141ffc4 	movi	r5,2047
  80b490:	117fc71e 	bne	r2,r5,80b3b0 <__alt_mem_onchip_memory2+0xff7eb3b0>
  80b494:	4811883a 	mov	r8,r9
  80b498:	3023883a 	mov	r17,r6
  80b49c:	1021883a 	mov	r16,r2
  80b4a0:	003e3b06 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b4a4:	10002f26 	beq	r2,zero,80b564 <__adddf3+0x850>
  80b4a8:	4984b03a 	or	r2,r9,r6
  80b4ac:	10001126 	beq	r2,zero,80b4f4 <__adddf3+0x7e0>
  80b4b0:	4004d0fa 	srli	r2,r8,3
  80b4b4:	8822d0fa 	srli	r17,r17,3
  80b4b8:	4010977a 	slli	r8,r8,29
  80b4bc:	10c0022c 	andhi	r3,r2,8
  80b4c0:	4462b03a 	or	r17,r8,r17
  80b4c4:	183feb26 	beq	r3,zero,80b474 <__alt_mem_onchip_memory2+0xff7eb474>
  80b4c8:	4808d0fa 	srli	r4,r9,3
  80b4cc:	20c0022c 	andhi	r3,r4,8
  80b4d0:	183fe81e 	bne	r3,zero,80b474 <__alt_mem_onchip_memory2+0xff7eb474>
  80b4d4:	300cd0fa 	srli	r6,r6,3
  80b4d8:	4806977a 	slli	r3,r9,29
  80b4dc:	2005883a 	mov	r2,r4
  80b4e0:	19a2b03a 	or	r17,r3,r6
  80b4e4:	003fe306 	br	80b474 <__alt_mem_onchip_memory2+0xff7eb474>
  80b4e8:	0011883a 	mov	r8,zero
  80b4ec:	0005883a 	mov	r2,zero
  80b4f0:	003e3f06 	br	80adf0 <__alt_mem_onchip_memory2+0xff7eadf0>
  80b4f4:	0401ffc4 	movi	r16,2047
  80b4f8:	003e2506 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b4fc:	0013883a 	mov	r9,zero
  80b500:	003f8406 	br	80b314 <__alt_mem_onchip_memory2+0xff7eb314>
  80b504:	0005883a 	mov	r2,zero
  80b508:	0007883a 	mov	r3,zero
  80b50c:	003e8906 	br	80af34 <__alt_mem_onchip_memory2+0xff7eaf34>
  80b510:	197ff804 	addi	r5,r3,-32
  80b514:	01000804 	movi	r4,32
  80b518:	414ad83a 	srl	r5,r8,r5
  80b51c:	19002426 	beq	r3,r4,80b5b0 <__adddf3+0x89c>
  80b520:	01001004 	movi	r4,64
  80b524:	20c7c83a 	sub	r3,r4,r3
  80b528:	40c6983a 	sll	r3,r8,r3
  80b52c:	1c46b03a 	or	r3,r3,r17
  80b530:	1806c03a 	cmpne	r3,r3,zero
  80b534:	28e2b03a 	or	r17,r5,r3
  80b538:	0007883a 	mov	r3,zero
  80b53c:	003f2306 	br	80b1cc <__alt_mem_onchip_memory2+0xff7eb1cc>
  80b540:	0007883a 	mov	r3,zero
  80b544:	5811883a 	mov	r8,r11
  80b548:	00bfffc4 	movi	r2,-1
  80b54c:	0401ffc4 	movi	r16,2047
  80b550:	003e7806 	br	80af34 <__alt_mem_onchip_memory2+0xff7eaf34>
  80b554:	4462b03a 	or	r17,r8,r17
  80b558:	8822c03a 	cmpne	r17,r17,zero
  80b55c:	0009883a 	mov	r4,zero
  80b560:	003fa006 	br	80b3e4 <__alt_mem_onchip_memory2+0xff7eb3e4>
  80b564:	4811883a 	mov	r8,r9
  80b568:	3023883a 	mov	r17,r6
  80b56c:	0401ffc4 	movi	r16,2047
  80b570:	003e0706 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b574:	4811883a 	mov	r8,r9
  80b578:	3023883a 	mov	r17,r6
  80b57c:	003e0406 	br	80ad90 <__alt_mem_onchip_memory2+0xff7ead90>
  80b580:	21fff804 	addi	r7,r4,-32
  80b584:	01400804 	movi	r5,32
  80b588:	41ced83a 	srl	r7,r8,r7
  80b58c:	21400a26 	beq	r4,r5,80b5b8 <__adddf3+0x8a4>
  80b590:	01401004 	movi	r5,64
  80b594:	2909c83a 	sub	r4,r5,r4
  80b598:	4108983a 	sll	r4,r8,r4
  80b59c:	2448b03a 	or	r4,r4,r17
  80b5a0:	2008c03a 	cmpne	r4,r4,zero
  80b5a4:	3922b03a 	or	r17,r7,r4
  80b5a8:	0009883a 	mov	r4,zero
  80b5ac:	003f8d06 	br	80b3e4 <__alt_mem_onchip_memory2+0xff7eb3e4>
  80b5b0:	0007883a 	mov	r3,zero
  80b5b4:	003fdd06 	br	80b52c <__alt_mem_onchip_memory2+0xff7eb52c>
  80b5b8:	0009883a 	mov	r4,zero
  80b5bc:	003ff706 	br	80b59c <__alt_mem_onchip_memory2+0xff7eb59c>

0080b5c0 <__divdf3>:
  80b5c0:	defff004 	addi	sp,sp,-64
  80b5c4:	dc800815 	stw	r18,32(sp)
  80b5c8:	2824d53a 	srli	r18,r5,20
  80b5cc:	dd800c15 	stw	r22,48(sp)
  80b5d0:	282cd7fa 	srli	r22,r5,31
  80b5d4:	dc000615 	stw	r16,24(sp)
  80b5d8:	04000434 	movhi	r16,16
  80b5dc:	843fffc4 	addi	r16,r16,-1
  80b5e0:	dfc00f15 	stw	ra,60(sp)
  80b5e4:	df000e15 	stw	fp,56(sp)
  80b5e8:	ddc00d15 	stw	r23,52(sp)
  80b5ec:	dd400b15 	stw	r21,44(sp)
  80b5f0:	dd000a15 	stw	r20,40(sp)
  80b5f4:	dcc00915 	stw	r19,36(sp)
  80b5f8:	dc400715 	stw	r17,28(sp)
  80b5fc:	9481ffcc 	andi	r18,r18,2047
  80b600:	2c20703a 	and	r16,r5,r16
  80b604:	b2003fcc 	andi	r8,r22,255
  80b608:	90006126 	beq	r18,zero,80b790 <__divdf3+0x1d0>
  80b60c:	0081ffc4 	movi	r2,2047
  80b610:	202b883a 	mov	r21,r4
  80b614:	90803726 	beq	r18,r2,80b6f4 <__divdf3+0x134>
  80b618:	80800434 	orhi	r2,r16,16
  80b61c:	100490fa 	slli	r2,r2,3
  80b620:	2020d77a 	srli	r16,r4,29
  80b624:	202a90fa 	slli	r21,r4,3
  80b628:	94bf0044 	addi	r18,r18,-1023
  80b62c:	80a0b03a 	or	r16,r16,r2
  80b630:	0013883a 	mov	r9,zero
  80b634:	000b883a 	mov	r5,zero
  80b638:	3806d53a 	srli	r3,r7,20
  80b63c:	382ed7fa 	srli	r23,r7,31
  80b640:	04400434 	movhi	r17,16
  80b644:	8c7fffc4 	addi	r17,r17,-1
  80b648:	18c1ffcc 	andi	r3,r3,2047
  80b64c:	3029883a 	mov	r20,r6
  80b650:	3c62703a 	and	r17,r7,r17
  80b654:	bf003fcc 	andi	fp,r23,255
  80b658:	18006e26 	beq	r3,zero,80b814 <__divdf3+0x254>
  80b65c:	0081ffc4 	movi	r2,2047
  80b660:	18806626 	beq	r3,r2,80b7fc <__divdf3+0x23c>
  80b664:	88800434 	orhi	r2,r17,16
  80b668:	100490fa 	slli	r2,r2,3
  80b66c:	3022d77a 	srli	r17,r6,29
  80b670:	302890fa 	slli	r20,r6,3
  80b674:	18ff0044 	addi	r3,r3,-1023
  80b678:	88a2b03a 	or	r17,r17,r2
  80b67c:	000f883a 	mov	r7,zero
  80b680:	b5e6f03a 	xor	r19,r22,r23
  80b684:	3a4cb03a 	or	r6,r7,r9
  80b688:	008003c4 	movi	r2,15
  80b68c:	9809883a 	mov	r4,r19
  80b690:	90c7c83a 	sub	r3,r18,r3
  80b694:	9cc03fcc 	andi	r19,r19,255
  80b698:	11809636 	bltu	r2,r6,80b8f4 <__divdf3+0x334>
  80b69c:	300c90ba 	slli	r6,r6,2
  80b6a0:	00802074 	movhi	r2,129
  80b6a4:	10adad04 	addi	r2,r2,-18764
  80b6a8:	308d883a 	add	r6,r6,r2
  80b6ac:	30800017 	ldw	r2,0(r6)
  80b6b0:	1000683a 	jmp	r2
  80b6b4:	0080b8f4 	movhi	r2,739
  80b6b8:	0080b72c 	andhi	r2,zero,732
  80b6bc:	0080b8e4 	muli	r2,zero,739
  80b6c0:	0080b720 	cmpeqi	r2,zero,732
  80b6c4:	0080b8e4 	muli	r2,zero,739
  80b6c8:	0080b8b8 	rdprs	r2,zero,738
  80b6cc:	0080b8e4 	muli	r2,zero,739
  80b6d0:	0080b720 	cmpeqi	r2,zero,732
  80b6d4:	0080b72c 	andhi	r2,zero,732
  80b6d8:	0080b72c 	andhi	r2,zero,732
  80b6dc:	0080b8b8 	rdprs	r2,zero,738
  80b6e0:	0080b720 	cmpeqi	r2,zero,732
  80b6e4:	0080b710 	cmplti	r2,zero,732
  80b6e8:	0080b710 	cmplti	r2,zero,732
  80b6ec:	0080b710 	cmplti	r2,zero,732
  80b6f0:	0080bc7c 	xorhi	r2,zero,753
  80b6f4:	2404b03a 	or	r2,r4,r16
  80b6f8:	10006c1e 	bne	r2,zero,80b8ac <__divdf3+0x2ec>
  80b6fc:	02400204 	movi	r9,8
  80b700:	0021883a 	mov	r16,zero
  80b704:	002b883a 	mov	r21,zero
  80b708:	01400084 	movi	r5,2
  80b70c:	003fca06 	br	80b638 <__alt_mem_onchip_memory2+0xff7eb638>
  80b710:	8023883a 	mov	r17,r16
  80b714:	a829883a 	mov	r20,r21
  80b718:	4039883a 	mov	fp,r8
  80b71c:	280f883a 	mov	r7,r5
  80b720:	00800084 	movi	r2,2
  80b724:	3881601e 	bne	r7,r2,80bca8 <__divdf3+0x6e8>
  80b728:	e027883a 	mov	r19,fp
  80b72c:	9900004c 	andi	r4,r19,1
  80b730:	0081ffc4 	movi	r2,2047
  80b734:	0021883a 	mov	r16,zero
  80b738:	002b883a 	mov	r21,zero
  80b73c:	1004953a 	slli	r2,r2,20
  80b740:	20c03fcc 	andi	r3,r4,255
  80b744:	01400434 	movhi	r5,16
  80b748:	297fffc4 	addi	r5,r5,-1
  80b74c:	180697fa 	slli	r3,r3,31
  80b750:	8160703a 	and	r16,r16,r5
  80b754:	80a0b03a 	or	r16,r16,r2
  80b758:	80c6b03a 	or	r3,r16,r3
  80b75c:	a805883a 	mov	r2,r21
  80b760:	dfc00f17 	ldw	ra,60(sp)
  80b764:	df000e17 	ldw	fp,56(sp)
  80b768:	ddc00d17 	ldw	r23,52(sp)
  80b76c:	dd800c17 	ldw	r22,48(sp)
  80b770:	dd400b17 	ldw	r21,44(sp)
  80b774:	dd000a17 	ldw	r20,40(sp)
  80b778:	dcc00917 	ldw	r19,36(sp)
  80b77c:	dc800817 	ldw	r18,32(sp)
  80b780:	dc400717 	ldw	r17,28(sp)
  80b784:	dc000617 	ldw	r16,24(sp)
  80b788:	dec01004 	addi	sp,sp,64
  80b78c:	f800283a 	ret
  80b790:	2404b03a 	or	r2,r4,r16
  80b794:	2023883a 	mov	r17,r4
  80b798:	10003f26 	beq	r2,zero,80b898 <__divdf3+0x2d8>
  80b79c:	80015e26 	beq	r16,zero,80bd18 <__divdf3+0x758>
  80b7a0:	8009883a 	mov	r4,r16
  80b7a4:	d9800215 	stw	r6,8(sp)
  80b7a8:	d9c00515 	stw	r7,20(sp)
  80b7ac:	da000415 	stw	r8,16(sp)
  80b7b0:	080d5540 	call	80d554 <__clzsi2>
  80b7b4:	d9800217 	ldw	r6,8(sp)
  80b7b8:	d9c00517 	ldw	r7,20(sp)
  80b7bc:	da000417 	ldw	r8,16(sp)
  80b7c0:	113ffd44 	addi	r4,r2,-11
  80b7c4:	00c00704 	movi	r3,28
  80b7c8:	19014f16 	blt	r3,r4,80bd08 <__divdf3+0x748>
  80b7cc:	00c00744 	movi	r3,29
  80b7d0:	157ffe04 	addi	r21,r2,-8
  80b7d4:	1907c83a 	sub	r3,r3,r4
  80b7d8:	8560983a 	sll	r16,r16,r21
  80b7dc:	88c6d83a 	srl	r3,r17,r3
  80b7e0:	8d6a983a 	sll	r21,r17,r21
  80b7e4:	1c20b03a 	or	r16,r3,r16
  80b7e8:	1080fcc4 	addi	r2,r2,1011
  80b7ec:	00a5c83a 	sub	r18,zero,r2
  80b7f0:	0013883a 	mov	r9,zero
  80b7f4:	000b883a 	mov	r5,zero
  80b7f8:	003f8f06 	br	80b638 <__alt_mem_onchip_memory2+0xff7eb638>
  80b7fc:	3444b03a 	or	r2,r6,r17
  80b800:	1000231e 	bne	r2,zero,80b890 <__divdf3+0x2d0>
  80b804:	0023883a 	mov	r17,zero
  80b808:	0029883a 	mov	r20,zero
  80b80c:	01c00084 	movi	r7,2
  80b810:	003f9b06 	br	80b680 <__alt_mem_onchip_memory2+0xff7eb680>
  80b814:	3444b03a 	or	r2,r6,r17
  80b818:	10001926 	beq	r2,zero,80b880 <__divdf3+0x2c0>
  80b81c:	88014b26 	beq	r17,zero,80bd4c <__divdf3+0x78c>
  80b820:	8809883a 	mov	r4,r17
  80b824:	d9400115 	stw	r5,4(sp)
  80b828:	d9800215 	stw	r6,8(sp)
  80b82c:	da000415 	stw	r8,16(sp)
  80b830:	da400315 	stw	r9,12(sp)
  80b834:	080d5540 	call	80d554 <__clzsi2>
  80b838:	d9400117 	ldw	r5,4(sp)
  80b83c:	d9800217 	ldw	r6,8(sp)
  80b840:	da000417 	ldw	r8,16(sp)
  80b844:	da400317 	ldw	r9,12(sp)
  80b848:	113ffd44 	addi	r4,r2,-11
  80b84c:	00c00704 	movi	r3,28
  80b850:	19013a16 	blt	r3,r4,80bd3c <__divdf3+0x77c>
  80b854:	00c00744 	movi	r3,29
  80b858:	153ffe04 	addi	r20,r2,-8
  80b85c:	1907c83a 	sub	r3,r3,r4
  80b860:	8d22983a 	sll	r17,r17,r20
  80b864:	30c6d83a 	srl	r3,r6,r3
  80b868:	3528983a 	sll	r20,r6,r20
  80b86c:	1c62b03a 	or	r17,r3,r17
  80b870:	1080fcc4 	addi	r2,r2,1011
  80b874:	0087c83a 	sub	r3,zero,r2
  80b878:	000f883a 	mov	r7,zero
  80b87c:	003f8006 	br	80b680 <__alt_mem_onchip_memory2+0xff7eb680>
  80b880:	0023883a 	mov	r17,zero
  80b884:	0029883a 	mov	r20,zero
  80b888:	01c00044 	movi	r7,1
  80b88c:	003f7c06 	br	80b680 <__alt_mem_onchip_memory2+0xff7eb680>
  80b890:	01c000c4 	movi	r7,3
  80b894:	003f7a06 	br	80b680 <__alt_mem_onchip_memory2+0xff7eb680>
  80b898:	02400104 	movi	r9,4
  80b89c:	0021883a 	mov	r16,zero
  80b8a0:	002b883a 	mov	r21,zero
  80b8a4:	01400044 	movi	r5,1
  80b8a8:	003f6306 	br	80b638 <__alt_mem_onchip_memory2+0xff7eb638>
  80b8ac:	02400304 	movi	r9,12
  80b8b0:	014000c4 	movi	r5,3
  80b8b4:	003f6006 	br	80b638 <__alt_mem_onchip_memory2+0xff7eb638>
  80b8b8:	04000434 	movhi	r16,16
  80b8bc:	0009883a 	mov	r4,zero
  80b8c0:	843fffc4 	addi	r16,r16,-1
  80b8c4:	057fffc4 	movi	r21,-1
  80b8c8:	0081ffc4 	movi	r2,2047
  80b8cc:	003f9b06 	br	80b73c <__alt_mem_onchip_memory2+0xff7eb73c>
  80b8d0:	00c00044 	movi	r3,1
  80b8d4:	1887c83a 	sub	r3,r3,r2
  80b8d8:	01000e04 	movi	r4,56
  80b8dc:	20c1530e 	bge	r4,r3,80be2c <__divdf3+0x86c>
  80b8e0:	9900004c 	andi	r4,r19,1
  80b8e4:	0005883a 	mov	r2,zero
  80b8e8:	0021883a 	mov	r16,zero
  80b8ec:	002b883a 	mov	r21,zero
  80b8f0:	003f9206 	br	80b73c <__alt_mem_onchip_memory2+0xff7eb73c>
  80b8f4:	8c012e36 	bltu	r17,r16,80bdb0 <__divdf3+0x7f0>
  80b8f8:	84412c26 	beq	r16,r17,80bdac <__divdf3+0x7ec>
  80b8fc:	a82f883a 	mov	r23,r21
  80b900:	18ffffc4 	addi	r3,r3,-1
  80b904:	002b883a 	mov	r21,zero
  80b908:	a004d63a 	srli	r2,r20,24
  80b90c:	8822923a 	slli	r17,r17,8
  80b910:	a028923a 	slli	r20,r20,8
  80b914:	8009883a 	mov	r4,r16
  80b918:	88acb03a 	or	r22,r17,r2
  80b91c:	dd000015 	stw	r20,0(sp)
  80b920:	b028d43a 	srli	r20,r22,16
  80b924:	d8c00215 	stw	r3,8(sp)
  80b928:	b4bfffcc 	andi	r18,r22,65535
  80b92c:	a00b883a 	mov	r5,r20
  80b930:	080ac300 	call	80ac30 <__udivsi3>
  80b934:	100b883a 	mov	r5,r2
  80b938:	9009883a 	mov	r4,r18
  80b93c:	1023883a 	mov	r17,r2
  80b940:	080acec0 	call	80acec <__mulsi3>
  80b944:	8009883a 	mov	r4,r16
  80b948:	a00b883a 	mov	r5,r20
  80b94c:	1039883a 	mov	fp,r2
  80b950:	080ac940 	call	80ac94 <__umodsi3>
  80b954:	1004943a 	slli	r2,r2,16
  80b958:	b808d43a 	srli	r4,r23,16
  80b95c:	d8c00217 	ldw	r3,8(sp)
  80b960:	2084b03a 	or	r2,r4,r2
  80b964:	1700062e 	bgeu	r2,fp,80b980 <__divdf3+0x3c0>
  80b968:	1585883a 	add	r2,r2,r22
  80b96c:	893fffc4 	addi	r4,r17,-1
  80b970:	15811d36 	bltu	r2,r22,80bde8 <__divdf3+0x828>
  80b974:	17011c2e 	bgeu	r2,fp,80bde8 <__divdf3+0x828>
  80b978:	8c7fff84 	addi	r17,r17,-2
  80b97c:	1585883a 	add	r2,r2,r22
  80b980:	1739c83a 	sub	fp,r2,fp
  80b984:	a00b883a 	mov	r5,r20
  80b988:	e009883a 	mov	r4,fp
  80b98c:	d8c00215 	stw	r3,8(sp)
  80b990:	080ac300 	call	80ac30 <__udivsi3>
  80b994:	100b883a 	mov	r5,r2
  80b998:	9009883a 	mov	r4,r18
  80b99c:	1021883a 	mov	r16,r2
  80b9a0:	080acec0 	call	80acec <__mulsi3>
  80b9a4:	a00b883a 	mov	r5,r20
  80b9a8:	e009883a 	mov	r4,fp
  80b9ac:	d8800415 	stw	r2,16(sp)
  80b9b0:	080ac940 	call	80ac94 <__umodsi3>
  80b9b4:	1004943a 	slli	r2,r2,16
  80b9b8:	da000417 	ldw	r8,16(sp)
  80b9bc:	bdffffcc 	andi	r23,r23,65535
  80b9c0:	b884b03a 	or	r2,r23,r2
  80b9c4:	d8c00217 	ldw	r3,8(sp)
  80b9c8:	1200062e 	bgeu	r2,r8,80b9e4 <__divdf3+0x424>
  80b9cc:	1585883a 	add	r2,r2,r22
  80b9d0:	813fffc4 	addi	r4,r16,-1
  80b9d4:	15810236 	bltu	r2,r22,80bde0 <__divdf3+0x820>
  80b9d8:	1201012e 	bgeu	r2,r8,80bde0 <__divdf3+0x820>
  80b9dc:	843fff84 	addi	r16,r16,-2
  80b9e0:	1585883a 	add	r2,r2,r22
  80b9e4:	8822943a 	slli	r17,r17,16
  80b9e8:	d9800017 	ldw	r6,0(sp)
  80b9ec:	1211c83a 	sub	r8,r2,r8
  80b9f0:	8c22b03a 	or	r17,r17,r16
  80b9f4:	373fffcc 	andi	fp,r6,65535
  80b9f8:	8abfffcc 	andi	r10,r17,65535
  80b9fc:	8820d43a 	srli	r16,r17,16
  80ba00:	5009883a 	mov	r4,r10
  80ba04:	e00b883a 	mov	r5,fp
  80ba08:	302ed43a 	srli	r23,r6,16
  80ba0c:	d8c00215 	stw	r3,8(sp)
  80ba10:	da000415 	stw	r8,16(sp)
  80ba14:	da800115 	stw	r10,4(sp)
  80ba18:	080acec0 	call	80acec <__mulsi3>
  80ba1c:	800b883a 	mov	r5,r16
  80ba20:	e009883a 	mov	r4,fp
  80ba24:	d8800515 	stw	r2,20(sp)
  80ba28:	080acec0 	call	80acec <__mulsi3>
  80ba2c:	8009883a 	mov	r4,r16
  80ba30:	b80b883a 	mov	r5,r23
  80ba34:	d8800315 	stw	r2,12(sp)
  80ba38:	080acec0 	call	80acec <__mulsi3>
  80ba3c:	da800117 	ldw	r10,4(sp)
  80ba40:	b80b883a 	mov	r5,r23
  80ba44:	1021883a 	mov	r16,r2
  80ba48:	5009883a 	mov	r4,r10
  80ba4c:	080acec0 	call	80acec <__mulsi3>
  80ba50:	d9c00517 	ldw	r7,20(sp)
  80ba54:	da400317 	ldw	r9,12(sp)
  80ba58:	d8c00217 	ldw	r3,8(sp)
  80ba5c:	3808d43a 	srli	r4,r7,16
  80ba60:	1245883a 	add	r2,r2,r9
  80ba64:	da000417 	ldw	r8,16(sp)
  80ba68:	2085883a 	add	r2,r4,r2
  80ba6c:	1240022e 	bgeu	r2,r9,80ba78 <__divdf3+0x4b8>
  80ba70:	01000074 	movhi	r4,1
  80ba74:	8121883a 	add	r16,r16,r4
  80ba78:	1008d43a 	srli	r4,r2,16
  80ba7c:	1004943a 	slli	r2,r2,16
  80ba80:	39ffffcc 	andi	r7,r7,65535
  80ba84:	2409883a 	add	r4,r4,r16
  80ba88:	11c5883a 	add	r2,r2,r7
  80ba8c:	4100bb36 	bltu	r8,r4,80bd7c <__divdf3+0x7bc>
  80ba90:	4100d726 	beq	r8,r4,80bdf0 <__divdf3+0x830>
  80ba94:	4109c83a 	sub	r4,r8,r4
  80ba98:	a8a1c83a 	sub	r16,r21,r2
  80ba9c:	ac2b803a 	cmpltu	r21,r21,r16
  80baa0:	256bc83a 	sub	r21,r4,r21
  80baa4:	b540d926 	beq	r22,r21,80be0c <__divdf3+0x84c>
  80baa8:	a00b883a 	mov	r5,r20
  80baac:	a809883a 	mov	r4,r21
  80bab0:	d8c00215 	stw	r3,8(sp)
  80bab4:	080ac300 	call	80ac30 <__udivsi3>
  80bab8:	100b883a 	mov	r5,r2
  80babc:	9009883a 	mov	r4,r18
  80bac0:	d8800515 	stw	r2,20(sp)
  80bac4:	080acec0 	call	80acec <__mulsi3>
  80bac8:	a809883a 	mov	r4,r21
  80bacc:	a00b883a 	mov	r5,r20
  80bad0:	d8800415 	stw	r2,16(sp)
  80bad4:	080ac940 	call	80ac94 <__umodsi3>
  80bad8:	1004943a 	slli	r2,r2,16
  80badc:	8008d43a 	srli	r4,r16,16
  80bae0:	da000417 	ldw	r8,16(sp)
  80bae4:	d8c00217 	ldw	r3,8(sp)
  80bae8:	2084b03a 	or	r2,r4,r2
  80baec:	d9c00517 	ldw	r7,20(sp)
  80baf0:	1200062e 	bgeu	r2,r8,80bb0c <__divdf3+0x54c>
  80baf4:	1585883a 	add	r2,r2,r22
  80baf8:	393fffc4 	addi	r4,r7,-1
  80bafc:	1580c536 	bltu	r2,r22,80be14 <__divdf3+0x854>
  80bb00:	1200c42e 	bgeu	r2,r8,80be14 <__divdf3+0x854>
  80bb04:	39ffff84 	addi	r7,r7,-2
  80bb08:	1585883a 	add	r2,r2,r22
  80bb0c:	122bc83a 	sub	r21,r2,r8
  80bb10:	a00b883a 	mov	r5,r20
  80bb14:	a809883a 	mov	r4,r21
  80bb18:	d8c00215 	stw	r3,8(sp)
  80bb1c:	d9c00515 	stw	r7,20(sp)
  80bb20:	080ac300 	call	80ac30 <__udivsi3>
  80bb24:	9009883a 	mov	r4,r18
  80bb28:	100b883a 	mov	r5,r2
  80bb2c:	d8800415 	stw	r2,16(sp)
  80bb30:	080acec0 	call	80acec <__mulsi3>
  80bb34:	a809883a 	mov	r4,r21
  80bb38:	a00b883a 	mov	r5,r20
  80bb3c:	1025883a 	mov	r18,r2
  80bb40:	080ac940 	call	80ac94 <__umodsi3>
  80bb44:	1004943a 	slli	r2,r2,16
  80bb48:	813fffcc 	andi	r4,r16,65535
  80bb4c:	d8c00217 	ldw	r3,8(sp)
  80bb50:	20a0b03a 	or	r16,r4,r2
  80bb54:	d9c00517 	ldw	r7,20(sp)
  80bb58:	da000417 	ldw	r8,16(sp)
  80bb5c:	8480062e 	bgeu	r16,r18,80bb78 <__divdf3+0x5b8>
  80bb60:	85a1883a 	add	r16,r16,r22
  80bb64:	40bfffc4 	addi	r2,r8,-1
  80bb68:	8580ac36 	bltu	r16,r22,80be1c <__divdf3+0x85c>
  80bb6c:	8480ab2e 	bgeu	r16,r18,80be1c <__divdf3+0x85c>
  80bb70:	423fff84 	addi	r8,r8,-2
  80bb74:	85a1883a 	add	r16,r16,r22
  80bb78:	3804943a 	slli	r2,r7,16
  80bb7c:	84a1c83a 	sub	r16,r16,r18
  80bb80:	e009883a 	mov	r4,fp
  80bb84:	1228b03a 	or	r20,r2,r8
  80bb88:	a1ffffcc 	andi	r7,r20,65535
  80bb8c:	a024d43a 	srli	r18,r20,16
  80bb90:	380b883a 	mov	r5,r7
  80bb94:	d8c00215 	stw	r3,8(sp)
  80bb98:	d9c00515 	stw	r7,20(sp)
  80bb9c:	080acec0 	call	80acec <__mulsi3>
  80bba0:	900b883a 	mov	r5,r18
  80bba4:	e009883a 	mov	r4,fp
  80bba8:	102b883a 	mov	r21,r2
  80bbac:	080acec0 	call	80acec <__mulsi3>
  80bbb0:	900b883a 	mov	r5,r18
  80bbb4:	b809883a 	mov	r4,r23
  80bbb8:	1039883a 	mov	fp,r2
  80bbbc:	080acec0 	call	80acec <__mulsi3>
  80bbc0:	d9c00517 	ldw	r7,20(sp)
  80bbc4:	b80b883a 	mov	r5,r23
  80bbc8:	1025883a 	mov	r18,r2
  80bbcc:	3809883a 	mov	r4,r7
  80bbd0:	080acec0 	call	80acec <__mulsi3>
  80bbd4:	a808d43a 	srli	r4,r21,16
  80bbd8:	1705883a 	add	r2,r2,fp
  80bbdc:	d8c00217 	ldw	r3,8(sp)
  80bbe0:	2085883a 	add	r2,r4,r2
  80bbe4:	1700022e 	bgeu	r2,fp,80bbf0 <__divdf3+0x630>
  80bbe8:	01000074 	movhi	r4,1
  80bbec:	9125883a 	add	r18,r18,r4
  80bbf0:	1008d43a 	srli	r4,r2,16
  80bbf4:	1004943a 	slli	r2,r2,16
  80bbf8:	ad7fffcc 	andi	r21,r21,65535
  80bbfc:	2489883a 	add	r4,r4,r18
  80bc00:	1545883a 	add	r2,r2,r21
  80bc04:	81003836 	bltu	r16,r4,80bce8 <__divdf3+0x728>
  80bc08:	81003626 	beq	r16,r4,80bce4 <__divdf3+0x724>
  80bc0c:	a5000054 	ori	r20,r20,1
  80bc10:	1880ffc4 	addi	r2,r3,1023
  80bc14:	00bf2e0e 	bge	zero,r2,80b8d0 <__alt_mem_onchip_memory2+0xff7eb8d0>
  80bc18:	a10001cc 	andi	r4,r20,7
  80bc1c:	20000726 	beq	r4,zero,80bc3c <__divdf3+0x67c>
  80bc20:	a10003cc 	andi	r4,r20,15
  80bc24:	01400104 	movi	r5,4
  80bc28:	21400426 	beq	r4,r5,80bc3c <__divdf3+0x67c>
  80bc2c:	a149883a 	add	r4,r20,r5
  80bc30:	2529803a 	cmpltu	r20,r4,r20
  80bc34:	8d23883a 	add	r17,r17,r20
  80bc38:	2029883a 	mov	r20,r4
  80bc3c:	8900402c 	andhi	r4,r17,256
  80bc40:	20000426 	beq	r4,zero,80bc54 <__divdf3+0x694>
  80bc44:	18810004 	addi	r2,r3,1024
  80bc48:	00ffc034 	movhi	r3,65280
  80bc4c:	18ffffc4 	addi	r3,r3,-1
  80bc50:	88e2703a 	and	r17,r17,r3
  80bc54:	00c1ff84 	movi	r3,2046
  80bc58:	18beb416 	blt	r3,r2,80b72c <__alt_mem_onchip_memory2+0xff7eb72c>
  80bc5c:	a028d0fa 	srli	r20,r20,3
  80bc60:	882a977a 	slli	r21,r17,29
  80bc64:	8820927a 	slli	r16,r17,9
  80bc68:	1081ffcc 	andi	r2,r2,2047
  80bc6c:	ad2ab03a 	or	r21,r21,r20
  80bc70:	8020d33a 	srli	r16,r16,12
  80bc74:	9900004c 	andi	r4,r19,1
  80bc78:	003eb006 	br	80b73c <__alt_mem_onchip_memory2+0xff7eb73c>
  80bc7c:	8080022c 	andhi	r2,r16,8
  80bc80:	10001226 	beq	r2,zero,80bccc <__divdf3+0x70c>
  80bc84:	8880022c 	andhi	r2,r17,8
  80bc88:	1000101e 	bne	r2,zero,80bccc <__divdf3+0x70c>
  80bc8c:	00800434 	movhi	r2,16
  80bc90:	8c000234 	orhi	r16,r17,8
  80bc94:	10bfffc4 	addi	r2,r2,-1
  80bc98:	b809883a 	mov	r4,r23
  80bc9c:	80a0703a 	and	r16,r16,r2
  80bca0:	a02b883a 	mov	r21,r20
  80bca4:	003f0806 	br	80b8c8 <__alt_mem_onchip_memory2+0xff7eb8c8>
  80bca8:	008000c4 	movi	r2,3
  80bcac:	3880b126 	beq	r7,r2,80bf74 <__divdf3+0x9b4>
  80bcb0:	00800044 	movi	r2,1
  80bcb4:	38805b1e 	bne	r7,r2,80be24 <__divdf3+0x864>
  80bcb8:	e009883a 	mov	r4,fp
  80bcbc:	0005883a 	mov	r2,zero
  80bcc0:	0021883a 	mov	r16,zero
  80bcc4:	002b883a 	mov	r21,zero
  80bcc8:	003e9c06 	br	80b73c <__alt_mem_onchip_memory2+0xff7eb73c>
  80bccc:	00800434 	movhi	r2,16
  80bcd0:	84000234 	orhi	r16,r16,8
  80bcd4:	10bfffc4 	addi	r2,r2,-1
  80bcd8:	b009883a 	mov	r4,r22
  80bcdc:	80a0703a 	and	r16,r16,r2
  80bce0:	003ef906 	br	80b8c8 <__alt_mem_onchip_memory2+0xff7eb8c8>
  80bce4:	103fca26 	beq	r2,zero,80bc10 <__alt_mem_onchip_memory2+0xff7ebc10>
  80bce8:	b421883a 	add	r16,r22,r16
  80bcec:	a17fffc4 	addi	r5,r20,-1
  80bcf0:	8580422e 	bgeu	r16,r22,80bdfc <__divdf3+0x83c>
  80bcf4:	2829883a 	mov	r20,r5
  80bcf8:	813fc41e 	bne	r16,r4,80bc0c <__alt_mem_onchip_memory2+0xff7ebc0c>
  80bcfc:	d9800017 	ldw	r6,0(sp)
  80bd00:	30bfc21e 	bne	r6,r2,80bc0c <__alt_mem_onchip_memory2+0xff7ebc0c>
  80bd04:	003fc206 	br	80bc10 <__alt_mem_onchip_memory2+0xff7ebc10>
  80bd08:	143ff604 	addi	r16,r2,-40
  80bd0c:	8c20983a 	sll	r16,r17,r16
  80bd10:	002b883a 	mov	r21,zero
  80bd14:	003eb406 	br	80b7e8 <__alt_mem_onchip_memory2+0xff7eb7e8>
  80bd18:	d9800215 	stw	r6,8(sp)
  80bd1c:	d9c00515 	stw	r7,20(sp)
  80bd20:	da000415 	stw	r8,16(sp)
  80bd24:	080d5540 	call	80d554 <__clzsi2>
  80bd28:	10800804 	addi	r2,r2,32
  80bd2c:	da000417 	ldw	r8,16(sp)
  80bd30:	d9c00517 	ldw	r7,20(sp)
  80bd34:	d9800217 	ldw	r6,8(sp)
  80bd38:	003ea106 	br	80b7c0 <__alt_mem_onchip_memory2+0xff7eb7c0>
  80bd3c:	147ff604 	addi	r17,r2,-40
  80bd40:	3462983a 	sll	r17,r6,r17
  80bd44:	0029883a 	mov	r20,zero
  80bd48:	003ec906 	br	80b870 <__alt_mem_onchip_memory2+0xff7eb870>
  80bd4c:	3009883a 	mov	r4,r6
  80bd50:	d9400115 	stw	r5,4(sp)
  80bd54:	d9800215 	stw	r6,8(sp)
  80bd58:	da000415 	stw	r8,16(sp)
  80bd5c:	da400315 	stw	r9,12(sp)
  80bd60:	080d5540 	call	80d554 <__clzsi2>
  80bd64:	10800804 	addi	r2,r2,32
  80bd68:	da400317 	ldw	r9,12(sp)
  80bd6c:	da000417 	ldw	r8,16(sp)
  80bd70:	d9800217 	ldw	r6,8(sp)
  80bd74:	d9400117 	ldw	r5,4(sp)
  80bd78:	003eb306 	br	80b848 <__alt_mem_onchip_memory2+0xff7eb848>
  80bd7c:	d9800017 	ldw	r6,0(sp)
  80bd80:	a9ab883a 	add	r21,r21,r6
  80bd84:	a98b803a 	cmpltu	r5,r21,r6
  80bd88:	2d8b883a 	add	r5,r5,r22
  80bd8c:	2a11883a 	add	r8,r5,r8
  80bd90:	897fffc4 	addi	r5,r17,-1
  80bd94:	b2000c2e 	bgeu	r22,r8,80bdc8 <__divdf3+0x808>
  80bd98:	41003f36 	bltu	r8,r4,80be98 <__divdf3+0x8d8>
  80bd9c:	22006c26 	beq	r4,r8,80bf50 <__divdf3+0x990>
  80bda0:	4109c83a 	sub	r4,r8,r4
  80bda4:	2823883a 	mov	r17,r5
  80bda8:	003f3b06 	br	80ba98 <__alt_mem_onchip_memory2+0xff7eba98>
  80bdac:	ad3ed336 	bltu	r21,r20,80b8fc <__alt_mem_onchip_memory2+0xff7eb8fc>
  80bdb0:	a804d07a 	srli	r2,r21,1
  80bdb4:	802e97fa 	slli	r23,r16,31
  80bdb8:	a82a97fa 	slli	r21,r21,31
  80bdbc:	8020d07a 	srli	r16,r16,1
  80bdc0:	b8aeb03a 	or	r23,r23,r2
  80bdc4:	003ed006 	br	80b908 <__alt_mem_onchip_memory2+0xff7eb908>
  80bdc8:	b23ff51e 	bne	r22,r8,80bda0 <__alt_mem_onchip_memory2+0xff7ebda0>
  80bdcc:	d9800017 	ldw	r6,0(sp)
  80bdd0:	a9bff12e 	bgeu	r21,r6,80bd98 <__alt_mem_onchip_memory2+0xff7ebd98>
  80bdd4:	b109c83a 	sub	r4,r22,r4
  80bdd8:	2823883a 	mov	r17,r5
  80bddc:	003f2e06 	br	80ba98 <__alt_mem_onchip_memory2+0xff7eba98>
  80bde0:	2021883a 	mov	r16,r4
  80bde4:	003eff06 	br	80b9e4 <__alt_mem_onchip_memory2+0xff7eb9e4>
  80bde8:	2023883a 	mov	r17,r4
  80bdec:	003ee406 	br	80b980 <__alt_mem_onchip_memory2+0xff7eb980>
  80bdf0:	a8bfe236 	bltu	r21,r2,80bd7c <__alt_mem_onchip_memory2+0xff7ebd7c>
  80bdf4:	0009883a 	mov	r4,zero
  80bdf8:	003f2706 	br	80ba98 <__alt_mem_onchip_memory2+0xff7eba98>
  80bdfc:	81002d36 	bltu	r16,r4,80beb4 <__divdf3+0x8f4>
  80be00:	24005626 	beq	r4,r16,80bf5c <__divdf3+0x99c>
  80be04:	2829883a 	mov	r20,r5
  80be08:	003f8006 	br	80bc0c <__alt_mem_onchip_memory2+0xff7ebc0c>
  80be0c:	053fffc4 	movi	r20,-1
  80be10:	003f7f06 	br	80bc10 <__alt_mem_onchip_memory2+0xff7ebc10>
  80be14:	200f883a 	mov	r7,r4
  80be18:	003f3c06 	br	80bb0c <__alt_mem_onchip_memory2+0xff7ebb0c>
  80be1c:	1011883a 	mov	r8,r2
  80be20:	003f5506 	br	80bb78 <__alt_mem_onchip_memory2+0xff7ebb78>
  80be24:	e027883a 	mov	r19,fp
  80be28:	003f7906 	br	80bc10 <__alt_mem_onchip_memory2+0xff7ebc10>
  80be2c:	010007c4 	movi	r4,31
  80be30:	20c02816 	blt	r4,r3,80bed4 <__divdf3+0x914>
  80be34:	00800804 	movi	r2,32
  80be38:	10c5c83a 	sub	r2,r2,r3
  80be3c:	888a983a 	sll	r5,r17,r2
  80be40:	a0c8d83a 	srl	r4,r20,r3
  80be44:	a084983a 	sll	r2,r20,r2
  80be48:	88e2d83a 	srl	r17,r17,r3
  80be4c:	2906b03a 	or	r3,r5,r4
  80be50:	1004c03a 	cmpne	r2,r2,zero
  80be54:	1886b03a 	or	r3,r3,r2
  80be58:	188001cc 	andi	r2,r3,7
  80be5c:	10000726 	beq	r2,zero,80be7c <__divdf3+0x8bc>
  80be60:	188003cc 	andi	r2,r3,15
  80be64:	01000104 	movi	r4,4
  80be68:	11000426 	beq	r2,r4,80be7c <__divdf3+0x8bc>
  80be6c:	1805883a 	mov	r2,r3
  80be70:	10c00104 	addi	r3,r2,4
  80be74:	1885803a 	cmpltu	r2,r3,r2
  80be78:	88a3883a 	add	r17,r17,r2
  80be7c:	8880202c 	andhi	r2,r17,128
  80be80:	10002926 	beq	r2,zero,80bf28 <__divdf3+0x968>
  80be84:	9900004c 	andi	r4,r19,1
  80be88:	00800044 	movi	r2,1
  80be8c:	0021883a 	mov	r16,zero
  80be90:	002b883a 	mov	r21,zero
  80be94:	003e2906 	br	80b73c <__alt_mem_onchip_memory2+0xff7eb73c>
  80be98:	d9800017 	ldw	r6,0(sp)
  80be9c:	8c7fff84 	addi	r17,r17,-2
  80bea0:	a9ab883a 	add	r21,r21,r6
  80bea4:	a98b803a 	cmpltu	r5,r21,r6
  80bea8:	2d8b883a 	add	r5,r5,r22
  80beac:	2a11883a 	add	r8,r5,r8
  80beb0:	003ef806 	br	80ba94 <__alt_mem_onchip_memory2+0xff7eba94>
  80beb4:	d9800017 	ldw	r6,0(sp)
  80beb8:	318f883a 	add	r7,r6,r6
  80bebc:	398b803a 	cmpltu	r5,r7,r6
  80bec0:	2d8d883a 	add	r6,r5,r22
  80bec4:	81a1883a 	add	r16,r16,r6
  80bec8:	a17fff84 	addi	r5,r20,-2
  80becc:	d9c00015 	stw	r7,0(sp)
  80bed0:	003f8806 	br	80bcf4 <__alt_mem_onchip_memory2+0xff7ebcf4>
  80bed4:	013ff844 	movi	r4,-31
  80bed8:	2085c83a 	sub	r2,r4,r2
  80bedc:	8888d83a 	srl	r4,r17,r2
  80bee0:	00800804 	movi	r2,32
  80bee4:	18802126 	beq	r3,r2,80bf6c <__divdf3+0x9ac>
  80bee8:	04001004 	movi	r16,64
  80beec:	80c7c83a 	sub	r3,r16,r3
  80bef0:	88e0983a 	sll	r16,r17,r3
  80bef4:	8504b03a 	or	r2,r16,r20
  80bef8:	1004c03a 	cmpne	r2,r2,zero
  80befc:	2084b03a 	or	r2,r4,r2
  80bf00:	144001cc 	andi	r17,r2,7
  80bf04:	88000d1e 	bne	r17,zero,80bf3c <__divdf3+0x97c>
  80bf08:	0021883a 	mov	r16,zero
  80bf0c:	102ad0fa 	srli	r21,r2,3
  80bf10:	9900004c 	andi	r4,r19,1
  80bf14:	0005883a 	mov	r2,zero
  80bf18:	ac6ab03a 	or	r21,r21,r17
  80bf1c:	003e0706 	br	80b73c <__alt_mem_onchip_memory2+0xff7eb73c>
  80bf20:	1007883a 	mov	r3,r2
  80bf24:	0023883a 	mov	r17,zero
  80bf28:	8820927a 	slli	r16,r17,9
  80bf2c:	1805883a 	mov	r2,r3
  80bf30:	8822977a 	slli	r17,r17,29
  80bf34:	8020d33a 	srli	r16,r16,12
  80bf38:	003ff406 	br	80bf0c <__alt_mem_onchip_memory2+0xff7ebf0c>
  80bf3c:	10c003cc 	andi	r3,r2,15
  80bf40:	01000104 	movi	r4,4
  80bf44:	193ff626 	beq	r3,r4,80bf20 <__alt_mem_onchip_memory2+0xff7ebf20>
  80bf48:	0023883a 	mov	r17,zero
  80bf4c:	003fc806 	br	80be70 <__alt_mem_onchip_memory2+0xff7ebe70>
  80bf50:	a8bfd136 	bltu	r21,r2,80be98 <__alt_mem_onchip_memory2+0xff7ebe98>
  80bf54:	2823883a 	mov	r17,r5
  80bf58:	003fa606 	br	80bdf4 <__alt_mem_onchip_memory2+0xff7ebdf4>
  80bf5c:	d9800017 	ldw	r6,0(sp)
  80bf60:	30bfd436 	bltu	r6,r2,80beb4 <__alt_mem_onchip_memory2+0xff7ebeb4>
  80bf64:	2829883a 	mov	r20,r5
  80bf68:	003f6406 	br	80bcfc <__alt_mem_onchip_memory2+0xff7ebcfc>
  80bf6c:	0021883a 	mov	r16,zero
  80bf70:	003fe006 	br	80bef4 <__alt_mem_onchip_memory2+0xff7ebef4>
  80bf74:	00800434 	movhi	r2,16
  80bf78:	8c000234 	orhi	r16,r17,8
  80bf7c:	10bfffc4 	addi	r2,r2,-1
  80bf80:	e009883a 	mov	r4,fp
  80bf84:	80a0703a 	and	r16,r16,r2
  80bf88:	a02b883a 	mov	r21,r20
  80bf8c:	003e4e06 	br	80b8c8 <__alt_mem_onchip_memory2+0xff7eb8c8>

0080bf90 <__eqdf2>:
  80bf90:	2804d53a 	srli	r2,r5,20
  80bf94:	3806d53a 	srli	r3,r7,20
  80bf98:	02000434 	movhi	r8,16
  80bf9c:	423fffc4 	addi	r8,r8,-1
  80bfa0:	1081ffcc 	andi	r2,r2,2047
  80bfa4:	0281ffc4 	movi	r10,2047
  80bfa8:	2a12703a 	and	r9,r5,r8
  80bfac:	18c1ffcc 	andi	r3,r3,2047
  80bfb0:	3a10703a 	and	r8,r7,r8
  80bfb4:	280ad7fa 	srli	r5,r5,31
  80bfb8:	380ed7fa 	srli	r7,r7,31
  80bfbc:	12801026 	beq	r2,r10,80c000 <__eqdf2+0x70>
  80bfc0:	0281ffc4 	movi	r10,2047
  80bfc4:	1a800a26 	beq	r3,r10,80bff0 <__eqdf2+0x60>
  80bfc8:	10c00226 	beq	r2,r3,80bfd4 <__eqdf2+0x44>
  80bfcc:	00800044 	movi	r2,1
  80bfd0:	f800283a 	ret
  80bfd4:	4a3ffd1e 	bne	r9,r8,80bfcc <__alt_mem_onchip_memory2+0xff7ebfcc>
  80bfd8:	21bffc1e 	bne	r4,r6,80bfcc <__alt_mem_onchip_memory2+0xff7ebfcc>
  80bfdc:	29c00c26 	beq	r5,r7,80c010 <__eqdf2+0x80>
  80bfe0:	103ffa1e 	bne	r2,zero,80bfcc <__alt_mem_onchip_memory2+0xff7ebfcc>
  80bfe4:	2244b03a 	or	r2,r4,r9
  80bfe8:	1004c03a 	cmpne	r2,r2,zero
  80bfec:	f800283a 	ret
  80bff0:	3214b03a 	or	r10,r6,r8
  80bff4:	503ff426 	beq	r10,zero,80bfc8 <__alt_mem_onchip_memory2+0xff7ebfc8>
  80bff8:	00800044 	movi	r2,1
  80bffc:	f800283a 	ret
  80c000:	2254b03a 	or	r10,r4,r9
  80c004:	503fee26 	beq	r10,zero,80bfc0 <__alt_mem_onchip_memory2+0xff7ebfc0>
  80c008:	00800044 	movi	r2,1
  80c00c:	f800283a 	ret
  80c010:	0005883a 	mov	r2,zero
  80c014:	f800283a 	ret

0080c018 <__gedf2>:
  80c018:	2804d53a 	srli	r2,r5,20
  80c01c:	3806d53a 	srli	r3,r7,20
  80c020:	02000434 	movhi	r8,16
  80c024:	423fffc4 	addi	r8,r8,-1
  80c028:	1081ffcc 	andi	r2,r2,2047
  80c02c:	0241ffc4 	movi	r9,2047
  80c030:	2a14703a 	and	r10,r5,r8
  80c034:	18c1ffcc 	andi	r3,r3,2047
  80c038:	3a10703a 	and	r8,r7,r8
  80c03c:	280ad7fa 	srli	r5,r5,31
  80c040:	380ed7fa 	srli	r7,r7,31
  80c044:	12401d26 	beq	r2,r9,80c0bc <__gedf2+0xa4>
  80c048:	0241ffc4 	movi	r9,2047
  80c04c:	1a401226 	beq	r3,r9,80c098 <__gedf2+0x80>
  80c050:	1000081e 	bne	r2,zero,80c074 <__gedf2+0x5c>
  80c054:	2296b03a 	or	r11,r4,r10
  80c058:	5813003a 	cmpeq	r9,r11,zero
  80c05c:	1800091e 	bne	r3,zero,80c084 <__gedf2+0x6c>
  80c060:	3218b03a 	or	r12,r6,r8
  80c064:	6000071e 	bne	r12,zero,80c084 <__gedf2+0x6c>
  80c068:	0005883a 	mov	r2,zero
  80c06c:	5800101e 	bne	r11,zero,80c0b0 <__gedf2+0x98>
  80c070:	f800283a 	ret
  80c074:	18000c1e 	bne	r3,zero,80c0a8 <__gedf2+0x90>
  80c078:	3212b03a 	or	r9,r6,r8
  80c07c:	48000c26 	beq	r9,zero,80c0b0 <__gedf2+0x98>
  80c080:	0013883a 	mov	r9,zero
  80c084:	39c03fcc 	andi	r7,r7,255
  80c088:	48000826 	beq	r9,zero,80c0ac <__gedf2+0x94>
  80c08c:	38000926 	beq	r7,zero,80c0b4 <__gedf2+0x9c>
  80c090:	00800044 	movi	r2,1
  80c094:	f800283a 	ret
  80c098:	3212b03a 	or	r9,r6,r8
  80c09c:	483fec26 	beq	r9,zero,80c050 <__alt_mem_onchip_memory2+0xff7ec050>
  80c0a0:	00bfff84 	movi	r2,-2
  80c0a4:	f800283a 	ret
  80c0a8:	39c03fcc 	andi	r7,r7,255
  80c0ac:	29c00626 	beq	r5,r7,80c0c8 <__gedf2+0xb0>
  80c0b0:	283ff726 	beq	r5,zero,80c090 <__alt_mem_onchip_memory2+0xff7ec090>
  80c0b4:	00bfffc4 	movi	r2,-1
  80c0b8:	f800283a 	ret
  80c0bc:	2292b03a 	or	r9,r4,r10
  80c0c0:	483fe126 	beq	r9,zero,80c048 <__alt_mem_onchip_memory2+0xff7ec048>
  80c0c4:	003ff606 	br	80c0a0 <__alt_mem_onchip_memory2+0xff7ec0a0>
  80c0c8:	18bff916 	blt	r3,r2,80c0b0 <__alt_mem_onchip_memory2+0xff7ec0b0>
  80c0cc:	10c00316 	blt	r2,r3,80c0dc <__gedf2+0xc4>
  80c0d0:	42bff736 	bltu	r8,r10,80c0b0 <__alt_mem_onchip_memory2+0xff7ec0b0>
  80c0d4:	52000326 	beq	r10,r8,80c0e4 <__gedf2+0xcc>
  80c0d8:	5200042e 	bgeu	r10,r8,80c0ec <__gedf2+0xd4>
  80c0dc:	283fec1e 	bne	r5,zero,80c090 <__alt_mem_onchip_memory2+0xff7ec090>
  80c0e0:	003ff406 	br	80c0b4 <__alt_mem_onchip_memory2+0xff7ec0b4>
  80c0e4:	313ff236 	bltu	r6,r4,80c0b0 <__alt_mem_onchip_memory2+0xff7ec0b0>
  80c0e8:	21bffc36 	bltu	r4,r6,80c0dc <__alt_mem_onchip_memory2+0xff7ec0dc>
  80c0ec:	0005883a 	mov	r2,zero
  80c0f0:	f800283a 	ret

0080c0f4 <__ledf2>:
  80c0f4:	2804d53a 	srli	r2,r5,20
  80c0f8:	3810d53a 	srli	r8,r7,20
  80c0fc:	00c00434 	movhi	r3,16
  80c100:	18ffffc4 	addi	r3,r3,-1
  80c104:	1081ffcc 	andi	r2,r2,2047
  80c108:	0241ffc4 	movi	r9,2047
  80c10c:	28d4703a 	and	r10,r5,r3
  80c110:	4201ffcc 	andi	r8,r8,2047
  80c114:	38c6703a 	and	r3,r7,r3
  80c118:	280ad7fa 	srli	r5,r5,31
  80c11c:	380ed7fa 	srli	r7,r7,31
  80c120:	12401f26 	beq	r2,r9,80c1a0 <__ledf2+0xac>
  80c124:	0241ffc4 	movi	r9,2047
  80c128:	42401426 	beq	r8,r9,80c17c <__ledf2+0x88>
  80c12c:	1000091e 	bne	r2,zero,80c154 <__ledf2+0x60>
  80c130:	2296b03a 	or	r11,r4,r10
  80c134:	5813003a 	cmpeq	r9,r11,zero
  80c138:	29403fcc 	andi	r5,r5,255
  80c13c:	40000a1e 	bne	r8,zero,80c168 <__ledf2+0x74>
  80c140:	30d8b03a 	or	r12,r6,r3
  80c144:	6000081e 	bne	r12,zero,80c168 <__ledf2+0x74>
  80c148:	0005883a 	mov	r2,zero
  80c14c:	5800111e 	bne	r11,zero,80c194 <__ledf2+0xa0>
  80c150:	f800283a 	ret
  80c154:	29403fcc 	andi	r5,r5,255
  80c158:	40000c1e 	bne	r8,zero,80c18c <__ledf2+0x98>
  80c15c:	30d2b03a 	or	r9,r6,r3
  80c160:	48000c26 	beq	r9,zero,80c194 <__ledf2+0xa0>
  80c164:	0013883a 	mov	r9,zero
  80c168:	39c03fcc 	andi	r7,r7,255
  80c16c:	48000826 	beq	r9,zero,80c190 <__ledf2+0x9c>
  80c170:	38001126 	beq	r7,zero,80c1b8 <__ledf2+0xc4>
  80c174:	00800044 	movi	r2,1
  80c178:	f800283a 	ret
  80c17c:	30d2b03a 	or	r9,r6,r3
  80c180:	483fea26 	beq	r9,zero,80c12c <__alt_mem_onchip_memory2+0xff7ec12c>
  80c184:	00800084 	movi	r2,2
  80c188:	f800283a 	ret
  80c18c:	39c03fcc 	andi	r7,r7,255
  80c190:	39400726 	beq	r7,r5,80c1b0 <__ledf2+0xbc>
  80c194:	2800081e 	bne	r5,zero,80c1b8 <__ledf2+0xc4>
  80c198:	00800044 	movi	r2,1
  80c19c:	f800283a 	ret
  80c1a0:	2292b03a 	or	r9,r4,r10
  80c1a4:	483fdf26 	beq	r9,zero,80c124 <__alt_mem_onchip_memory2+0xff7ec124>
  80c1a8:	00800084 	movi	r2,2
  80c1ac:	f800283a 	ret
  80c1b0:	4080030e 	bge	r8,r2,80c1c0 <__ledf2+0xcc>
  80c1b4:	383fef26 	beq	r7,zero,80c174 <__alt_mem_onchip_memory2+0xff7ec174>
  80c1b8:	00bfffc4 	movi	r2,-1
  80c1bc:	f800283a 	ret
  80c1c0:	123feb16 	blt	r2,r8,80c170 <__alt_mem_onchip_memory2+0xff7ec170>
  80c1c4:	1abff336 	bltu	r3,r10,80c194 <__alt_mem_onchip_memory2+0xff7ec194>
  80c1c8:	50c00326 	beq	r10,r3,80c1d8 <__ledf2+0xe4>
  80c1cc:	50c0042e 	bgeu	r10,r3,80c1e0 <__ledf2+0xec>
  80c1d0:	283fe81e 	bne	r5,zero,80c174 <__alt_mem_onchip_memory2+0xff7ec174>
  80c1d4:	003ff806 	br	80c1b8 <__alt_mem_onchip_memory2+0xff7ec1b8>
  80c1d8:	313fee36 	bltu	r6,r4,80c194 <__alt_mem_onchip_memory2+0xff7ec194>
  80c1dc:	21bffc36 	bltu	r4,r6,80c1d0 <__alt_mem_onchip_memory2+0xff7ec1d0>
  80c1e0:	0005883a 	mov	r2,zero
  80c1e4:	f800283a 	ret

0080c1e8 <__muldf3>:
  80c1e8:	deffee04 	addi	sp,sp,-72
  80c1ec:	dd000c15 	stw	r20,48(sp)
  80c1f0:	2828d53a 	srli	r20,r5,20
  80c1f4:	ddc00f15 	stw	r23,60(sp)
  80c1f8:	282ed7fa 	srli	r23,r5,31
  80c1fc:	dc000815 	stw	r16,32(sp)
  80c200:	04000434 	movhi	r16,16
  80c204:	dcc00b15 	stw	r19,44(sp)
  80c208:	843fffc4 	addi	r16,r16,-1
  80c20c:	dfc01115 	stw	ra,68(sp)
  80c210:	df001015 	stw	fp,64(sp)
  80c214:	dd800e15 	stw	r22,56(sp)
  80c218:	dd400d15 	stw	r21,52(sp)
  80c21c:	dc800a15 	stw	r18,40(sp)
  80c220:	dc400915 	stw	r17,36(sp)
  80c224:	a501ffcc 	andi	r20,r20,2047
  80c228:	2c20703a 	and	r16,r5,r16
  80c22c:	b827883a 	mov	r19,r23
  80c230:	ba403fcc 	andi	r9,r23,255
  80c234:	a0006026 	beq	r20,zero,80c3b8 <__muldf3+0x1d0>
  80c238:	0081ffc4 	movi	r2,2047
  80c23c:	202d883a 	mov	r22,r4
  80c240:	a0803626 	beq	r20,r2,80c31c <__muldf3+0x134>
  80c244:	84000434 	orhi	r16,r16,16
  80c248:	200ad77a 	srli	r5,r4,29
  80c24c:	800490fa 	slli	r2,r16,3
  80c250:	202c90fa 	slli	r22,r4,3
  80c254:	a53f0044 	addi	r20,r20,-1023
  80c258:	28a0b03a 	or	r16,r5,r2
  80c25c:	002b883a 	mov	r21,zero
  80c260:	000b883a 	mov	r5,zero
  80c264:	3804d53a 	srli	r2,r7,20
  80c268:	3838d7fa 	srli	fp,r7,31
  80c26c:	04400434 	movhi	r17,16
  80c270:	8c7fffc4 	addi	r17,r17,-1
  80c274:	1081ffcc 	andi	r2,r2,2047
  80c278:	3025883a 	mov	r18,r6
  80c27c:	3c62703a 	and	r17,r7,r17
  80c280:	e2803fcc 	andi	r10,fp,255
  80c284:	10006d26 	beq	r2,zero,80c43c <__muldf3+0x254>
  80c288:	00c1ffc4 	movi	r3,2047
  80c28c:	10c06526 	beq	r2,r3,80c424 <__muldf3+0x23c>
  80c290:	8c400434 	orhi	r17,r17,16
  80c294:	300ed77a 	srli	r7,r6,29
  80c298:	880690fa 	slli	r3,r17,3
  80c29c:	302490fa 	slli	r18,r6,3
  80c2a0:	10bf0044 	addi	r2,r2,-1023
  80c2a4:	38e2b03a 	or	r17,r7,r3
  80c2a8:	000f883a 	mov	r7,zero
  80c2ac:	a087883a 	add	r3,r20,r2
  80c2b0:	010003c4 	movi	r4,15
  80c2b4:	3d44b03a 	or	r2,r7,r21
  80c2b8:	e5ccf03a 	xor	r6,fp,r23
  80c2bc:	1a000044 	addi	r8,r3,1
  80c2c0:	20809b36 	bltu	r4,r2,80c530 <__muldf3+0x348>
  80c2c4:	100490ba 	slli	r2,r2,2
  80c2c8:	01002074 	movhi	r4,129
  80c2cc:	2130b704 	addi	r4,r4,-15652
  80c2d0:	1105883a 	add	r2,r2,r4
  80c2d4:	10800017 	ldw	r2,0(r2)
  80c2d8:	1000683a 	jmp	r2
  80c2dc:	0080c530 	cmpltui	r2,zero,788
  80c2e0:	0080c33c 	xorhi	r2,zero,780
  80c2e4:	0080c33c 	xorhi	r2,zero,780
  80c2e8:	0080c338 	rdprs	r2,zero,780
  80c2ec:	0080c50c 	andi	r2,zero,788
  80c2f0:	0080c50c 	andi	r2,zero,788
  80c2f4:	0080c4f4 	movhi	r2,787
  80c2f8:	0080c338 	rdprs	r2,zero,780
  80c2fc:	0080c50c 	andi	r2,zero,788
  80c300:	0080c4f4 	movhi	r2,787
  80c304:	0080c50c 	andi	r2,zero,788
  80c308:	0080c338 	rdprs	r2,zero,780
  80c30c:	0080c51c 	xori	r2,zero,788
  80c310:	0080c51c 	xori	r2,zero,788
  80c314:	0080c51c 	xori	r2,zero,788
  80c318:	0080c87c 	xorhi	r2,zero,801
  80c31c:	2404b03a 	or	r2,r4,r16
  80c320:	1000711e 	bne	r2,zero,80c4e8 <__muldf3+0x300>
  80c324:	05400204 	movi	r21,8
  80c328:	0021883a 	mov	r16,zero
  80c32c:	002d883a 	mov	r22,zero
  80c330:	01400084 	movi	r5,2
  80c334:	003fcb06 	br	80c264 <__alt_mem_onchip_memory2+0xff7ec264>
  80c338:	500d883a 	mov	r6,r10
  80c33c:	00800084 	movi	r2,2
  80c340:	38805926 	beq	r7,r2,80c4a8 <__muldf3+0x2c0>
  80c344:	008000c4 	movi	r2,3
  80c348:	3881bb26 	beq	r7,r2,80ca38 <__muldf3+0x850>
  80c34c:	00800044 	movi	r2,1
  80c350:	3881961e 	bne	r7,r2,80c9ac <__muldf3+0x7c4>
  80c354:	3027883a 	mov	r19,r6
  80c358:	0005883a 	mov	r2,zero
  80c35c:	0021883a 	mov	r16,zero
  80c360:	002d883a 	mov	r22,zero
  80c364:	1004953a 	slli	r2,r2,20
  80c368:	98c03fcc 	andi	r3,r19,255
  80c36c:	04400434 	movhi	r17,16
  80c370:	8c7fffc4 	addi	r17,r17,-1
  80c374:	180697fa 	slli	r3,r3,31
  80c378:	8460703a 	and	r16,r16,r17
  80c37c:	80a0b03a 	or	r16,r16,r2
  80c380:	80c6b03a 	or	r3,r16,r3
  80c384:	b005883a 	mov	r2,r22
  80c388:	dfc01117 	ldw	ra,68(sp)
  80c38c:	df001017 	ldw	fp,64(sp)
  80c390:	ddc00f17 	ldw	r23,60(sp)
  80c394:	dd800e17 	ldw	r22,56(sp)
  80c398:	dd400d17 	ldw	r21,52(sp)
  80c39c:	dd000c17 	ldw	r20,48(sp)
  80c3a0:	dcc00b17 	ldw	r19,44(sp)
  80c3a4:	dc800a17 	ldw	r18,40(sp)
  80c3a8:	dc400917 	ldw	r17,36(sp)
  80c3ac:	dc000817 	ldw	r16,32(sp)
  80c3b0:	dec01204 	addi	sp,sp,72
  80c3b4:	f800283a 	ret
  80c3b8:	2404b03a 	or	r2,r4,r16
  80c3bc:	202b883a 	mov	r21,r4
  80c3c0:	10004426 	beq	r2,zero,80c4d4 <__muldf3+0x2ec>
  80c3c4:	80015126 	beq	r16,zero,80c90c <__muldf3+0x724>
  80c3c8:	8009883a 	mov	r4,r16
  80c3cc:	d9800715 	stw	r6,28(sp)
  80c3d0:	d9c00215 	stw	r7,8(sp)
  80c3d4:	da400415 	stw	r9,16(sp)
  80c3d8:	080d5540 	call	80d554 <__clzsi2>
  80c3dc:	d9800717 	ldw	r6,28(sp)
  80c3e0:	d9c00217 	ldw	r7,8(sp)
  80c3e4:	da400417 	ldw	r9,16(sp)
  80c3e8:	113ffd44 	addi	r4,r2,-11
  80c3ec:	00c00704 	movi	r3,28
  80c3f0:	19014216 	blt	r3,r4,80c8fc <__muldf3+0x714>
  80c3f4:	00c00744 	movi	r3,29
  80c3f8:	15bffe04 	addi	r22,r2,-8
  80c3fc:	1907c83a 	sub	r3,r3,r4
  80c400:	85a0983a 	sll	r16,r16,r22
  80c404:	a8c6d83a 	srl	r3,r21,r3
  80c408:	adac983a 	sll	r22,r21,r22
  80c40c:	1c20b03a 	or	r16,r3,r16
  80c410:	1080fcc4 	addi	r2,r2,1011
  80c414:	00a9c83a 	sub	r20,zero,r2
  80c418:	002b883a 	mov	r21,zero
  80c41c:	000b883a 	mov	r5,zero
  80c420:	003f9006 	br	80c264 <__alt_mem_onchip_memory2+0xff7ec264>
  80c424:	3446b03a 	or	r3,r6,r17
  80c428:	1800281e 	bne	r3,zero,80c4cc <__muldf3+0x2e4>
  80c42c:	0023883a 	mov	r17,zero
  80c430:	0025883a 	mov	r18,zero
  80c434:	01c00084 	movi	r7,2
  80c438:	003f9c06 	br	80c2ac <__alt_mem_onchip_memory2+0xff7ec2ac>
  80c43c:	3446b03a 	or	r3,r6,r17
  80c440:	18001e26 	beq	r3,zero,80c4bc <__muldf3+0x2d4>
  80c444:	88012126 	beq	r17,zero,80c8cc <__muldf3+0x6e4>
  80c448:	8809883a 	mov	r4,r17
  80c44c:	d9400215 	stw	r5,8(sp)
  80c450:	d9800715 	stw	r6,28(sp)
  80c454:	da400415 	stw	r9,16(sp)
  80c458:	da800315 	stw	r10,12(sp)
  80c45c:	080d5540 	call	80d554 <__clzsi2>
  80c460:	d9400217 	ldw	r5,8(sp)
  80c464:	d9800717 	ldw	r6,28(sp)
  80c468:	da400417 	ldw	r9,16(sp)
  80c46c:	da800317 	ldw	r10,12(sp)
  80c470:	113ffd44 	addi	r4,r2,-11
  80c474:	00c00704 	movi	r3,28
  80c478:	19011016 	blt	r3,r4,80c8bc <__muldf3+0x6d4>
  80c47c:	00c00744 	movi	r3,29
  80c480:	14bffe04 	addi	r18,r2,-8
  80c484:	1907c83a 	sub	r3,r3,r4
  80c488:	8ca2983a 	sll	r17,r17,r18
  80c48c:	30c6d83a 	srl	r3,r6,r3
  80c490:	34a4983a 	sll	r18,r6,r18
  80c494:	1c62b03a 	or	r17,r3,r17
  80c498:	1080fcc4 	addi	r2,r2,1011
  80c49c:	0085c83a 	sub	r2,zero,r2
  80c4a0:	000f883a 	mov	r7,zero
  80c4a4:	003f8106 	br	80c2ac <__alt_mem_onchip_memory2+0xff7ec2ac>
  80c4a8:	3027883a 	mov	r19,r6
  80c4ac:	0081ffc4 	movi	r2,2047
  80c4b0:	0021883a 	mov	r16,zero
  80c4b4:	002d883a 	mov	r22,zero
  80c4b8:	003faa06 	br	80c364 <__alt_mem_onchip_memory2+0xff7ec364>
  80c4bc:	0023883a 	mov	r17,zero
  80c4c0:	0025883a 	mov	r18,zero
  80c4c4:	01c00044 	movi	r7,1
  80c4c8:	003f7806 	br	80c2ac <__alt_mem_onchip_memory2+0xff7ec2ac>
  80c4cc:	01c000c4 	movi	r7,3
  80c4d0:	003f7606 	br	80c2ac <__alt_mem_onchip_memory2+0xff7ec2ac>
  80c4d4:	05400104 	movi	r21,4
  80c4d8:	0021883a 	mov	r16,zero
  80c4dc:	002d883a 	mov	r22,zero
  80c4e0:	01400044 	movi	r5,1
  80c4e4:	003f5f06 	br	80c264 <__alt_mem_onchip_memory2+0xff7ec264>
  80c4e8:	05400304 	movi	r21,12
  80c4ec:	014000c4 	movi	r5,3
  80c4f0:	003f5c06 	br	80c264 <__alt_mem_onchip_memory2+0xff7ec264>
  80c4f4:	04000434 	movhi	r16,16
  80c4f8:	0027883a 	mov	r19,zero
  80c4fc:	843fffc4 	addi	r16,r16,-1
  80c500:	05bfffc4 	movi	r22,-1
  80c504:	0081ffc4 	movi	r2,2047
  80c508:	003f9606 	br	80c364 <__alt_mem_onchip_memory2+0xff7ec364>
  80c50c:	8023883a 	mov	r17,r16
  80c510:	b025883a 	mov	r18,r22
  80c514:	280f883a 	mov	r7,r5
  80c518:	003f8806 	br	80c33c <__alt_mem_onchip_memory2+0xff7ec33c>
  80c51c:	8023883a 	mov	r17,r16
  80c520:	b025883a 	mov	r18,r22
  80c524:	480d883a 	mov	r6,r9
  80c528:	280f883a 	mov	r7,r5
  80c52c:	003f8306 	br	80c33c <__alt_mem_onchip_memory2+0xff7ec33c>
  80c530:	b026d43a 	srli	r19,r22,16
  80c534:	902ed43a 	srli	r23,r18,16
  80c538:	b5bfffcc 	andi	r22,r22,65535
  80c53c:	94bfffcc 	andi	r18,r18,65535
  80c540:	b00b883a 	mov	r5,r22
  80c544:	9009883a 	mov	r4,r18
  80c548:	d8c00515 	stw	r3,20(sp)
  80c54c:	d9800715 	stw	r6,28(sp)
  80c550:	da000615 	stw	r8,24(sp)
  80c554:	080acec0 	call	80acec <__mulsi3>
  80c558:	980b883a 	mov	r5,r19
  80c55c:	9009883a 	mov	r4,r18
  80c560:	1029883a 	mov	r20,r2
  80c564:	080acec0 	call	80acec <__mulsi3>
  80c568:	b80b883a 	mov	r5,r23
  80c56c:	9809883a 	mov	r4,r19
  80c570:	102b883a 	mov	r21,r2
  80c574:	080acec0 	call	80acec <__mulsi3>
  80c578:	b809883a 	mov	r4,r23
  80c57c:	b00b883a 	mov	r5,r22
  80c580:	1039883a 	mov	fp,r2
  80c584:	080acec0 	call	80acec <__mulsi3>
  80c588:	a008d43a 	srli	r4,r20,16
  80c58c:	1545883a 	add	r2,r2,r21
  80c590:	d8c00517 	ldw	r3,20(sp)
  80c594:	2085883a 	add	r2,r4,r2
  80c598:	d9800717 	ldw	r6,28(sp)
  80c59c:	da000617 	ldw	r8,24(sp)
  80c5a0:	1540022e 	bgeu	r2,r21,80c5ac <__muldf3+0x3c4>
  80c5a4:	01000074 	movhi	r4,1
  80c5a8:	e139883a 	add	fp,fp,r4
  80c5ac:	100e943a 	slli	r7,r2,16
  80c5b0:	1004d43a 	srli	r2,r2,16
  80c5b4:	882ad43a 	srli	r21,r17,16
  80c5b8:	a53fffcc 	andi	r20,r20,65535
  80c5bc:	8c7fffcc 	andi	r17,r17,65535
  80c5c0:	3d29883a 	add	r20,r7,r20
  80c5c4:	b00b883a 	mov	r5,r22
  80c5c8:	8809883a 	mov	r4,r17
  80c5cc:	d8c00515 	stw	r3,20(sp)
  80c5d0:	d9800715 	stw	r6,28(sp)
  80c5d4:	da000615 	stw	r8,24(sp)
  80c5d8:	dd000115 	stw	r20,4(sp)
  80c5dc:	d8800015 	stw	r2,0(sp)
  80c5e0:	080acec0 	call	80acec <__mulsi3>
  80c5e4:	980b883a 	mov	r5,r19
  80c5e8:	8809883a 	mov	r4,r17
  80c5ec:	d8800215 	stw	r2,8(sp)
  80c5f0:	080acec0 	call	80acec <__mulsi3>
  80c5f4:	9809883a 	mov	r4,r19
  80c5f8:	a80b883a 	mov	r5,r21
  80c5fc:	1029883a 	mov	r20,r2
  80c600:	080acec0 	call	80acec <__mulsi3>
  80c604:	b00b883a 	mov	r5,r22
  80c608:	a809883a 	mov	r4,r21
  80c60c:	d8800415 	stw	r2,16(sp)
  80c610:	080acec0 	call	80acec <__mulsi3>
  80c614:	d9c00217 	ldw	r7,8(sp)
  80c618:	1505883a 	add	r2,r2,r20
  80c61c:	d8c00517 	ldw	r3,20(sp)
  80c620:	3826d43a 	srli	r19,r7,16
  80c624:	d9800717 	ldw	r6,28(sp)
  80c628:	da000617 	ldw	r8,24(sp)
  80c62c:	9885883a 	add	r2,r19,r2
  80c630:	da400417 	ldw	r9,16(sp)
  80c634:	1500022e 	bgeu	r2,r20,80c640 <__muldf3+0x458>
  80c638:	01000074 	movhi	r4,1
  80c63c:	4913883a 	add	r9,r9,r4
  80c640:	1028d43a 	srli	r20,r2,16
  80c644:	1004943a 	slli	r2,r2,16
  80c648:	802cd43a 	srli	r22,r16,16
  80c64c:	843fffcc 	andi	r16,r16,65535
  80c650:	3cffffcc 	andi	r19,r7,65535
  80c654:	9009883a 	mov	r4,r18
  80c658:	800b883a 	mov	r5,r16
  80c65c:	a269883a 	add	r20,r20,r9
  80c660:	d8c00515 	stw	r3,20(sp)
  80c664:	d9800715 	stw	r6,28(sp)
  80c668:	da000615 	stw	r8,24(sp)
  80c66c:	14e7883a 	add	r19,r2,r19
  80c670:	080acec0 	call	80acec <__mulsi3>
  80c674:	9009883a 	mov	r4,r18
  80c678:	b00b883a 	mov	r5,r22
  80c67c:	d8800315 	stw	r2,12(sp)
  80c680:	080acec0 	call	80acec <__mulsi3>
  80c684:	b809883a 	mov	r4,r23
  80c688:	b00b883a 	mov	r5,r22
  80c68c:	d8800215 	stw	r2,8(sp)
  80c690:	080acec0 	call	80acec <__mulsi3>
  80c694:	b80b883a 	mov	r5,r23
  80c698:	8009883a 	mov	r4,r16
  80c69c:	d8800415 	stw	r2,16(sp)
  80c6a0:	080acec0 	call	80acec <__mulsi3>
  80c6a4:	da800317 	ldw	r10,12(sp)
  80c6a8:	d9c00217 	ldw	r7,8(sp)
  80c6ac:	d9000017 	ldw	r4,0(sp)
  80c6b0:	502ed43a 	srli	r23,r10,16
  80c6b4:	11c5883a 	add	r2,r2,r7
  80c6b8:	24e5883a 	add	r18,r4,r19
  80c6bc:	b885883a 	add	r2,r23,r2
  80c6c0:	d8c00517 	ldw	r3,20(sp)
  80c6c4:	d9800717 	ldw	r6,28(sp)
  80c6c8:	da000617 	ldw	r8,24(sp)
  80c6cc:	da400417 	ldw	r9,16(sp)
  80c6d0:	11c0022e 	bgeu	r2,r7,80c6dc <__muldf3+0x4f4>
  80c6d4:	01000074 	movhi	r4,1
  80c6d8:	4913883a 	add	r9,r9,r4
  80c6dc:	100ed43a 	srli	r7,r2,16
  80c6e0:	1004943a 	slli	r2,r2,16
  80c6e4:	55ffffcc 	andi	r23,r10,65535
  80c6e8:	3a53883a 	add	r9,r7,r9
  80c6ec:	8809883a 	mov	r4,r17
  80c6f0:	800b883a 	mov	r5,r16
  80c6f4:	d8c00515 	stw	r3,20(sp)
  80c6f8:	d9800715 	stw	r6,28(sp)
  80c6fc:	da000615 	stw	r8,24(sp)
  80c700:	da400415 	stw	r9,16(sp)
  80c704:	15ef883a 	add	r23,r2,r23
  80c708:	080acec0 	call	80acec <__mulsi3>
  80c70c:	8809883a 	mov	r4,r17
  80c710:	b00b883a 	mov	r5,r22
  80c714:	d8800215 	stw	r2,8(sp)
  80c718:	080acec0 	call	80acec <__mulsi3>
  80c71c:	b00b883a 	mov	r5,r22
  80c720:	a809883a 	mov	r4,r21
  80c724:	d8800315 	stw	r2,12(sp)
  80c728:	080acec0 	call	80acec <__mulsi3>
  80c72c:	8009883a 	mov	r4,r16
  80c730:	a80b883a 	mov	r5,r21
  80c734:	1023883a 	mov	r17,r2
  80c738:	080acec0 	call	80acec <__mulsi3>
  80c73c:	d9c00217 	ldw	r7,8(sp)
  80c740:	da800317 	ldw	r10,12(sp)
  80c744:	d8c00517 	ldw	r3,20(sp)
  80c748:	3808d43a 	srli	r4,r7,16
  80c74c:	1285883a 	add	r2,r2,r10
  80c750:	d9800717 	ldw	r6,28(sp)
  80c754:	2085883a 	add	r2,r4,r2
  80c758:	da000617 	ldw	r8,24(sp)
  80c75c:	da400417 	ldw	r9,16(sp)
  80c760:	1280022e 	bgeu	r2,r10,80c76c <__muldf3+0x584>
  80c764:	01000074 	movhi	r4,1
  80c768:	8923883a 	add	r17,r17,r4
  80c76c:	1008943a 	slli	r4,r2,16
  80c770:	39ffffcc 	andi	r7,r7,65535
  80c774:	e4b9883a 	add	fp,fp,r18
  80c778:	21cf883a 	add	r7,r4,r7
  80c77c:	e4e7803a 	cmpltu	r19,fp,r19
  80c780:	3d0f883a 	add	r7,r7,r20
  80c784:	bf39883a 	add	fp,r23,fp
  80c788:	99c9883a 	add	r4,r19,r7
  80c78c:	e5ef803a 	cmpltu	r23,fp,r23
  80c790:	490b883a 	add	r5,r9,r4
  80c794:	1004d43a 	srli	r2,r2,16
  80c798:	b965883a 	add	r18,r23,r5
  80c79c:	24c9803a 	cmpltu	r4,r4,r19
  80c7a0:	3d29803a 	cmpltu	r20,r7,r20
  80c7a4:	a128b03a 	or	r20,r20,r4
  80c7a8:	95ef803a 	cmpltu	r23,r18,r23
  80c7ac:	2a53803a 	cmpltu	r9,r5,r9
  80c7b0:	a0a9883a 	add	r20,r20,r2
  80c7b4:	4deeb03a 	or	r23,r9,r23
  80c7b8:	a5ef883a 	add	r23,r20,r23
  80c7bc:	bc63883a 	add	r17,r23,r17
  80c7c0:	e004927a 	slli	r2,fp,9
  80c7c4:	d9000117 	ldw	r4,4(sp)
  80c7c8:	882e927a 	slli	r23,r17,9
  80c7cc:	9022d5fa 	srli	r17,r18,23
  80c7d0:	e038d5fa 	srli	fp,fp,23
  80c7d4:	1104b03a 	or	r2,r2,r4
  80c7d8:	9024927a 	slli	r18,r18,9
  80c7dc:	1004c03a 	cmpne	r2,r2,zero
  80c7e0:	bc62b03a 	or	r17,r23,r17
  80c7e4:	1738b03a 	or	fp,r2,fp
  80c7e8:	8880402c 	andhi	r2,r17,256
  80c7ec:	e4a4b03a 	or	r18,fp,r18
  80c7f0:	10000726 	beq	r2,zero,80c810 <__muldf3+0x628>
  80c7f4:	9006d07a 	srli	r3,r18,1
  80c7f8:	880497fa 	slli	r2,r17,31
  80c7fc:	9480004c 	andi	r18,r18,1
  80c800:	8822d07a 	srli	r17,r17,1
  80c804:	1ca4b03a 	or	r18,r3,r18
  80c808:	14a4b03a 	or	r18,r2,r18
  80c80c:	4007883a 	mov	r3,r8
  80c810:	1880ffc4 	addi	r2,r3,1023
  80c814:	0080460e 	bge	zero,r2,80c930 <__muldf3+0x748>
  80c818:	910001cc 	andi	r4,r18,7
  80c81c:	20000726 	beq	r4,zero,80c83c <__muldf3+0x654>
  80c820:	910003cc 	andi	r4,r18,15
  80c824:	01400104 	movi	r5,4
  80c828:	21400426 	beq	r4,r5,80c83c <__muldf3+0x654>
  80c82c:	9149883a 	add	r4,r18,r5
  80c830:	24a5803a 	cmpltu	r18,r4,r18
  80c834:	8ca3883a 	add	r17,r17,r18
  80c838:	2025883a 	mov	r18,r4
  80c83c:	8900402c 	andhi	r4,r17,256
  80c840:	20000426 	beq	r4,zero,80c854 <__muldf3+0x66c>
  80c844:	18810004 	addi	r2,r3,1024
  80c848:	00ffc034 	movhi	r3,65280
  80c84c:	18ffffc4 	addi	r3,r3,-1
  80c850:	88e2703a 	and	r17,r17,r3
  80c854:	00c1ff84 	movi	r3,2046
  80c858:	18bf1316 	blt	r3,r2,80c4a8 <__alt_mem_onchip_memory2+0xff7ec4a8>
  80c85c:	882c977a 	slli	r22,r17,29
  80c860:	9024d0fa 	srli	r18,r18,3
  80c864:	8822927a 	slli	r17,r17,9
  80c868:	1081ffcc 	andi	r2,r2,2047
  80c86c:	b4acb03a 	or	r22,r22,r18
  80c870:	8820d33a 	srli	r16,r17,12
  80c874:	3027883a 	mov	r19,r6
  80c878:	003eba06 	br	80c364 <__alt_mem_onchip_memory2+0xff7ec364>
  80c87c:	8080022c 	andhi	r2,r16,8
  80c880:	10000926 	beq	r2,zero,80c8a8 <__muldf3+0x6c0>
  80c884:	8880022c 	andhi	r2,r17,8
  80c888:	1000071e 	bne	r2,zero,80c8a8 <__muldf3+0x6c0>
  80c88c:	00800434 	movhi	r2,16
  80c890:	8c000234 	orhi	r16,r17,8
  80c894:	10bfffc4 	addi	r2,r2,-1
  80c898:	e027883a 	mov	r19,fp
  80c89c:	80a0703a 	and	r16,r16,r2
  80c8a0:	902d883a 	mov	r22,r18
  80c8a4:	003f1706 	br	80c504 <__alt_mem_onchip_memory2+0xff7ec504>
  80c8a8:	00800434 	movhi	r2,16
  80c8ac:	84000234 	orhi	r16,r16,8
  80c8b0:	10bfffc4 	addi	r2,r2,-1
  80c8b4:	80a0703a 	and	r16,r16,r2
  80c8b8:	003f1206 	br	80c504 <__alt_mem_onchip_memory2+0xff7ec504>
  80c8bc:	147ff604 	addi	r17,r2,-40
  80c8c0:	3462983a 	sll	r17,r6,r17
  80c8c4:	0025883a 	mov	r18,zero
  80c8c8:	003ef306 	br	80c498 <__alt_mem_onchip_memory2+0xff7ec498>
  80c8cc:	3009883a 	mov	r4,r6
  80c8d0:	d9400215 	stw	r5,8(sp)
  80c8d4:	d9800715 	stw	r6,28(sp)
  80c8d8:	da400415 	stw	r9,16(sp)
  80c8dc:	da800315 	stw	r10,12(sp)
  80c8e0:	080d5540 	call	80d554 <__clzsi2>
  80c8e4:	10800804 	addi	r2,r2,32
  80c8e8:	da800317 	ldw	r10,12(sp)
  80c8ec:	da400417 	ldw	r9,16(sp)
  80c8f0:	d9800717 	ldw	r6,28(sp)
  80c8f4:	d9400217 	ldw	r5,8(sp)
  80c8f8:	003edd06 	br	80c470 <__alt_mem_onchip_memory2+0xff7ec470>
  80c8fc:	143ff604 	addi	r16,r2,-40
  80c900:	ac20983a 	sll	r16,r21,r16
  80c904:	002d883a 	mov	r22,zero
  80c908:	003ec106 	br	80c410 <__alt_mem_onchip_memory2+0xff7ec410>
  80c90c:	d9800715 	stw	r6,28(sp)
  80c910:	d9c00215 	stw	r7,8(sp)
  80c914:	da400415 	stw	r9,16(sp)
  80c918:	080d5540 	call	80d554 <__clzsi2>
  80c91c:	10800804 	addi	r2,r2,32
  80c920:	da400417 	ldw	r9,16(sp)
  80c924:	d9c00217 	ldw	r7,8(sp)
  80c928:	d9800717 	ldw	r6,28(sp)
  80c92c:	003eae06 	br	80c3e8 <__alt_mem_onchip_memory2+0xff7ec3e8>
  80c930:	00c00044 	movi	r3,1
  80c934:	1887c83a 	sub	r3,r3,r2
  80c938:	01000e04 	movi	r4,56
  80c93c:	20fe8516 	blt	r4,r3,80c354 <__alt_mem_onchip_memory2+0xff7ec354>
  80c940:	010007c4 	movi	r4,31
  80c944:	20c01b16 	blt	r4,r3,80c9b4 <__muldf3+0x7cc>
  80c948:	00800804 	movi	r2,32
  80c94c:	10c5c83a 	sub	r2,r2,r3
  80c950:	888a983a 	sll	r5,r17,r2
  80c954:	90c8d83a 	srl	r4,r18,r3
  80c958:	9084983a 	sll	r2,r18,r2
  80c95c:	88e2d83a 	srl	r17,r17,r3
  80c960:	2906b03a 	or	r3,r5,r4
  80c964:	1004c03a 	cmpne	r2,r2,zero
  80c968:	1886b03a 	or	r3,r3,r2
  80c96c:	188001cc 	andi	r2,r3,7
  80c970:	10000726 	beq	r2,zero,80c990 <__muldf3+0x7a8>
  80c974:	188003cc 	andi	r2,r3,15
  80c978:	01000104 	movi	r4,4
  80c97c:	11000426 	beq	r2,r4,80c990 <__muldf3+0x7a8>
  80c980:	1805883a 	mov	r2,r3
  80c984:	10c00104 	addi	r3,r2,4
  80c988:	1885803a 	cmpltu	r2,r3,r2
  80c98c:	88a3883a 	add	r17,r17,r2
  80c990:	8880202c 	andhi	r2,r17,128
  80c994:	10001c26 	beq	r2,zero,80ca08 <__muldf3+0x820>
  80c998:	3027883a 	mov	r19,r6
  80c99c:	00800044 	movi	r2,1
  80c9a0:	0021883a 	mov	r16,zero
  80c9a4:	002d883a 	mov	r22,zero
  80c9a8:	003e6e06 	br	80c364 <__alt_mem_onchip_memory2+0xff7ec364>
  80c9ac:	4007883a 	mov	r3,r8
  80c9b0:	003f9706 	br	80c810 <__alt_mem_onchip_memory2+0xff7ec810>
  80c9b4:	017ff844 	movi	r5,-31
  80c9b8:	2885c83a 	sub	r2,r5,r2
  80c9bc:	888ad83a 	srl	r5,r17,r2
  80c9c0:	00800804 	movi	r2,32
  80c9c4:	18801a26 	beq	r3,r2,80ca30 <__muldf3+0x848>
  80c9c8:	01001004 	movi	r4,64
  80c9cc:	20c7c83a 	sub	r3,r4,r3
  80c9d0:	88e2983a 	sll	r17,r17,r3
  80c9d4:	8ca4b03a 	or	r18,r17,r18
  80c9d8:	9004c03a 	cmpne	r2,r18,zero
  80c9dc:	2884b03a 	or	r2,r5,r2
  80c9e0:	144001cc 	andi	r17,r2,7
  80c9e4:	88000d1e 	bne	r17,zero,80ca1c <__muldf3+0x834>
  80c9e8:	0021883a 	mov	r16,zero
  80c9ec:	102cd0fa 	srli	r22,r2,3
  80c9f0:	3027883a 	mov	r19,r6
  80c9f4:	0005883a 	mov	r2,zero
  80c9f8:	b46cb03a 	or	r22,r22,r17
  80c9fc:	003e5906 	br	80c364 <__alt_mem_onchip_memory2+0xff7ec364>
  80ca00:	1007883a 	mov	r3,r2
  80ca04:	0023883a 	mov	r17,zero
  80ca08:	8820927a 	slli	r16,r17,9
  80ca0c:	1805883a 	mov	r2,r3
  80ca10:	8822977a 	slli	r17,r17,29
  80ca14:	8020d33a 	srli	r16,r16,12
  80ca18:	003ff406 	br	80c9ec <__alt_mem_onchip_memory2+0xff7ec9ec>
  80ca1c:	10c003cc 	andi	r3,r2,15
  80ca20:	01000104 	movi	r4,4
  80ca24:	193ff626 	beq	r3,r4,80ca00 <__alt_mem_onchip_memory2+0xff7eca00>
  80ca28:	0023883a 	mov	r17,zero
  80ca2c:	003fd506 	br	80c984 <__alt_mem_onchip_memory2+0xff7ec984>
  80ca30:	0023883a 	mov	r17,zero
  80ca34:	003fe706 	br	80c9d4 <__alt_mem_onchip_memory2+0xff7ec9d4>
  80ca38:	00800434 	movhi	r2,16
  80ca3c:	8c000234 	orhi	r16,r17,8
  80ca40:	10bfffc4 	addi	r2,r2,-1
  80ca44:	3027883a 	mov	r19,r6
  80ca48:	80a0703a 	and	r16,r16,r2
  80ca4c:	902d883a 	mov	r22,r18
  80ca50:	003eac06 	br	80c504 <__alt_mem_onchip_memory2+0xff7ec504>

0080ca54 <__subdf3>:
  80ca54:	02000434 	movhi	r8,16
  80ca58:	423fffc4 	addi	r8,r8,-1
  80ca5c:	defffb04 	addi	sp,sp,-20
  80ca60:	2a14703a 	and	r10,r5,r8
  80ca64:	3812d53a 	srli	r9,r7,20
  80ca68:	3a10703a 	and	r8,r7,r8
  80ca6c:	2006d77a 	srli	r3,r4,29
  80ca70:	3004d77a 	srli	r2,r6,29
  80ca74:	dc000015 	stw	r16,0(sp)
  80ca78:	501490fa 	slli	r10,r10,3
  80ca7c:	2820d53a 	srli	r16,r5,20
  80ca80:	401090fa 	slli	r8,r8,3
  80ca84:	dc800215 	stw	r18,8(sp)
  80ca88:	dc400115 	stw	r17,4(sp)
  80ca8c:	dfc00415 	stw	ra,16(sp)
  80ca90:	202290fa 	slli	r17,r4,3
  80ca94:	dcc00315 	stw	r19,12(sp)
  80ca98:	4a41ffcc 	andi	r9,r9,2047
  80ca9c:	0101ffc4 	movi	r4,2047
  80caa0:	2824d7fa 	srli	r18,r5,31
  80caa4:	8401ffcc 	andi	r16,r16,2047
  80caa8:	50c6b03a 	or	r3,r10,r3
  80caac:	380ed7fa 	srli	r7,r7,31
  80cab0:	408ab03a 	or	r5,r8,r2
  80cab4:	300c90fa 	slli	r6,r6,3
  80cab8:	49009626 	beq	r9,r4,80cd14 <__subdf3+0x2c0>
  80cabc:	39c0005c 	xori	r7,r7,1
  80cac0:	8245c83a 	sub	r2,r16,r9
  80cac4:	3c807426 	beq	r7,r18,80cc98 <__subdf3+0x244>
  80cac8:	0080af0e 	bge	zero,r2,80cd88 <__subdf3+0x334>
  80cacc:	48002a1e 	bne	r9,zero,80cb78 <__subdf3+0x124>
  80cad0:	2988b03a 	or	r4,r5,r6
  80cad4:	20009a1e 	bne	r4,zero,80cd40 <__subdf3+0x2ec>
  80cad8:	888001cc 	andi	r2,r17,7
  80cadc:	10000726 	beq	r2,zero,80cafc <__subdf3+0xa8>
  80cae0:	888003cc 	andi	r2,r17,15
  80cae4:	01000104 	movi	r4,4
  80cae8:	11000426 	beq	r2,r4,80cafc <__subdf3+0xa8>
  80caec:	890b883a 	add	r5,r17,r4
  80caf0:	2c63803a 	cmpltu	r17,r5,r17
  80caf4:	1c47883a 	add	r3,r3,r17
  80caf8:	2823883a 	mov	r17,r5
  80cafc:	1880202c 	andhi	r2,r3,128
  80cb00:	10005926 	beq	r2,zero,80cc68 <__subdf3+0x214>
  80cb04:	84000044 	addi	r16,r16,1
  80cb08:	0081ffc4 	movi	r2,2047
  80cb0c:	8080be26 	beq	r16,r2,80ce08 <__subdf3+0x3b4>
  80cb10:	017fe034 	movhi	r5,65408
  80cb14:	297fffc4 	addi	r5,r5,-1
  80cb18:	1946703a 	and	r3,r3,r5
  80cb1c:	1804977a 	slli	r2,r3,29
  80cb20:	1806927a 	slli	r3,r3,9
  80cb24:	8822d0fa 	srli	r17,r17,3
  80cb28:	8401ffcc 	andi	r16,r16,2047
  80cb2c:	180ad33a 	srli	r5,r3,12
  80cb30:	9100004c 	andi	r4,r18,1
  80cb34:	1444b03a 	or	r2,r2,r17
  80cb38:	80c1ffcc 	andi	r3,r16,2047
  80cb3c:	1820953a 	slli	r16,r3,20
  80cb40:	20c03fcc 	andi	r3,r4,255
  80cb44:	180897fa 	slli	r4,r3,31
  80cb48:	00c00434 	movhi	r3,16
  80cb4c:	18ffffc4 	addi	r3,r3,-1
  80cb50:	28c6703a 	and	r3,r5,r3
  80cb54:	1c06b03a 	or	r3,r3,r16
  80cb58:	1906b03a 	or	r3,r3,r4
  80cb5c:	dfc00417 	ldw	ra,16(sp)
  80cb60:	dcc00317 	ldw	r19,12(sp)
  80cb64:	dc800217 	ldw	r18,8(sp)
  80cb68:	dc400117 	ldw	r17,4(sp)
  80cb6c:	dc000017 	ldw	r16,0(sp)
  80cb70:	dec00504 	addi	sp,sp,20
  80cb74:	f800283a 	ret
  80cb78:	0101ffc4 	movi	r4,2047
  80cb7c:	813fd626 	beq	r16,r4,80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80cb80:	29402034 	orhi	r5,r5,128
  80cb84:	01000e04 	movi	r4,56
  80cb88:	2080a316 	blt	r4,r2,80ce18 <__subdf3+0x3c4>
  80cb8c:	010007c4 	movi	r4,31
  80cb90:	2080c616 	blt	r4,r2,80ceac <__subdf3+0x458>
  80cb94:	01000804 	movi	r4,32
  80cb98:	2089c83a 	sub	r4,r4,r2
  80cb9c:	2910983a 	sll	r8,r5,r4
  80cba0:	308ed83a 	srl	r7,r6,r2
  80cba4:	3108983a 	sll	r4,r6,r4
  80cba8:	2884d83a 	srl	r2,r5,r2
  80cbac:	41ccb03a 	or	r6,r8,r7
  80cbb0:	2008c03a 	cmpne	r4,r4,zero
  80cbb4:	310cb03a 	or	r6,r6,r4
  80cbb8:	898dc83a 	sub	r6,r17,r6
  80cbbc:	89a3803a 	cmpltu	r17,r17,r6
  80cbc0:	1887c83a 	sub	r3,r3,r2
  80cbc4:	1c47c83a 	sub	r3,r3,r17
  80cbc8:	3023883a 	mov	r17,r6
  80cbcc:	1880202c 	andhi	r2,r3,128
  80cbd0:	10002326 	beq	r2,zero,80cc60 <__subdf3+0x20c>
  80cbd4:	04c02034 	movhi	r19,128
  80cbd8:	9cffffc4 	addi	r19,r19,-1
  80cbdc:	1ce6703a 	and	r19,r3,r19
  80cbe0:	98007a26 	beq	r19,zero,80cdcc <__subdf3+0x378>
  80cbe4:	9809883a 	mov	r4,r19
  80cbe8:	080d5540 	call	80d554 <__clzsi2>
  80cbec:	113ffe04 	addi	r4,r2,-8
  80cbf0:	00c007c4 	movi	r3,31
  80cbf4:	19007b16 	blt	r3,r4,80cde4 <__subdf3+0x390>
  80cbf8:	00800804 	movi	r2,32
  80cbfc:	1105c83a 	sub	r2,r2,r4
  80cc00:	8884d83a 	srl	r2,r17,r2
  80cc04:	9906983a 	sll	r3,r19,r4
  80cc08:	8922983a 	sll	r17,r17,r4
  80cc0c:	10c4b03a 	or	r2,r2,r3
  80cc10:	24007816 	blt	r4,r16,80cdf4 <__subdf3+0x3a0>
  80cc14:	2421c83a 	sub	r16,r4,r16
  80cc18:	80c00044 	addi	r3,r16,1
  80cc1c:	010007c4 	movi	r4,31
  80cc20:	20c09516 	blt	r4,r3,80ce78 <__subdf3+0x424>
  80cc24:	01400804 	movi	r5,32
  80cc28:	28cbc83a 	sub	r5,r5,r3
  80cc2c:	88c8d83a 	srl	r4,r17,r3
  80cc30:	8962983a 	sll	r17,r17,r5
  80cc34:	114a983a 	sll	r5,r2,r5
  80cc38:	10c6d83a 	srl	r3,r2,r3
  80cc3c:	8804c03a 	cmpne	r2,r17,zero
  80cc40:	290ab03a 	or	r5,r5,r4
  80cc44:	28a2b03a 	or	r17,r5,r2
  80cc48:	0021883a 	mov	r16,zero
  80cc4c:	003fa206 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80cc50:	2090b03a 	or	r8,r4,r2
  80cc54:	40018e26 	beq	r8,zero,80d290 <__subdf3+0x83c>
  80cc58:	1007883a 	mov	r3,r2
  80cc5c:	2023883a 	mov	r17,r4
  80cc60:	888001cc 	andi	r2,r17,7
  80cc64:	103f9e1e 	bne	r2,zero,80cae0 <__alt_mem_onchip_memory2+0xff7ecae0>
  80cc68:	1804977a 	slli	r2,r3,29
  80cc6c:	8822d0fa 	srli	r17,r17,3
  80cc70:	1810d0fa 	srli	r8,r3,3
  80cc74:	9100004c 	andi	r4,r18,1
  80cc78:	1444b03a 	or	r2,r2,r17
  80cc7c:	00c1ffc4 	movi	r3,2047
  80cc80:	80c02826 	beq	r16,r3,80cd24 <__subdf3+0x2d0>
  80cc84:	01400434 	movhi	r5,16
  80cc88:	297fffc4 	addi	r5,r5,-1
  80cc8c:	80e0703a 	and	r16,r16,r3
  80cc90:	414a703a 	and	r5,r8,r5
  80cc94:	003fa806 	br	80cb38 <__alt_mem_onchip_memory2+0xff7ecb38>
  80cc98:	0080630e 	bge	zero,r2,80ce28 <__subdf3+0x3d4>
  80cc9c:	48003026 	beq	r9,zero,80cd60 <__subdf3+0x30c>
  80cca0:	0101ffc4 	movi	r4,2047
  80cca4:	813f8c26 	beq	r16,r4,80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80cca8:	29402034 	orhi	r5,r5,128
  80ccac:	01000e04 	movi	r4,56
  80ccb0:	2080a90e 	bge	r4,r2,80cf58 <__subdf3+0x504>
  80ccb4:	298cb03a 	or	r6,r5,r6
  80ccb8:	3012c03a 	cmpne	r9,r6,zero
  80ccbc:	0005883a 	mov	r2,zero
  80ccc0:	4c53883a 	add	r9,r9,r17
  80ccc4:	4c63803a 	cmpltu	r17,r9,r17
  80ccc8:	10c7883a 	add	r3,r2,r3
  80cccc:	88c7883a 	add	r3,r17,r3
  80ccd0:	4823883a 	mov	r17,r9
  80ccd4:	1880202c 	andhi	r2,r3,128
  80ccd8:	1000d026 	beq	r2,zero,80d01c <__subdf3+0x5c8>
  80ccdc:	84000044 	addi	r16,r16,1
  80cce0:	0081ffc4 	movi	r2,2047
  80cce4:	8080fe26 	beq	r16,r2,80d0e0 <__subdf3+0x68c>
  80cce8:	00bfe034 	movhi	r2,65408
  80ccec:	10bfffc4 	addi	r2,r2,-1
  80ccf0:	1886703a 	and	r3,r3,r2
  80ccf4:	880ad07a 	srli	r5,r17,1
  80ccf8:	180497fa 	slli	r2,r3,31
  80ccfc:	8900004c 	andi	r4,r17,1
  80cd00:	2922b03a 	or	r17,r5,r4
  80cd04:	1806d07a 	srli	r3,r3,1
  80cd08:	1462b03a 	or	r17,r2,r17
  80cd0c:	3825883a 	mov	r18,r7
  80cd10:	003f7106 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80cd14:	2984b03a 	or	r2,r5,r6
  80cd18:	103f6826 	beq	r2,zero,80cabc <__alt_mem_onchip_memory2+0xff7ecabc>
  80cd1c:	39c03fcc 	andi	r7,r7,255
  80cd20:	003f6706 	br	80cac0 <__alt_mem_onchip_memory2+0xff7ecac0>
  80cd24:	4086b03a 	or	r3,r8,r2
  80cd28:	18015226 	beq	r3,zero,80d274 <__subdf3+0x820>
  80cd2c:	00c00434 	movhi	r3,16
  80cd30:	41400234 	orhi	r5,r8,8
  80cd34:	18ffffc4 	addi	r3,r3,-1
  80cd38:	28ca703a 	and	r5,r5,r3
  80cd3c:	003f7e06 	br	80cb38 <__alt_mem_onchip_memory2+0xff7ecb38>
  80cd40:	10bfffc4 	addi	r2,r2,-1
  80cd44:	1000491e 	bne	r2,zero,80ce6c <__subdf3+0x418>
  80cd48:	898fc83a 	sub	r7,r17,r6
  80cd4c:	89e3803a 	cmpltu	r17,r17,r7
  80cd50:	1947c83a 	sub	r3,r3,r5
  80cd54:	1c47c83a 	sub	r3,r3,r17
  80cd58:	3823883a 	mov	r17,r7
  80cd5c:	003f9b06 	br	80cbcc <__alt_mem_onchip_memory2+0xff7ecbcc>
  80cd60:	2988b03a 	or	r4,r5,r6
  80cd64:	203f5c26 	beq	r4,zero,80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80cd68:	10bfffc4 	addi	r2,r2,-1
  80cd6c:	1000931e 	bne	r2,zero,80cfbc <__subdf3+0x568>
  80cd70:	898d883a 	add	r6,r17,r6
  80cd74:	3463803a 	cmpltu	r17,r6,r17
  80cd78:	1947883a 	add	r3,r3,r5
  80cd7c:	88c7883a 	add	r3,r17,r3
  80cd80:	3023883a 	mov	r17,r6
  80cd84:	003fd306 	br	80ccd4 <__alt_mem_onchip_memory2+0xff7eccd4>
  80cd88:	1000541e 	bne	r2,zero,80cedc <__subdf3+0x488>
  80cd8c:	80800044 	addi	r2,r16,1
  80cd90:	1081ffcc 	andi	r2,r2,2047
  80cd94:	01000044 	movi	r4,1
  80cd98:	2080a20e 	bge	r4,r2,80d024 <__subdf3+0x5d0>
  80cd9c:	8989c83a 	sub	r4,r17,r6
  80cda0:	8905803a 	cmpltu	r2,r17,r4
  80cda4:	1967c83a 	sub	r19,r3,r5
  80cda8:	98a7c83a 	sub	r19,r19,r2
  80cdac:	9880202c 	andhi	r2,r19,128
  80cdb0:	10006326 	beq	r2,zero,80cf40 <__subdf3+0x4ec>
  80cdb4:	3463c83a 	sub	r17,r6,r17
  80cdb8:	28c7c83a 	sub	r3,r5,r3
  80cdbc:	344d803a 	cmpltu	r6,r6,r17
  80cdc0:	19a7c83a 	sub	r19,r3,r6
  80cdc4:	3825883a 	mov	r18,r7
  80cdc8:	983f861e 	bne	r19,zero,80cbe4 <__alt_mem_onchip_memory2+0xff7ecbe4>
  80cdcc:	8809883a 	mov	r4,r17
  80cdd0:	080d5540 	call	80d554 <__clzsi2>
  80cdd4:	10800804 	addi	r2,r2,32
  80cdd8:	113ffe04 	addi	r4,r2,-8
  80cddc:	00c007c4 	movi	r3,31
  80cde0:	193f850e 	bge	r3,r4,80cbf8 <__alt_mem_onchip_memory2+0xff7ecbf8>
  80cde4:	10bff604 	addi	r2,r2,-40
  80cde8:	8884983a 	sll	r2,r17,r2
  80cdec:	0023883a 	mov	r17,zero
  80cdf0:	243f880e 	bge	r4,r16,80cc14 <__alt_mem_onchip_memory2+0xff7ecc14>
  80cdf4:	00ffe034 	movhi	r3,65408
  80cdf8:	18ffffc4 	addi	r3,r3,-1
  80cdfc:	8121c83a 	sub	r16,r16,r4
  80ce00:	10c6703a 	and	r3,r2,r3
  80ce04:	003f3406 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80ce08:	9100004c 	andi	r4,r18,1
  80ce0c:	000b883a 	mov	r5,zero
  80ce10:	0005883a 	mov	r2,zero
  80ce14:	003f4806 	br	80cb38 <__alt_mem_onchip_memory2+0xff7ecb38>
  80ce18:	298cb03a 	or	r6,r5,r6
  80ce1c:	300cc03a 	cmpne	r6,r6,zero
  80ce20:	0005883a 	mov	r2,zero
  80ce24:	003f6406 	br	80cbb8 <__alt_mem_onchip_memory2+0xff7ecbb8>
  80ce28:	10009a1e 	bne	r2,zero,80d094 <__subdf3+0x640>
  80ce2c:	82400044 	addi	r9,r16,1
  80ce30:	4881ffcc 	andi	r2,r9,2047
  80ce34:	02800044 	movi	r10,1
  80ce38:	5080670e 	bge	r10,r2,80cfd8 <__subdf3+0x584>
  80ce3c:	0081ffc4 	movi	r2,2047
  80ce40:	4880af26 	beq	r9,r2,80d100 <__subdf3+0x6ac>
  80ce44:	898d883a 	add	r6,r17,r6
  80ce48:	1945883a 	add	r2,r3,r5
  80ce4c:	3447803a 	cmpltu	r3,r6,r17
  80ce50:	1887883a 	add	r3,r3,r2
  80ce54:	182297fa 	slli	r17,r3,31
  80ce58:	300cd07a 	srli	r6,r6,1
  80ce5c:	1806d07a 	srli	r3,r3,1
  80ce60:	4821883a 	mov	r16,r9
  80ce64:	89a2b03a 	or	r17,r17,r6
  80ce68:	003f1b06 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80ce6c:	0101ffc4 	movi	r4,2047
  80ce70:	813f441e 	bne	r16,r4,80cb84 <__alt_mem_onchip_memory2+0xff7ecb84>
  80ce74:	003f1806 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80ce78:	843ff844 	addi	r16,r16,-31
  80ce7c:	01400804 	movi	r5,32
  80ce80:	1408d83a 	srl	r4,r2,r16
  80ce84:	19405026 	beq	r3,r5,80cfc8 <__subdf3+0x574>
  80ce88:	01401004 	movi	r5,64
  80ce8c:	28c7c83a 	sub	r3,r5,r3
  80ce90:	10c4983a 	sll	r2,r2,r3
  80ce94:	88a2b03a 	or	r17,r17,r2
  80ce98:	8822c03a 	cmpne	r17,r17,zero
  80ce9c:	2462b03a 	or	r17,r4,r17
  80cea0:	0007883a 	mov	r3,zero
  80cea4:	0021883a 	mov	r16,zero
  80cea8:	003f6d06 	br	80cc60 <__alt_mem_onchip_memory2+0xff7ecc60>
  80ceac:	11fff804 	addi	r7,r2,-32
  80ceb0:	01000804 	movi	r4,32
  80ceb4:	29ced83a 	srl	r7,r5,r7
  80ceb8:	11004526 	beq	r2,r4,80cfd0 <__subdf3+0x57c>
  80cebc:	01001004 	movi	r4,64
  80cec0:	2089c83a 	sub	r4,r4,r2
  80cec4:	2904983a 	sll	r2,r5,r4
  80cec8:	118cb03a 	or	r6,r2,r6
  80cecc:	300cc03a 	cmpne	r6,r6,zero
  80ced0:	398cb03a 	or	r6,r7,r6
  80ced4:	0005883a 	mov	r2,zero
  80ced8:	003f3706 	br	80cbb8 <__alt_mem_onchip_memory2+0xff7ecbb8>
  80cedc:	80002a26 	beq	r16,zero,80cf88 <__subdf3+0x534>
  80cee0:	0101ffc4 	movi	r4,2047
  80cee4:	49006626 	beq	r9,r4,80d080 <__subdf3+0x62c>
  80cee8:	0085c83a 	sub	r2,zero,r2
  80ceec:	18c02034 	orhi	r3,r3,128
  80cef0:	01000e04 	movi	r4,56
  80cef4:	20807e16 	blt	r4,r2,80d0f0 <__subdf3+0x69c>
  80cef8:	010007c4 	movi	r4,31
  80cefc:	2080e716 	blt	r4,r2,80d29c <__subdf3+0x848>
  80cf00:	01000804 	movi	r4,32
  80cf04:	2089c83a 	sub	r4,r4,r2
  80cf08:	1914983a 	sll	r10,r3,r4
  80cf0c:	8890d83a 	srl	r8,r17,r2
  80cf10:	8908983a 	sll	r4,r17,r4
  80cf14:	1884d83a 	srl	r2,r3,r2
  80cf18:	5222b03a 	or	r17,r10,r8
  80cf1c:	2006c03a 	cmpne	r3,r4,zero
  80cf20:	88e2b03a 	or	r17,r17,r3
  80cf24:	3463c83a 	sub	r17,r6,r17
  80cf28:	2885c83a 	sub	r2,r5,r2
  80cf2c:	344d803a 	cmpltu	r6,r6,r17
  80cf30:	1187c83a 	sub	r3,r2,r6
  80cf34:	4821883a 	mov	r16,r9
  80cf38:	3825883a 	mov	r18,r7
  80cf3c:	003f2306 	br	80cbcc <__alt_mem_onchip_memory2+0xff7ecbcc>
  80cf40:	24d0b03a 	or	r8,r4,r19
  80cf44:	40001b1e 	bne	r8,zero,80cfb4 <__subdf3+0x560>
  80cf48:	0005883a 	mov	r2,zero
  80cf4c:	0009883a 	mov	r4,zero
  80cf50:	0021883a 	mov	r16,zero
  80cf54:	003f4906 	br	80cc7c <__alt_mem_onchip_memory2+0xff7ecc7c>
  80cf58:	010007c4 	movi	r4,31
  80cf5c:	20803a16 	blt	r4,r2,80d048 <__subdf3+0x5f4>
  80cf60:	01000804 	movi	r4,32
  80cf64:	2089c83a 	sub	r4,r4,r2
  80cf68:	2912983a 	sll	r9,r5,r4
  80cf6c:	3090d83a 	srl	r8,r6,r2
  80cf70:	3108983a 	sll	r4,r6,r4
  80cf74:	2884d83a 	srl	r2,r5,r2
  80cf78:	4a12b03a 	or	r9,r9,r8
  80cf7c:	2008c03a 	cmpne	r4,r4,zero
  80cf80:	4912b03a 	or	r9,r9,r4
  80cf84:	003f4e06 	br	80ccc0 <__alt_mem_onchip_memory2+0xff7eccc0>
  80cf88:	1c48b03a 	or	r4,r3,r17
  80cf8c:	20003c26 	beq	r4,zero,80d080 <__subdf3+0x62c>
  80cf90:	0084303a 	nor	r2,zero,r2
  80cf94:	1000381e 	bne	r2,zero,80d078 <__subdf3+0x624>
  80cf98:	3463c83a 	sub	r17,r6,r17
  80cf9c:	28c5c83a 	sub	r2,r5,r3
  80cfa0:	344d803a 	cmpltu	r6,r6,r17
  80cfa4:	1187c83a 	sub	r3,r2,r6
  80cfa8:	4821883a 	mov	r16,r9
  80cfac:	3825883a 	mov	r18,r7
  80cfb0:	003f0606 	br	80cbcc <__alt_mem_onchip_memory2+0xff7ecbcc>
  80cfb4:	2023883a 	mov	r17,r4
  80cfb8:	003f0906 	br	80cbe0 <__alt_mem_onchip_memory2+0xff7ecbe0>
  80cfbc:	0101ffc4 	movi	r4,2047
  80cfc0:	813f3a1e 	bne	r16,r4,80ccac <__alt_mem_onchip_memory2+0xff7eccac>
  80cfc4:	003ec406 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80cfc8:	0005883a 	mov	r2,zero
  80cfcc:	003fb106 	br	80ce94 <__alt_mem_onchip_memory2+0xff7ece94>
  80cfd0:	0005883a 	mov	r2,zero
  80cfd4:	003fbc06 	br	80cec8 <__alt_mem_onchip_memory2+0xff7ecec8>
  80cfd8:	1c44b03a 	or	r2,r3,r17
  80cfdc:	80008e1e 	bne	r16,zero,80d218 <__subdf3+0x7c4>
  80cfe0:	1000c826 	beq	r2,zero,80d304 <__subdf3+0x8b0>
  80cfe4:	2984b03a 	or	r2,r5,r6
  80cfe8:	103ebb26 	beq	r2,zero,80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80cfec:	8989883a 	add	r4,r17,r6
  80cff0:	1945883a 	add	r2,r3,r5
  80cff4:	2447803a 	cmpltu	r3,r4,r17
  80cff8:	1887883a 	add	r3,r3,r2
  80cffc:	1880202c 	andhi	r2,r3,128
  80d000:	2023883a 	mov	r17,r4
  80d004:	103f1626 	beq	r2,zero,80cc60 <__alt_mem_onchip_memory2+0xff7ecc60>
  80d008:	00bfe034 	movhi	r2,65408
  80d00c:	10bfffc4 	addi	r2,r2,-1
  80d010:	5021883a 	mov	r16,r10
  80d014:	1886703a 	and	r3,r3,r2
  80d018:	003eaf06 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d01c:	3825883a 	mov	r18,r7
  80d020:	003f0f06 	br	80cc60 <__alt_mem_onchip_memory2+0xff7ecc60>
  80d024:	1c44b03a 	or	r2,r3,r17
  80d028:	8000251e 	bne	r16,zero,80d0c0 <__subdf3+0x66c>
  80d02c:	1000661e 	bne	r2,zero,80d1c8 <__subdf3+0x774>
  80d030:	2990b03a 	or	r8,r5,r6
  80d034:	40009626 	beq	r8,zero,80d290 <__subdf3+0x83c>
  80d038:	2807883a 	mov	r3,r5
  80d03c:	3023883a 	mov	r17,r6
  80d040:	3825883a 	mov	r18,r7
  80d044:	003ea406 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d048:	127ff804 	addi	r9,r2,-32
  80d04c:	01000804 	movi	r4,32
  80d050:	2a52d83a 	srl	r9,r5,r9
  80d054:	11008c26 	beq	r2,r4,80d288 <__subdf3+0x834>
  80d058:	01001004 	movi	r4,64
  80d05c:	2085c83a 	sub	r2,r4,r2
  80d060:	2884983a 	sll	r2,r5,r2
  80d064:	118cb03a 	or	r6,r2,r6
  80d068:	300cc03a 	cmpne	r6,r6,zero
  80d06c:	4992b03a 	or	r9,r9,r6
  80d070:	0005883a 	mov	r2,zero
  80d074:	003f1206 	br	80ccc0 <__alt_mem_onchip_memory2+0xff7eccc0>
  80d078:	0101ffc4 	movi	r4,2047
  80d07c:	493f9c1e 	bne	r9,r4,80cef0 <__alt_mem_onchip_memory2+0xff7ecef0>
  80d080:	2807883a 	mov	r3,r5
  80d084:	3023883a 	mov	r17,r6
  80d088:	4821883a 	mov	r16,r9
  80d08c:	3825883a 	mov	r18,r7
  80d090:	003e9106 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d094:	80001f1e 	bne	r16,zero,80d114 <__subdf3+0x6c0>
  80d098:	1c48b03a 	or	r4,r3,r17
  80d09c:	20005a26 	beq	r4,zero,80d208 <__subdf3+0x7b4>
  80d0a0:	0084303a 	nor	r2,zero,r2
  80d0a4:	1000561e 	bne	r2,zero,80d200 <__subdf3+0x7ac>
  80d0a8:	89a3883a 	add	r17,r17,r6
  80d0ac:	1945883a 	add	r2,r3,r5
  80d0b0:	898d803a 	cmpltu	r6,r17,r6
  80d0b4:	3087883a 	add	r3,r6,r2
  80d0b8:	4821883a 	mov	r16,r9
  80d0bc:	003f0506 	br	80ccd4 <__alt_mem_onchip_memory2+0xff7eccd4>
  80d0c0:	10002b1e 	bne	r2,zero,80d170 <__subdf3+0x71c>
  80d0c4:	2984b03a 	or	r2,r5,r6
  80d0c8:	10008026 	beq	r2,zero,80d2cc <__subdf3+0x878>
  80d0cc:	2807883a 	mov	r3,r5
  80d0d0:	3023883a 	mov	r17,r6
  80d0d4:	3825883a 	mov	r18,r7
  80d0d8:	0401ffc4 	movi	r16,2047
  80d0dc:	003e7e06 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d0e0:	3809883a 	mov	r4,r7
  80d0e4:	0011883a 	mov	r8,zero
  80d0e8:	0005883a 	mov	r2,zero
  80d0ec:	003ee306 	br	80cc7c <__alt_mem_onchip_memory2+0xff7ecc7c>
  80d0f0:	1c62b03a 	or	r17,r3,r17
  80d0f4:	8822c03a 	cmpne	r17,r17,zero
  80d0f8:	0005883a 	mov	r2,zero
  80d0fc:	003f8906 	br	80cf24 <__alt_mem_onchip_memory2+0xff7ecf24>
  80d100:	3809883a 	mov	r4,r7
  80d104:	4821883a 	mov	r16,r9
  80d108:	0011883a 	mov	r8,zero
  80d10c:	0005883a 	mov	r2,zero
  80d110:	003eda06 	br	80cc7c <__alt_mem_onchip_memory2+0xff7ecc7c>
  80d114:	0101ffc4 	movi	r4,2047
  80d118:	49003b26 	beq	r9,r4,80d208 <__subdf3+0x7b4>
  80d11c:	0085c83a 	sub	r2,zero,r2
  80d120:	18c02034 	orhi	r3,r3,128
  80d124:	01000e04 	movi	r4,56
  80d128:	20806e16 	blt	r4,r2,80d2e4 <__subdf3+0x890>
  80d12c:	010007c4 	movi	r4,31
  80d130:	20807716 	blt	r4,r2,80d310 <__subdf3+0x8bc>
  80d134:	01000804 	movi	r4,32
  80d138:	2089c83a 	sub	r4,r4,r2
  80d13c:	1914983a 	sll	r10,r3,r4
  80d140:	8890d83a 	srl	r8,r17,r2
  80d144:	8908983a 	sll	r4,r17,r4
  80d148:	1884d83a 	srl	r2,r3,r2
  80d14c:	5222b03a 	or	r17,r10,r8
  80d150:	2006c03a 	cmpne	r3,r4,zero
  80d154:	88e2b03a 	or	r17,r17,r3
  80d158:	89a3883a 	add	r17,r17,r6
  80d15c:	1145883a 	add	r2,r2,r5
  80d160:	898d803a 	cmpltu	r6,r17,r6
  80d164:	3087883a 	add	r3,r6,r2
  80d168:	4821883a 	mov	r16,r9
  80d16c:	003ed906 	br	80ccd4 <__alt_mem_onchip_memory2+0xff7eccd4>
  80d170:	2984b03a 	or	r2,r5,r6
  80d174:	10004226 	beq	r2,zero,80d280 <__subdf3+0x82c>
  80d178:	1808d0fa 	srli	r4,r3,3
  80d17c:	8822d0fa 	srli	r17,r17,3
  80d180:	1806977a 	slli	r3,r3,29
  80d184:	2080022c 	andhi	r2,r4,8
  80d188:	1c62b03a 	or	r17,r3,r17
  80d18c:	10000826 	beq	r2,zero,80d1b0 <__subdf3+0x75c>
  80d190:	2812d0fa 	srli	r9,r5,3
  80d194:	4880022c 	andhi	r2,r9,8
  80d198:	1000051e 	bne	r2,zero,80d1b0 <__subdf3+0x75c>
  80d19c:	300cd0fa 	srli	r6,r6,3
  80d1a0:	2804977a 	slli	r2,r5,29
  80d1a4:	4809883a 	mov	r4,r9
  80d1a8:	3825883a 	mov	r18,r7
  80d1ac:	11a2b03a 	or	r17,r2,r6
  80d1b0:	8806d77a 	srli	r3,r17,29
  80d1b4:	200890fa 	slli	r4,r4,3
  80d1b8:	882290fa 	slli	r17,r17,3
  80d1bc:	0401ffc4 	movi	r16,2047
  80d1c0:	1906b03a 	or	r3,r3,r4
  80d1c4:	003e4406 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d1c8:	2984b03a 	or	r2,r5,r6
  80d1cc:	103e4226 	beq	r2,zero,80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d1d0:	8989c83a 	sub	r4,r17,r6
  80d1d4:	8911803a 	cmpltu	r8,r17,r4
  80d1d8:	1945c83a 	sub	r2,r3,r5
  80d1dc:	1205c83a 	sub	r2,r2,r8
  80d1e0:	1200202c 	andhi	r8,r2,128
  80d1e4:	403e9a26 	beq	r8,zero,80cc50 <__alt_mem_onchip_memory2+0xff7ecc50>
  80d1e8:	3463c83a 	sub	r17,r6,r17
  80d1ec:	28c5c83a 	sub	r2,r5,r3
  80d1f0:	344d803a 	cmpltu	r6,r6,r17
  80d1f4:	1187c83a 	sub	r3,r2,r6
  80d1f8:	3825883a 	mov	r18,r7
  80d1fc:	003e3606 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d200:	0101ffc4 	movi	r4,2047
  80d204:	493fc71e 	bne	r9,r4,80d124 <__alt_mem_onchip_memory2+0xff7ed124>
  80d208:	2807883a 	mov	r3,r5
  80d20c:	3023883a 	mov	r17,r6
  80d210:	4821883a 	mov	r16,r9
  80d214:	003e3006 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d218:	10003626 	beq	r2,zero,80d2f4 <__subdf3+0x8a0>
  80d21c:	2984b03a 	or	r2,r5,r6
  80d220:	10001726 	beq	r2,zero,80d280 <__subdf3+0x82c>
  80d224:	1808d0fa 	srli	r4,r3,3
  80d228:	8822d0fa 	srli	r17,r17,3
  80d22c:	1806977a 	slli	r3,r3,29
  80d230:	2080022c 	andhi	r2,r4,8
  80d234:	1c62b03a 	or	r17,r3,r17
  80d238:	10000726 	beq	r2,zero,80d258 <__subdf3+0x804>
  80d23c:	2812d0fa 	srli	r9,r5,3
  80d240:	4880022c 	andhi	r2,r9,8
  80d244:	1000041e 	bne	r2,zero,80d258 <__subdf3+0x804>
  80d248:	300cd0fa 	srli	r6,r6,3
  80d24c:	2804977a 	slli	r2,r5,29
  80d250:	4809883a 	mov	r4,r9
  80d254:	11a2b03a 	or	r17,r2,r6
  80d258:	8806d77a 	srli	r3,r17,29
  80d25c:	200890fa 	slli	r4,r4,3
  80d260:	882290fa 	slli	r17,r17,3
  80d264:	3825883a 	mov	r18,r7
  80d268:	1906b03a 	or	r3,r3,r4
  80d26c:	0401ffc4 	movi	r16,2047
  80d270:	003e1906 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d274:	000b883a 	mov	r5,zero
  80d278:	0005883a 	mov	r2,zero
  80d27c:	003e2e06 	br	80cb38 <__alt_mem_onchip_memory2+0xff7ecb38>
  80d280:	0401ffc4 	movi	r16,2047
  80d284:	003e1406 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d288:	0005883a 	mov	r2,zero
  80d28c:	003f7506 	br	80d064 <__alt_mem_onchip_memory2+0xff7ed064>
  80d290:	0005883a 	mov	r2,zero
  80d294:	0009883a 	mov	r4,zero
  80d298:	003e7806 	br	80cc7c <__alt_mem_onchip_memory2+0xff7ecc7c>
  80d29c:	123ff804 	addi	r8,r2,-32
  80d2a0:	01000804 	movi	r4,32
  80d2a4:	1a10d83a 	srl	r8,r3,r8
  80d2a8:	11002526 	beq	r2,r4,80d340 <__subdf3+0x8ec>
  80d2ac:	01001004 	movi	r4,64
  80d2b0:	2085c83a 	sub	r2,r4,r2
  80d2b4:	1884983a 	sll	r2,r3,r2
  80d2b8:	1444b03a 	or	r2,r2,r17
  80d2bc:	1004c03a 	cmpne	r2,r2,zero
  80d2c0:	40a2b03a 	or	r17,r8,r2
  80d2c4:	0005883a 	mov	r2,zero
  80d2c8:	003f1606 	br	80cf24 <__alt_mem_onchip_memory2+0xff7ecf24>
  80d2cc:	02000434 	movhi	r8,16
  80d2d0:	0009883a 	mov	r4,zero
  80d2d4:	423fffc4 	addi	r8,r8,-1
  80d2d8:	00bfffc4 	movi	r2,-1
  80d2dc:	0401ffc4 	movi	r16,2047
  80d2e0:	003e6606 	br	80cc7c <__alt_mem_onchip_memory2+0xff7ecc7c>
  80d2e4:	1c62b03a 	or	r17,r3,r17
  80d2e8:	8822c03a 	cmpne	r17,r17,zero
  80d2ec:	0005883a 	mov	r2,zero
  80d2f0:	003f9906 	br	80d158 <__alt_mem_onchip_memory2+0xff7ed158>
  80d2f4:	2807883a 	mov	r3,r5
  80d2f8:	3023883a 	mov	r17,r6
  80d2fc:	0401ffc4 	movi	r16,2047
  80d300:	003df506 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d304:	2807883a 	mov	r3,r5
  80d308:	3023883a 	mov	r17,r6
  80d30c:	003df206 	br	80cad8 <__alt_mem_onchip_memory2+0xff7ecad8>
  80d310:	123ff804 	addi	r8,r2,-32
  80d314:	01000804 	movi	r4,32
  80d318:	1a10d83a 	srl	r8,r3,r8
  80d31c:	11000a26 	beq	r2,r4,80d348 <__subdf3+0x8f4>
  80d320:	01001004 	movi	r4,64
  80d324:	2085c83a 	sub	r2,r4,r2
  80d328:	1884983a 	sll	r2,r3,r2
  80d32c:	1444b03a 	or	r2,r2,r17
  80d330:	1004c03a 	cmpne	r2,r2,zero
  80d334:	40a2b03a 	or	r17,r8,r2
  80d338:	0005883a 	mov	r2,zero
  80d33c:	003f8606 	br	80d158 <__alt_mem_onchip_memory2+0xff7ed158>
  80d340:	0005883a 	mov	r2,zero
  80d344:	003fdc06 	br	80d2b8 <__alt_mem_onchip_memory2+0xff7ed2b8>
  80d348:	0005883a 	mov	r2,zero
  80d34c:	003ff706 	br	80d32c <__alt_mem_onchip_memory2+0xff7ed32c>

0080d350 <__fixdfsi>:
  80d350:	280cd53a 	srli	r6,r5,20
  80d354:	00c00434 	movhi	r3,16
  80d358:	18ffffc4 	addi	r3,r3,-1
  80d35c:	3181ffcc 	andi	r6,r6,2047
  80d360:	01c0ff84 	movi	r7,1022
  80d364:	28c6703a 	and	r3,r5,r3
  80d368:	280ad7fa 	srli	r5,r5,31
  80d36c:	3980120e 	bge	r7,r6,80d3b8 <__fixdfsi+0x68>
  80d370:	00810744 	movi	r2,1053
  80d374:	11800c16 	blt	r2,r6,80d3a8 <__fixdfsi+0x58>
  80d378:	00810cc4 	movi	r2,1075
  80d37c:	1185c83a 	sub	r2,r2,r6
  80d380:	01c007c4 	movi	r7,31
  80d384:	18c00434 	orhi	r3,r3,16
  80d388:	38800d16 	blt	r7,r2,80d3c0 <__fixdfsi+0x70>
  80d38c:	31befb44 	addi	r6,r6,-1043
  80d390:	2084d83a 	srl	r2,r4,r2
  80d394:	1986983a 	sll	r3,r3,r6
  80d398:	1884b03a 	or	r2,r3,r2
  80d39c:	28000726 	beq	r5,zero,80d3bc <__fixdfsi+0x6c>
  80d3a0:	0085c83a 	sub	r2,zero,r2
  80d3a4:	f800283a 	ret
  80d3a8:	00a00034 	movhi	r2,32768
  80d3ac:	10bfffc4 	addi	r2,r2,-1
  80d3b0:	2885883a 	add	r2,r5,r2
  80d3b4:	f800283a 	ret
  80d3b8:	0005883a 	mov	r2,zero
  80d3bc:	f800283a 	ret
  80d3c0:	008104c4 	movi	r2,1043
  80d3c4:	1185c83a 	sub	r2,r2,r6
  80d3c8:	1884d83a 	srl	r2,r3,r2
  80d3cc:	003ff306 	br	80d39c <__alt_mem_onchip_memory2+0xff7ed39c>

0080d3d0 <__floatsidf>:
  80d3d0:	defffd04 	addi	sp,sp,-12
  80d3d4:	dfc00215 	stw	ra,8(sp)
  80d3d8:	dc400115 	stw	r17,4(sp)
  80d3dc:	dc000015 	stw	r16,0(sp)
  80d3e0:	20002b26 	beq	r4,zero,80d490 <__floatsidf+0xc0>
  80d3e4:	2023883a 	mov	r17,r4
  80d3e8:	2020d7fa 	srli	r16,r4,31
  80d3ec:	20002d16 	blt	r4,zero,80d4a4 <__floatsidf+0xd4>
  80d3f0:	8809883a 	mov	r4,r17
  80d3f4:	080d5540 	call	80d554 <__clzsi2>
  80d3f8:	01410784 	movi	r5,1054
  80d3fc:	288bc83a 	sub	r5,r5,r2
  80d400:	01010cc4 	movi	r4,1075
  80d404:	2149c83a 	sub	r4,r4,r5
  80d408:	00c007c4 	movi	r3,31
  80d40c:	1900160e 	bge	r3,r4,80d468 <__floatsidf+0x98>
  80d410:	00c104c4 	movi	r3,1043
  80d414:	1947c83a 	sub	r3,r3,r5
  80d418:	88c6983a 	sll	r3,r17,r3
  80d41c:	00800434 	movhi	r2,16
  80d420:	10bfffc4 	addi	r2,r2,-1
  80d424:	1886703a 	and	r3,r3,r2
  80d428:	2941ffcc 	andi	r5,r5,2047
  80d42c:	800d883a 	mov	r6,r16
  80d430:	0005883a 	mov	r2,zero
  80d434:	280a953a 	slli	r5,r5,20
  80d438:	31803fcc 	andi	r6,r6,255
  80d43c:	01000434 	movhi	r4,16
  80d440:	300c97fa 	slli	r6,r6,31
  80d444:	213fffc4 	addi	r4,r4,-1
  80d448:	1906703a 	and	r3,r3,r4
  80d44c:	1946b03a 	or	r3,r3,r5
  80d450:	1986b03a 	or	r3,r3,r6
  80d454:	dfc00217 	ldw	ra,8(sp)
  80d458:	dc400117 	ldw	r17,4(sp)
  80d45c:	dc000017 	ldw	r16,0(sp)
  80d460:	dec00304 	addi	sp,sp,12
  80d464:	f800283a 	ret
  80d468:	00c002c4 	movi	r3,11
  80d46c:	1887c83a 	sub	r3,r3,r2
  80d470:	88c6d83a 	srl	r3,r17,r3
  80d474:	8904983a 	sll	r2,r17,r4
  80d478:	01000434 	movhi	r4,16
  80d47c:	213fffc4 	addi	r4,r4,-1
  80d480:	2941ffcc 	andi	r5,r5,2047
  80d484:	1906703a 	and	r3,r3,r4
  80d488:	800d883a 	mov	r6,r16
  80d48c:	003fe906 	br	80d434 <__alt_mem_onchip_memory2+0xff7ed434>
  80d490:	000d883a 	mov	r6,zero
  80d494:	000b883a 	mov	r5,zero
  80d498:	0007883a 	mov	r3,zero
  80d49c:	0005883a 	mov	r2,zero
  80d4a0:	003fe406 	br	80d434 <__alt_mem_onchip_memory2+0xff7ed434>
  80d4a4:	0123c83a 	sub	r17,zero,r4
  80d4a8:	003fd106 	br	80d3f0 <__alt_mem_onchip_memory2+0xff7ed3f0>

0080d4ac <__floatunsidf>:
  80d4ac:	defffe04 	addi	sp,sp,-8
  80d4b0:	dc000015 	stw	r16,0(sp)
  80d4b4:	dfc00115 	stw	ra,4(sp)
  80d4b8:	2021883a 	mov	r16,r4
  80d4bc:	20002226 	beq	r4,zero,80d548 <__floatunsidf+0x9c>
  80d4c0:	080d5540 	call	80d554 <__clzsi2>
  80d4c4:	01010784 	movi	r4,1054
  80d4c8:	2089c83a 	sub	r4,r4,r2
  80d4cc:	01810cc4 	movi	r6,1075
  80d4d0:	310dc83a 	sub	r6,r6,r4
  80d4d4:	00c007c4 	movi	r3,31
  80d4d8:	1980120e 	bge	r3,r6,80d524 <__floatunsidf+0x78>
  80d4dc:	00c104c4 	movi	r3,1043
  80d4e0:	1907c83a 	sub	r3,r3,r4
  80d4e4:	80ca983a 	sll	r5,r16,r3
  80d4e8:	00800434 	movhi	r2,16
  80d4ec:	10bfffc4 	addi	r2,r2,-1
  80d4f0:	2101ffcc 	andi	r4,r4,2047
  80d4f4:	0021883a 	mov	r16,zero
  80d4f8:	288a703a 	and	r5,r5,r2
  80d4fc:	2008953a 	slli	r4,r4,20
  80d500:	00c00434 	movhi	r3,16
  80d504:	18ffffc4 	addi	r3,r3,-1
  80d508:	28c6703a 	and	r3,r5,r3
  80d50c:	8005883a 	mov	r2,r16
  80d510:	1906b03a 	or	r3,r3,r4
  80d514:	dfc00117 	ldw	ra,4(sp)
  80d518:	dc000017 	ldw	r16,0(sp)
  80d51c:	dec00204 	addi	sp,sp,8
  80d520:	f800283a 	ret
  80d524:	00c002c4 	movi	r3,11
  80d528:	188bc83a 	sub	r5,r3,r2
  80d52c:	814ad83a 	srl	r5,r16,r5
  80d530:	00c00434 	movhi	r3,16
  80d534:	18ffffc4 	addi	r3,r3,-1
  80d538:	81a0983a 	sll	r16,r16,r6
  80d53c:	2101ffcc 	andi	r4,r4,2047
  80d540:	28ca703a 	and	r5,r5,r3
  80d544:	003fed06 	br	80d4fc <__alt_mem_onchip_memory2+0xff7ed4fc>
  80d548:	0009883a 	mov	r4,zero
  80d54c:	000b883a 	mov	r5,zero
  80d550:	003fea06 	br	80d4fc <__alt_mem_onchip_memory2+0xff7ed4fc>

0080d554 <__clzsi2>:
  80d554:	00bfffd4 	movui	r2,65535
  80d558:	11000536 	bltu	r2,r4,80d570 <__clzsi2+0x1c>
  80d55c:	00803fc4 	movi	r2,255
  80d560:	11000f36 	bltu	r2,r4,80d5a0 <__clzsi2+0x4c>
  80d564:	00800804 	movi	r2,32
  80d568:	0007883a 	mov	r3,zero
  80d56c:	00000506 	br	80d584 <__clzsi2+0x30>
  80d570:	00804034 	movhi	r2,256
  80d574:	10bfffc4 	addi	r2,r2,-1
  80d578:	11000c2e 	bgeu	r2,r4,80d5ac <__clzsi2+0x58>
  80d57c:	00800204 	movi	r2,8
  80d580:	00c00604 	movi	r3,24
  80d584:	20c8d83a 	srl	r4,r4,r3
  80d588:	00c02074 	movhi	r3,129
  80d58c:	18c23304 	addi	r3,r3,2252
  80d590:	1909883a 	add	r4,r3,r4
  80d594:	20c00003 	ldbu	r3,0(r4)
  80d598:	10c5c83a 	sub	r2,r2,r3
  80d59c:	f800283a 	ret
  80d5a0:	00800604 	movi	r2,24
  80d5a4:	00c00204 	movi	r3,8
  80d5a8:	003ff606 	br	80d584 <__alt_mem_onchip_memory2+0xff7ed584>
  80d5ac:	00800404 	movi	r2,16
  80d5b0:	1007883a 	mov	r3,r2
  80d5b4:	003ff306 	br	80d584 <__alt_mem_onchip_memory2+0xff7ed584>

0080d5b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d5b8:	defffe04 	addi	sp,sp,-8
  80d5bc:	dfc00115 	stw	ra,4(sp)
  80d5c0:	df000015 	stw	fp,0(sp)
  80d5c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d5c8:	d0a00b17 	ldw	r2,-32724(gp)
  80d5cc:	10000326 	beq	r2,zero,80d5dc <alt_get_errno+0x24>
  80d5d0:	d0a00b17 	ldw	r2,-32724(gp)
  80d5d4:	103ee83a 	callr	r2
  80d5d8:	00000106 	br	80d5e0 <alt_get_errno+0x28>
  80d5dc:	d0a70204 	addi	r2,gp,-25592
}
  80d5e0:	e037883a 	mov	sp,fp
  80d5e4:	dfc00117 	ldw	ra,4(sp)
  80d5e8:	df000017 	ldw	fp,0(sp)
  80d5ec:	dec00204 	addi	sp,sp,8
  80d5f0:	f800283a 	ret

0080d5f4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80d5f4:	defffb04 	addi	sp,sp,-20
  80d5f8:	dfc00415 	stw	ra,16(sp)
  80d5fc:	df000315 	stw	fp,12(sp)
  80d600:	df000304 	addi	fp,sp,12
  80d604:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80d608:	e0bfff17 	ldw	r2,-4(fp)
  80d60c:	10000816 	blt	r2,zero,80d630 <close+0x3c>
  80d610:	01400304 	movi	r5,12
  80d614:	e13fff17 	ldw	r4,-4(fp)
  80d618:	080acec0 	call	80acec <__mulsi3>
  80d61c:	1007883a 	mov	r3,r2
  80d620:	00802074 	movhi	r2,129
  80d624:	1084b404 	addi	r2,r2,4816
  80d628:	1885883a 	add	r2,r3,r2
  80d62c:	00000106 	br	80d634 <close+0x40>
  80d630:	0005883a 	mov	r2,zero
  80d634:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80d638:	e0bffd17 	ldw	r2,-12(fp)
  80d63c:	10001926 	beq	r2,zero,80d6a4 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80d640:	e0bffd17 	ldw	r2,-12(fp)
  80d644:	10800017 	ldw	r2,0(r2)
  80d648:	10800417 	ldw	r2,16(r2)
  80d64c:	10000626 	beq	r2,zero,80d668 <close+0x74>
  80d650:	e0bffd17 	ldw	r2,-12(fp)
  80d654:	10800017 	ldw	r2,0(r2)
  80d658:	10800417 	ldw	r2,16(r2)
  80d65c:	e13ffd17 	ldw	r4,-12(fp)
  80d660:	103ee83a 	callr	r2
  80d664:	00000106 	br	80d66c <close+0x78>
  80d668:	0005883a 	mov	r2,zero
  80d66c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80d670:	e13fff17 	ldw	r4,-4(fp)
  80d674:	080dcdc0 	call	80dcdc <alt_release_fd>
    if (rval < 0)
  80d678:	e0bffe17 	ldw	r2,-8(fp)
  80d67c:	1000070e 	bge	r2,zero,80d69c <close+0xa8>
    {
      ALT_ERRNO = -rval;
  80d680:	080d5b80 	call	80d5b8 <alt_get_errno>
  80d684:	1007883a 	mov	r3,r2
  80d688:	e0bffe17 	ldw	r2,-8(fp)
  80d68c:	0085c83a 	sub	r2,zero,r2
  80d690:	18800015 	stw	r2,0(r3)
      return -1;
  80d694:	00bfffc4 	movi	r2,-1
  80d698:	00000706 	br	80d6b8 <close+0xc4>
    }
    return 0;
  80d69c:	0005883a 	mov	r2,zero
  80d6a0:	00000506 	br	80d6b8 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d6a4:	080d5b80 	call	80d5b8 <alt_get_errno>
  80d6a8:	1007883a 	mov	r3,r2
  80d6ac:	00801444 	movi	r2,81
  80d6b0:	18800015 	stw	r2,0(r3)
    return -1;
  80d6b4:	00bfffc4 	movi	r2,-1
  }
}
  80d6b8:	e037883a 	mov	sp,fp
  80d6bc:	dfc00117 	ldw	ra,4(sp)
  80d6c0:	df000017 	ldw	fp,0(sp)
  80d6c4:	dec00204 	addi	sp,sp,8
  80d6c8:	f800283a 	ret

0080d6cc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80d6cc:	defffc04 	addi	sp,sp,-16
  80d6d0:	df000315 	stw	fp,12(sp)
  80d6d4:	df000304 	addi	fp,sp,12
  80d6d8:	e13ffd15 	stw	r4,-12(fp)
  80d6dc:	e17ffe15 	stw	r5,-8(fp)
  80d6e0:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80d6e4:	e0bfff17 	ldw	r2,-4(fp)
}
  80d6e8:	e037883a 	mov	sp,fp
  80d6ec:	df000017 	ldw	fp,0(sp)
  80d6f0:	dec00104 	addi	sp,sp,4
  80d6f4:	f800283a 	ret

0080d6f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d6f8:	defffe04 	addi	sp,sp,-8
  80d6fc:	dfc00115 	stw	ra,4(sp)
  80d700:	df000015 	stw	fp,0(sp)
  80d704:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d708:	d0a00b17 	ldw	r2,-32724(gp)
  80d70c:	10000326 	beq	r2,zero,80d71c <alt_get_errno+0x24>
  80d710:	d0a00b17 	ldw	r2,-32724(gp)
  80d714:	103ee83a 	callr	r2
  80d718:	00000106 	br	80d720 <alt_get_errno+0x28>
  80d71c:	d0a70204 	addi	r2,gp,-25592
}
  80d720:	e037883a 	mov	sp,fp
  80d724:	dfc00117 	ldw	ra,4(sp)
  80d728:	df000017 	ldw	fp,0(sp)
  80d72c:	dec00204 	addi	sp,sp,8
  80d730:	f800283a 	ret

0080d734 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80d734:	defffb04 	addi	sp,sp,-20
  80d738:	dfc00415 	stw	ra,16(sp)
  80d73c:	df000315 	stw	fp,12(sp)
  80d740:	df000304 	addi	fp,sp,12
  80d744:	e13ffe15 	stw	r4,-8(fp)
  80d748:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d74c:	e0bffe17 	ldw	r2,-8(fp)
  80d750:	10000816 	blt	r2,zero,80d774 <fstat+0x40>
  80d754:	01400304 	movi	r5,12
  80d758:	e13ffe17 	ldw	r4,-8(fp)
  80d75c:	080acec0 	call	80acec <__mulsi3>
  80d760:	1007883a 	mov	r3,r2
  80d764:	00802074 	movhi	r2,129
  80d768:	1084b404 	addi	r2,r2,4816
  80d76c:	1885883a 	add	r2,r3,r2
  80d770:	00000106 	br	80d778 <fstat+0x44>
  80d774:	0005883a 	mov	r2,zero
  80d778:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80d77c:	e0bffd17 	ldw	r2,-12(fp)
  80d780:	10001026 	beq	r2,zero,80d7c4 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80d784:	e0bffd17 	ldw	r2,-12(fp)
  80d788:	10800017 	ldw	r2,0(r2)
  80d78c:	10800817 	ldw	r2,32(r2)
  80d790:	10000726 	beq	r2,zero,80d7b0 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
  80d794:	e0bffd17 	ldw	r2,-12(fp)
  80d798:	10800017 	ldw	r2,0(r2)
  80d79c:	10800817 	ldw	r2,32(r2)
  80d7a0:	e17fff17 	ldw	r5,-4(fp)
  80d7a4:	e13ffd17 	ldw	r4,-12(fp)
  80d7a8:	103ee83a 	callr	r2
  80d7ac:	00000a06 	br	80d7d8 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80d7b0:	e0bfff17 	ldw	r2,-4(fp)
  80d7b4:	00c80004 	movi	r3,8192
  80d7b8:	10c00115 	stw	r3,4(r2)
      return 0;
  80d7bc:	0005883a 	mov	r2,zero
  80d7c0:	00000506 	br	80d7d8 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d7c4:	080d6f80 	call	80d6f8 <alt_get_errno>
  80d7c8:	1007883a 	mov	r3,r2
  80d7cc:	00801444 	movi	r2,81
  80d7d0:	18800015 	stw	r2,0(r3)
    return -1;
  80d7d4:	00bfffc4 	movi	r2,-1
  }
}
  80d7d8:	e037883a 	mov	sp,fp
  80d7dc:	dfc00117 	ldw	ra,4(sp)
  80d7e0:	df000017 	ldw	fp,0(sp)
  80d7e4:	dec00204 	addi	sp,sp,8
  80d7e8:	f800283a 	ret

0080d7ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d7ec:	defffe04 	addi	sp,sp,-8
  80d7f0:	dfc00115 	stw	ra,4(sp)
  80d7f4:	df000015 	stw	fp,0(sp)
  80d7f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d7fc:	d0a00b17 	ldw	r2,-32724(gp)
  80d800:	10000326 	beq	r2,zero,80d810 <alt_get_errno+0x24>
  80d804:	d0a00b17 	ldw	r2,-32724(gp)
  80d808:	103ee83a 	callr	r2
  80d80c:	00000106 	br	80d814 <alt_get_errno+0x28>
  80d810:	d0a70204 	addi	r2,gp,-25592
}
  80d814:	e037883a 	mov	sp,fp
  80d818:	dfc00117 	ldw	ra,4(sp)
  80d81c:	df000017 	ldw	fp,0(sp)
  80d820:	dec00204 	addi	sp,sp,8
  80d824:	f800283a 	ret

0080d828 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80d828:	deffed04 	addi	sp,sp,-76
  80d82c:	dfc01215 	stw	ra,72(sp)
  80d830:	df001115 	stw	fp,68(sp)
  80d834:	df001104 	addi	fp,sp,68
  80d838:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d83c:	e0bfff17 	ldw	r2,-4(fp)
  80d840:	10000816 	blt	r2,zero,80d864 <isatty+0x3c>
  80d844:	01400304 	movi	r5,12
  80d848:	e13fff17 	ldw	r4,-4(fp)
  80d84c:	080acec0 	call	80acec <__mulsi3>
  80d850:	1007883a 	mov	r3,r2
  80d854:	00802074 	movhi	r2,129
  80d858:	1084b404 	addi	r2,r2,4816
  80d85c:	1885883a 	add	r2,r3,r2
  80d860:	00000106 	br	80d868 <isatty+0x40>
  80d864:	0005883a 	mov	r2,zero
  80d868:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80d86c:	e0bfef17 	ldw	r2,-68(fp)
  80d870:	10000e26 	beq	r2,zero,80d8ac <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80d874:	e0bfef17 	ldw	r2,-68(fp)
  80d878:	10800017 	ldw	r2,0(r2)
  80d87c:	10800817 	ldw	r2,32(r2)
  80d880:	1000021e 	bne	r2,zero,80d88c <isatty+0x64>
    {
      return 1;
  80d884:	00800044 	movi	r2,1
  80d888:	00000d06 	br	80d8c0 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80d88c:	e0bff004 	addi	r2,fp,-64
  80d890:	100b883a 	mov	r5,r2
  80d894:	e13fff17 	ldw	r4,-4(fp)
  80d898:	080d7340 	call	80d734 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80d89c:	e0bff117 	ldw	r2,-60(fp)
  80d8a0:	10880020 	cmpeqi	r2,r2,8192
  80d8a4:	10803fcc 	andi	r2,r2,255
  80d8a8:	00000506 	br	80d8c0 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d8ac:	080d7ec0 	call	80d7ec <alt_get_errno>
  80d8b0:	1007883a 	mov	r3,r2
  80d8b4:	00801444 	movi	r2,81
  80d8b8:	18800015 	stw	r2,0(r3)
    return 0;
  80d8bc:	0005883a 	mov	r2,zero
  }
}
  80d8c0:	e037883a 	mov	sp,fp
  80d8c4:	dfc00117 	ldw	ra,4(sp)
  80d8c8:	df000017 	ldw	fp,0(sp)
  80d8cc:	dec00204 	addi	sp,sp,8
  80d8d0:	f800283a 	ret

0080d8d4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80d8d4:	defffc04 	addi	sp,sp,-16
  80d8d8:	df000315 	stw	fp,12(sp)
  80d8dc:	df000304 	addi	fp,sp,12
  80d8e0:	e13ffd15 	stw	r4,-12(fp)
  80d8e4:	e17ffe15 	stw	r5,-8(fp)
  80d8e8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80d8ec:	e0fffe17 	ldw	r3,-8(fp)
  80d8f0:	e0bffd17 	ldw	r2,-12(fp)
  80d8f4:	18800c26 	beq	r3,r2,80d928 <alt_load_section+0x54>
  {
    while( to != end )
  80d8f8:	00000806 	br	80d91c <alt_load_section+0x48>
    {
      *to++ = *from++;
  80d8fc:	e0bffe17 	ldw	r2,-8(fp)
  80d900:	10c00104 	addi	r3,r2,4
  80d904:	e0fffe15 	stw	r3,-8(fp)
  80d908:	e0fffd17 	ldw	r3,-12(fp)
  80d90c:	19000104 	addi	r4,r3,4
  80d910:	e13ffd15 	stw	r4,-12(fp)
  80d914:	18c00017 	ldw	r3,0(r3)
  80d918:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80d91c:	e0fffe17 	ldw	r3,-8(fp)
  80d920:	e0bfff17 	ldw	r2,-4(fp)
  80d924:	18bff51e 	bne	r3,r2,80d8fc <__alt_mem_onchip_memory2+0xff7ed8fc>
    {
      *to++ = *from++;
    }
  }
}
  80d928:	0001883a 	nop
  80d92c:	e037883a 	mov	sp,fp
  80d930:	df000017 	ldw	fp,0(sp)
  80d934:	dec00104 	addi	sp,sp,4
  80d938:	f800283a 	ret

0080d93c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80d93c:	defffe04 	addi	sp,sp,-8
  80d940:	dfc00115 	stw	ra,4(sp)
  80d944:	df000015 	stw	fp,0(sp)
  80d948:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80d94c:	01802074 	movhi	r6,129
  80d950:	31896d04 	addi	r6,r6,9652
  80d954:	01402074 	movhi	r5,129
  80d958:	29428104 	addi	r5,r5,2564
  80d95c:	01002074 	movhi	r4,129
  80d960:	21096d04 	addi	r4,r4,9652
  80d964:	080d8d40 	call	80d8d4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80d968:	01802034 	movhi	r6,128
  80d96c:	31808c04 	addi	r6,r6,560
  80d970:	01402034 	movhi	r5,128
  80d974:	29400804 	addi	r5,r5,32
  80d978:	01002034 	movhi	r4,128
  80d97c:	21000804 	addi	r4,r4,32
  80d980:	080d8d40 	call	80d8d4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80d984:	01802074 	movhi	r6,129
  80d988:	31828104 	addi	r6,r6,2564
  80d98c:	01402074 	movhi	r5,129
  80d990:	2941b404 	addi	r5,r5,1744
  80d994:	01002074 	movhi	r4,129
  80d998:	2101b404 	addi	r4,r4,1744
  80d99c:	080d8d40 	call	80d8d4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80d9a0:	080f6180 	call	80f618 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80d9a4:	080f7d80 	call	80f7d8 <alt_icache_flush_all>
}
  80d9a8:	0001883a 	nop
  80d9ac:	e037883a 	mov	sp,fp
  80d9b0:	dfc00117 	ldw	ra,4(sp)
  80d9b4:	df000017 	ldw	fp,0(sp)
  80d9b8:	dec00204 	addi	sp,sp,8
  80d9bc:	f800283a 	ret

0080d9c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d9c0:	defffe04 	addi	sp,sp,-8
  80d9c4:	dfc00115 	stw	ra,4(sp)
  80d9c8:	df000015 	stw	fp,0(sp)
  80d9cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d9d0:	d0a00b17 	ldw	r2,-32724(gp)
  80d9d4:	10000326 	beq	r2,zero,80d9e4 <alt_get_errno+0x24>
  80d9d8:	d0a00b17 	ldw	r2,-32724(gp)
  80d9dc:	103ee83a 	callr	r2
  80d9e0:	00000106 	br	80d9e8 <alt_get_errno+0x28>
  80d9e4:	d0a70204 	addi	r2,gp,-25592
}
  80d9e8:	e037883a 	mov	sp,fp
  80d9ec:	dfc00117 	ldw	ra,4(sp)
  80d9f0:	df000017 	ldw	fp,0(sp)
  80d9f4:	dec00204 	addi	sp,sp,8
  80d9f8:	f800283a 	ret

0080d9fc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80d9fc:	defff904 	addi	sp,sp,-28
  80da00:	dfc00615 	stw	ra,24(sp)
  80da04:	df000515 	stw	fp,20(sp)
  80da08:	df000504 	addi	fp,sp,20
  80da0c:	e13ffd15 	stw	r4,-12(fp)
  80da10:	e17ffe15 	stw	r5,-8(fp)
  80da14:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80da18:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80da1c:	e0bffd17 	ldw	r2,-12(fp)
  80da20:	10000816 	blt	r2,zero,80da44 <lseek+0x48>
  80da24:	01400304 	movi	r5,12
  80da28:	e13ffd17 	ldw	r4,-12(fp)
  80da2c:	080acec0 	call	80acec <__mulsi3>
  80da30:	1007883a 	mov	r3,r2
  80da34:	00802074 	movhi	r2,129
  80da38:	1084b404 	addi	r2,r2,4816
  80da3c:	1885883a 	add	r2,r3,r2
  80da40:	00000106 	br	80da48 <lseek+0x4c>
  80da44:	0005883a 	mov	r2,zero
  80da48:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  80da4c:	e0bffc17 	ldw	r2,-16(fp)
  80da50:	10001026 	beq	r2,zero,80da94 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80da54:	e0bffc17 	ldw	r2,-16(fp)
  80da58:	10800017 	ldw	r2,0(r2)
  80da5c:	10800717 	ldw	r2,28(r2)
  80da60:	10000926 	beq	r2,zero,80da88 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80da64:	e0bffc17 	ldw	r2,-16(fp)
  80da68:	10800017 	ldw	r2,0(r2)
  80da6c:	10800717 	ldw	r2,28(r2)
  80da70:	e1bfff17 	ldw	r6,-4(fp)
  80da74:	e17ffe17 	ldw	r5,-8(fp)
  80da78:	e13ffc17 	ldw	r4,-16(fp)
  80da7c:	103ee83a 	callr	r2
  80da80:	e0bffb15 	stw	r2,-20(fp)
  80da84:	00000506 	br	80da9c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80da88:	00bfde84 	movi	r2,-134
  80da8c:	e0bffb15 	stw	r2,-20(fp)
  80da90:	00000206 	br	80da9c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
  80da94:	00bfebc4 	movi	r2,-81
  80da98:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  80da9c:	e0bffb17 	ldw	r2,-20(fp)
  80daa0:	1000070e 	bge	r2,zero,80dac0 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
  80daa4:	080d9c00 	call	80d9c0 <alt_get_errno>
  80daa8:	1007883a 	mov	r3,r2
  80daac:	e0bffb17 	ldw	r2,-20(fp)
  80dab0:	0085c83a 	sub	r2,zero,r2
  80dab4:	18800015 	stw	r2,0(r3)
    rc = -1;
  80dab8:	00bfffc4 	movi	r2,-1
  80dabc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  80dac0:	e0bffb17 	ldw	r2,-20(fp)
}
  80dac4:	e037883a 	mov	sp,fp
  80dac8:	dfc00117 	ldw	ra,4(sp)
  80dacc:	df000017 	ldw	fp,0(sp)
  80dad0:	dec00204 	addi	sp,sp,8
  80dad4:	f800283a 	ret

0080dad8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80dad8:	defffd04 	addi	sp,sp,-12
  80dadc:	dfc00215 	stw	ra,8(sp)
  80dae0:	df000115 	stw	fp,4(sp)
  80dae4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80dae8:	0009883a 	mov	r4,zero
  80daec:	080dfb00 	call	80dfb0 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80daf0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80daf4:	080dfe80 	call	80dfe8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80daf8:	01802074 	movhi	r6,129
  80dafc:	31827604 	addi	r6,r6,2520
  80db00:	01402074 	movhi	r5,129
  80db04:	29427604 	addi	r5,r5,2520
  80db08:	01002074 	movhi	r4,129
  80db0c:	21027604 	addi	r4,r4,2520
  80db10:	080fb7c0 	call	80fb7c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80db14:	080f7180 	call	80f718 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80db18:	01002074 	movhi	r4,129
  80db1c:	213dde04 	addi	r4,r4,-2184
  80db20:	081033c0 	call	81033c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80db24:	d0a70317 	ldw	r2,-25588(gp)
  80db28:	d0e70417 	ldw	r3,-25584(gp)
  80db2c:	d1270517 	ldw	r4,-25580(gp)
  80db30:	200d883a 	mov	r6,r4
  80db34:	180b883a 	mov	r5,r3
  80db38:	1009883a 	mov	r4,r2
  80db3c:	080026c0 	call	80026c <main>
  80db40:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80db44:	01000044 	movi	r4,1
  80db48:	080d5f40 	call	80d5f4 <close>
  exit (result);
  80db4c:	e13fff17 	ldw	r4,-4(fp)
  80db50:	08103500 	call	810350 <exit>

0080db54 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80db54:	defffe04 	addi	sp,sp,-8
  80db58:	df000115 	stw	fp,4(sp)
  80db5c:	df000104 	addi	fp,sp,4
  80db60:	e13fff15 	stw	r4,-4(fp)
}
  80db64:	0001883a 	nop
  80db68:	e037883a 	mov	sp,fp
  80db6c:	df000017 	ldw	fp,0(sp)
  80db70:	dec00104 	addi	sp,sp,4
  80db74:	f800283a 	ret

0080db78 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80db78:	defffe04 	addi	sp,sp,-8
  80db7c:	df000115 	stw	fp,4(sp)
  80db80:	df000104 	addi	fp,sp,4
  80db84:	e13fff15 	stw	r4,-4(fp)
}
  80db88:	0001883a 	nop
  80db8c:	e037883a 	mov	sp,fp
  80db90:	df000017 	ldw	fp,0(sp)
  80db94:	dec00104 	addi	sp,sp,4
  80db98:	f800283a 	ret

0080db9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80db9c:	defffe04 	addi	sp,sp,-8
  80dba0:	dfc00115 	stw	ra,4(sp)
  80dba4:	df000015 	stw	fp,0(sp)
  80dba8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80dbac:	d0a00b17 	ldw	r2,-32724(gp)
  80dbb0:	10000326 	beq	r2,zero,80dbc0 <alt_get_errno+0x24>
  80dbb4:	d0a00b17 	ldw	r2,-32724(gp)
  80dbb8:	103ee83a 	callr	r2
  80dbbc:	00000106 	br	80dbc4 <alt_get_errno+0x28>
  80dbc0:	d0a70204 	addi	r2,gp,-25592
}
  80dbc4:	e037883a 	mov	sp,fp
  80dbc8:	dfc00117 	ldw	ra,4(sp)
  80dbcc:	df000017 	ldw	fp,0(sp)
  80dbd0:	dec00204 	addi	sp,sp,8
  80dbd4:	f800283a 	ret

0080dbd8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80dbd8:	defff904 	addi	sp,sp,-28
  80dbdc:	dfc00615 	stw	ra,24(sp)
  80dbe0:	df000515 	stw	fp,20(sp)
  80dbe4:	df000504 	addi	fp,sp,20
  80dbe8:	e13ffd15 	stw	r4,-12(fp)
  80dbec:	e17ffe15 	stw	r5,-8(fp)
  80dbf0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80dbf4:	e0bffd17 	ldw	r2,-12(fp)
  80dbf8:	10000816 	blt	r2,zero,80dc1c <read+0x44>
  80dbfc:	01400304 	movi	r5,12
  80dc00:	e13ffd17 	ldw	r4,-12(fp)
  80dc04:	080acec0 	call	80acec <__mulsi3>
  80dc08:	1007883a 	mov	r3,r2
  80dc0c:	00802074 	movhi	r2,129
  80dc10:	1084b404 	addi	r2,r2,4816
  80dc14:	1885883a 	add	r2,r3,r2
  80dc18:	00000106 	br	80dc20 <read+0x48>
  80dc1c:	0005883a 	mov	r2,zero
  80dc20:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80dc24:	e0bffb17 	ldw	r2,-20(fp)
  80dc28:	10002226 	beq	r2,zero,80dcb4 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80dc2c:	e0bffb17 	ldw	r2,-20(fp)
  80dc30:	10800217 	ldw	r2,8(r2)
  80dc34:	108000cc 	andi	r2,r2,3
  80dc38:	10800060 	cmpeqi	r2,r2,1
  80dc3c:	1000181e 	bne	r2,zero,80dca0 <read+0xc8>
        (fd->dev->read))
  80dc40:	e0bffb17 	ldw	r2,-20(fp)
  80dc44:	10800017 	ldw	r2,0(r2)
  80dc48:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80dc4c:	10001426 	beq	r2,zero,80dca0 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80dc50:	e0bffb17 	ldw	r2,-20(fp)
  80dc54:	10800017 	ldw	r2,0(r2)
  80dc58:	10800517 	ldw	r2,20(r2)
  80dc5c:	e0ffff17 	ldw	r3,-4(fp)
  80dc60:	180d883a 	mov	r6,r3
  80dc64:	e17ffe17 	ldw	r5,-8(fp)
  80dc68:	e13ffb17 	ldw	r4,-20(fp)
  80dc6c:	103ee83a 	callr	r2
  80dc70:	e0bffc15 	stw	r2,-16(fp)
  80dc74:	e0bffc17 	ldw	r2,-16(fp)
  80dc78:	1000070e 	bge	r2,zero,80dc98 <read+0xc0>
        {
          ALT_ERRNO = -rval;
  80dc7c:	080db9c0 	call	80db9c <alt_get_errno>
  80dc80:	1007883a 	mov	r3,r2
  80dc84:	e0bffc17 	ldw	r2,-16(fp)
  80dc88:	0085c83a 	sub	r2,zero,r2
  80dc8c:	18800015 	stw	r2,0(r3)
          return -1;
  80dc90:	00bfffc4 	movi	r2,-1
  80dc94:	00000c06 	br	80dcc8 <read+0xf0>
        }
        return rval;
  80dc98:	e0bffc17 	ldw	r2,-16(fp)
  80dc9c:	00000a06 	br	80dcc8 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80dca0:	080db9c0 	call	80db9c <alt_get_errno>
  80dca4:	1007883a 	mov	r3,r2
  80dca8:	00800344 	movi	r2,13
  80dcac:	18800015 	stw	r2,0(r3)
  80dcb0:	00000406 	br	80dcc4 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80dcb4:	080db9c0 	call	80db9c <alt_get_errno>
  80dcb8:	1007883a 	mov	r3,r2
  80dcbc:	00801444 	movi	r2,81
  80dcc0:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80dcc4:	00bfffc4 	movi	r2,-1
}
  80dcc8:	e037883a 	mov	sp,fp
  80dccc:	dfc00117 	ldw	ra,4(sp)
  80dcd0:	df000017 	ldw	fp,0(sp)
  80dcd4:	dec00204 	addi	sp,sp,8
  80dcd8:	f800283a 	ret

0080dcdc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80dcdc:	defffc04 	addi	sp,sp,-16
  80dce0:	dfc00315 	stw	ra,12(sp)
  80dce4:	df000215 	stw	fp,8(sp)
  80dce8:	dc000115 	stw	r16,4(sp)
  80dcec:	df000204 	addi	fp,sp,8
  80dcf0:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
  80dcf4:	e0bffe17 	ldw	r2,-8(fp)
  80dcf8:	108000d0 	cmplti	r2,r2,3
  80dcfc:	1000111e 	bne	r2,zero,80dd44 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
  80dd00:	04002074 	movhi	r16,129
  80dd04:	8404b404 	addi	r16,r16,4816
  80dd08:	e0bffe17 	ldw	r2,-8(fp)
  80dd0c:	01400304 	movi	r5,12
  80dd10:	1009883a 	mov	r4,r2
  80dd14:	080acec0 	call	80acec <__mulsi3>
  80dd18:	8085883a 	add	r2,r16,r2
  80dd1c:	10800204 	addi	r2,r2,8
  80dd20:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80dd24:	04002074 	movhi	r16,129
  80dd28:	8404b404 	addi	r16,r16,4816
  80dd2c:	e0bffe17 	ldw	r2,-8(fp)
  80dd30:	01400304 	movi	r5,12
  80dd34:	1009883a 	mov	r4,r2
  80dd38:	080acec0 	call	80acec <__mulsi3>
  80dd3c:	8085883a 	add	r2,r16,r2
  80dd40:	10000015 	stw	zero,0(r2)
  }
}
  80dd44:	0001883a 	nop
  80dd48:	e6ffff04 	addi	sp,fp,-4
  80dd4c:	dfc00217 	ldw	ra,8(sp)
  80dd50:	df000117 	ldw	fp,4(sp)
  80dd54:	dc000017 	ldw	r16,0(sp)
  80dd58:	dec00304 	addi	sp,sp,12
  80dd5c:	f800283a 	ret

0080dd60 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80dd60:	defff904 	addi	sp,sp,-28
  80dd64:	df000615 	stw	fp,24(sp)
  80dd68:	df000604 	addi	fp,sp,24
  80dd6c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80dd70:	0005303a 	rdctl	r2,status
  80dd74:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80dd78:	e0fffe17 	ldw	r3,-8(fp)
  80dd7c:	00bfff84 	movi	r2,-2
  80dd80:	1884703a 	and	r2,r3,r2
  80dd84:	1001703a 	wrctl	status,r2
  
  return context;
  80dd88:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80dd8c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80dd90:	d0a00c17 	ldw	r2,-32720(gp)
  80dd94:	10c000c4 	addi	r3,r2,3
  80dd98:	00bfff04 	movi	r2,-4
  80dd9c:	1884703a 	and	r2,r3,r2
  80dda0:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80dda4:	d0e00c17 	ldw	r3,-32720(gp)
  80dda8:	e0bfff17 	ldw	r2,-4(fp)
  80ddac:	1887883a 	add	r3,r3,r2
  80ddb0:	00804034 	movhi	r2,256
  80ddb4:	10800004 	addi	r2,r2,0
  80ddb8:	10c0062e 	bgeu	r2,r3,80ddd4 <sbrk+0x74>
  80ddbc:	e0bffb17 	ldw	r2,-20(fp)
  80ddc0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ddc4:	e0bffa17 	ldw	r2,-24(fp)
  80ddc8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80ddcc:	00bfffc4 	movi	r2,-1
  80ddd0:	00000b06 	br	80de00 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  80ddd4:	d0a00c17 	ldw	r2,-32720(gp)
  80ddd8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  80dddc:	d0e00c17 	ldw	r3,-32720(gp)
  80dde0:	e0bfff17 	ldw	r2,-4(fp)
  80dde4:	1885883a 	add	r2,r3,r2
  80dde8:	d0a00c15 	stw	r2,-32720(gp)
  80ddec:	e0bffb17 	ldw	r2,-20(fp)
  80ddf0:	e0bffc15 	stw	r2,-16(fp)
  80ddf4:	e0bffc17 	ldw	r2,-16(fp)
  80ddf8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80ddfc:	e0bffd17 	ldw	r2,-12(fp)
} 
  80de00:	e037883a 	mov	sp,fp
  80de04:	df000017 	ldw	fp,0(sp)
  80de08:	dec00104 	addi	sp,sp,4
  80de0c:	f800283a 	ret

0080de10 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
  80de10:	defffd04 	addi	sp,sp,-12
  80de14:	dfc00215 	stw	ra,8(sp)
  80de18:	df000115 	stw	fp,4(sp)
  80de1c:	df000104 	addi	fp,sp,4
  80de20:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
  80de24:	e13fff17 	ldw	r4,-4(fp)
  80de28:	080f4c00 	call	80f4c0 <alt_busy_sleep>
}
  80de2c:	e037883a 	mov	sp,fp
  80de30:	dfc00117 	ldw	ra,4(sp)
  80de34:	df000017 	ldw	fp,0(sp)
  80de38:	dec00204 	addi	sp,sp,8
  80de3c:	f800283a 	ret

0080de40 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80de40:	defffe04 	addi	sp,sp,-8
  80de44:	dfc00115 	stw	ra,4(sp)
  80de48:	df000015 	stw	fp,0(sp)
  80de4c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80de50:	d0a00b17 	ldw	r2,-32724(gp)
  80de54:	10000326 	beq	r2,zero,80de64 <alt_get_errno+0x24>
  80de58:	d0a00b17 	ldw	r2,-32724(gp)
  80de5c:	103ee83a 	callr	r2
  80de60:	00000106 	br	80de68 <alt_get_errno+0x28>
  80de64:	d0a70204 	addi	r2,gp,-25592
}
  80de68:	e037883a 	mov	sp,fp
  80de6c:	dfc00117 	ldw	ra,4(sp)
  80de70:	df000017 	ldw	fp,0(sp)
  80de74:	dec00204 	addi	sp,sp,8
  80de78:	f800283a 	ret

0080de7c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80de7c:	defff904 	addi	sp,sp,-28
  80de80:	dfc00615 	stw	ra,24(sp)
  80de84:	df000515 	stw	fp,20(sp)
  80de88:	df000504 	addi	fp,sp,20
  80de8c:	e13ffd15 	stw	r4,-12(fp)
  80de90:	e17ffe15 	stw	r5,-8(fp)
  80de94:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80de98:	e0bffd17 	ldw	r2,-12(fp)
  80de9c:	10000816 	blt	r2,zero,80dec0 <write+0x44>
  80dea0:	01400304 	movi	r5,12
  80dea4:	e13ffd17 	ldw	r4,-12(fp)
  80dea8:	080acec0 	call	80acec <__mulsi3>
  80deac:	1007883a 	mov	r3,r2
  80deb0:	00802074 	movhi	r2,129
  80deb4:	1084b404 	addi	r2,r2,4816
  80deb8:	1885883a 	add	r2,r3,r2
  80debc:	00000106 	br	80dec4 <write+0x48>
  80dec0:	0005883a 	mov	r2,zero
  80dec4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80dec8:	e0bffb17 	ldw	r2,-20(fp)
  80decc:	10002126 	beq	r2,zero,80df54 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80ded0:	e0bffb17 	ldw	r2,-20(fp)
  80ded4:	10800217 	ldw	r2,8(r2)
  80ded8:	108000cc 	andi	r2,r2,3
  80dedc:	10001826 	beq	r2,zero,80df40 <write+0xc4>
  80dee0:	e0bffb17 	ldw	r2,-20(fp)
  80dee4:	10800017 	ldw	r2,0(r2)
  80dee8:	10800617 	ldw	r2,24(r2)
  80deec:	10001426 	beq	r2,zero,80df40 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80def0:	e0bffb17 	ldw	r2,-20(fp)
  80def4:	10800017 	ldw	r2,0(r2)
  80def8:	10800617 	ldw	r2,24(r2)
  80defc:	e0ffff17 	ldw	r3,-4(fp)
  80df00:	180d883a 	mov	r6,r3
  80df04:	e17ffe17 	ldw	r5,-8(fp)
  80df08:	e13ffb17 	ldw	r4,-20(fp)
  80df0c:	103ee83a 	callr	r2
  80df10:	e0bffc15 	stw	r2,-16(fp)
  80df14:	e0bffc17 	ldw	r2,-16(fp)
  80df18:	1000070e 	bge	r2,zero,80df38 <write+0xbc>
      {
        ALT_ERRNO = -rval;
  80df1c:	080de400 	call	80de40 <alt_get_errno>
  80df20:	1007883a 	mov	r3,r2
  80df24:	e0bffc17 	ldw	r2,-16(fp)
  80df28:	0085c83a 	sub	r2,zero,r2
  80df2c:	18800015 	stw	r2,0(r3)
        return -1;
  80df30:	00bfffc4 	movi	r2,-1
  80df34:	00000c06 	br	80df68 <write+0xec>
      }
      return rval;
  80df38:	e0bffc17 	ldw	r2,-16(fp)
  80df3c:	00000a06 	br	80df68 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80df40:	080de400 	call	80de40 <alt_get_errno>
  80df44:	1007883a 	mov	r3,r2
  80df48:	00800344 	movi	r2,13
  80df4c:	18800015 	stw	r2,0(r3)
  80df50:	00000406 	br	80df64 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80df54:	080de400 	call	80de40 <alt_get_errno>
  80df58:	1007883a 	mov	r3,r2
  80df5c:	00801444 	movi	r2,81
  80df60:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80df64:	00bfffc4 	movi	r2,-1
}
  80df68:	e037883a 	mov	sp,fp
  80df6c:	dfc00117 	ldw	ra,4(sp)
  80df70:	df000017 	ldw	fp,0(sp)
  80df74:	dec00204 	addi	sp,sp,8
  80df78:	f800283a 	ret

0080df7c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80df7c:	defffd04 	addi	sp,sp,-12
  80df80:	dfc00215 	stw	ra,8(sp)
  80df84:	df000115 	stw	fp,4(sp)
  80df88:	df000104 	addi	fp,sp,4
  80df8c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80df90:	d1600804 	addi	r5,gp,-32736
  80df94:	e13fff17 	ldw	r4,-4(fp)
  80df98:	080f6740 	call	80f674 <alt_dev_llist_insert>
}
  80df9c:	e037883a 	mov	sp,fp
  80dfa0:	dfc00117 	ldw	ra,4(sp)
  80dfa4:	df000017 	ldw	fp,0(sp)
  80dfa8:	dec00204 	addi	sp,sp,8
  80dfac:	f800283a 	ret

0080dfb0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80dfb0:	defffd04 	addi	sp,sp,-12
  80dfb4:	dfc00215 	stw	ra,8(sp)
  80dfb8:	df000115 	stw	fp,4(sp)
  80dfbc:	df000104 	addi	fp,sp,4
  80dfc0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2, nios2_gen2);
  80dfc4:	08100200 	call	810020 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80dfc8:	00800044 	movi	r2,1
  80dfcc:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80dfd0:	0001883a 	nop
  80dfd4:	e037883a 	mov	sp,fp
  80dfd8:	dfc00117 	ldw	ra,4(sp)
  80dfdc:	df000017 	ldw	fp,0(sp)
  80dfe0:	dec00204 	addi	sp,sp,8
  80dfe4:	f800283a 	ret

0080dfe8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80dfe8:	defffe04 	addi	sp,sp,-8
  80dfec:	dfc00115 	stw	ra,4(sp)
  80dff0:	df000015 	stw	fp,0(sp)
  80dff4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80dff8:	000d883a 	mov	r6,zero
  80dffc:	000b883a 	mov	r5,zero
  80e000:	01002074 	movhi	r4,129
  80e004:	21051e04 	addi	r4,r4,5240
  80e008:	080e1b80 	call	80e1b8 <altera_avalon_jtag_uart_init>
  80e00c:	01002074 	movhi	r4,129
  80e010:	21051404 	addi	r4,r4,5200
  80e014:	080df7c0 	call	80df7c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
  80e018:	0001883a 	nop
    ALTERA_AVALON_UART_INIT ( UART, uart);
  80e01c:	01800044 	movi	r6,1
  80e020:	000b883a 	mov	r5,zero
  80e024:	01002074 	movhi	r4,129
  80e028:	21093604 	addi	r4,r4,9432
  80e02c:	080ebcc0 	call	80ebcc <altera_avalon_uart_init>
  80e030:	01002074 	movhi	r4,129
  80e034:	21092c04 	addi	r4,r4,9392
  80e038:	080df7c0 	call	80df7c <alt_dev_reg>
}
  80e03c:	0001883a 	nop
  80e040:	e037883a 	mov	sp,fp
  80e044:	dfc00117 	ldw	ra,4(sp)
  80e048:	df000017 	ldw	fp,0(sp)
  80e04c:	dec00204 	addi	sp,sp,8
  80e050:	f800283a 	ret

0080e054 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80e054:	defffa04 	addi	sp,sp,-24
  80e058:	dfc00515 	stw	ra,20(sp)
  80e05c:	df000415 	stw	fp,16(sp)
  80e060:	df000404 	addi	fp,sp,16
  80e064:	e13ffd15 	stw	r4,-12(fp)
  80e068:	e17ffe15 	stw	r5,-8(fp)
  80e06c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e070:	e0bffd17 	ldw	r2,-12(fp)
  80e074:	10800017 	ldw	r2,0(r2)
  80e078:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80e07c:	e0bffc17 	ldw	r2,-16(fp)
  80e080:	10c00a04 	addi	r3,r2,40
  80e084:	e0bffd17 	ldw	r2,-12(fp)
  80e088:	10800217 	ldw	r2,8(r2)
  80e08c:	100f883a 	mov	r7,r2
  80e090:	e1bfff17 	ldw	r6,-4(fp)
  80e094:	e17ffe17 	ldw	r5,-8(fp)
  80e098:	1809883a 	mov	r4,r3
  80e09c:	080e67c0 	call	80e67c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80e0a0:	e037883a 	mov	sp,fp
  80e0a4:	dfc00117 	ldw	ra,4(sp)
  80e0a8:	df000017 	ldw	fp,0(sp)
  80e0ac:	dec00204 	addi	sp,sp,8
  80e0b0:	f800283a 	ret

0080e0b4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80e0b4:	defffa04 	addi	sp,sp,-24
  80e0b8:	dfc00515 	stw	ra,20(sp)
  80e0bc:	df000415 	stw	fp,16(sp)
  80e0c0:	df000404 	addi	fp,sp,16
  80e0c4:	e13ffd15 	stw	r4,-12(fp)
  80e0c8:	e17ffe15 	stw	r5,-8(fp)
  80e0cc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e0d0:	e0bffd17 	ldw	r2,-12(fp)
  80e0d4:	10800017 	ldw	r2,0(r2)
  80e0d8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80e0dc:	e0bffc17 	ldw	r2,-16(fp)
  80e0e0:	10c00a04 	addi	r3,r2,40
  80e0e4:	e0bffd17 	ldw	r2,-12(fp)
  80e0e8:	10800217 	ldw	r2,8(r2)
  80e0ec:	100f883a 	mov	r7,r2
  80e0f0:	e1bfff17 	ldw	r6,-4(fp)
  80e0f4:	e17ffe17 	ldw	r5,-8(fp)
  80e0f8:	1809883a 	mov	r4,r3
  80e0fc:	080e8980 	call	80e898 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80e100:	e037883a 	mov	sp,fp
  80e104:	dfc00117 	ldw	ra,4(sp)
  80e108:	df000017 	ldw	fp,0(sp)
  80e10c:	dec00204 	addi	sp,sp,8
  80e110:	f800283a 	ret

0080e114 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80e114:	defffc04 	addi	sp,sp,-16
  80e118:	dfc00315 	stw	ra,12(sp)
  80e11c:	df000215 	stw	fp,8(sp)
  80e120:	df000204 	addi	fp,sp,8
  80e124:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e128:	e0bfff17 	ldw	r2,-4(fp)
  80e12c:	10800017 	ldw	r2,0(r2)
  80e130:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80e134:	e0bffe17 	ldw	r2,-8(fp)
  80e138:	10c00a04 	addi	r3,r2,40
  80e13c:	e0bfff17 	ldw	r2,-4(fp)
  80e140:	10800217 	ldw	r2,8(r2)
  80e144:	100b883a 	mov	r5,r2
  80e148:	1809883a 	mov	r4,r3
  80e14c:	080e5240 	call	80e524 <altera_avalon_jtag_uart_close>
}
  80e150:	e037883a 	mov	sp,fp
  80e154:	dfc00117 	ldw	ra,4(sp)
  80e158:	df000017 	ldw	fp,0(sp)
  80e15c:	dec00204 	addi	sp,sp,8
  80e160:	f800283a 	ret

0080e164 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80e164:	defffa04 	addi	sp,sp,-24
  80e168:	dfc00515 	stw	ra,20(sp)
  80e16c:	df000415 	stw	fp,16(sp)
  80e170:	df000404 	addi	fp,sp,16
  80e174:	e13ffd15 	stw	r4,-12(fp)
  80e178:	e17ffe15 	stw	r5,-8(fp)
  80e17c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80e180:	e0bffd17 	ldw	r2,-12(fp)
  80e184:	10800017 	ldw	r2,0(r2)
  80e188:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80e18c:	e0bffc17 	ldw	r2,-16(fp)
  80e190:	10800a04 	addi	r2,r2,40
  80e194:	e1bfff17 	ldw	r6,-4(fp)
  80e198:	e17ffe17 	ldw	r5,-8(fp)
  80e19c:	1009883a 	mov	r4,r2
  80e1a0:	080e58c0 	call	80e58c <altera_avalon_jtag_uart_ioctl>
}
  80e1a4:	e037883a 	mov	sp,fp
  80e1a8:	dfc00117 	ldw	ra,4(sp)
  80e1ac:	df000017 	ldw	fp,0(sp)
  80e1b0:	dec00204 	addi	sp,sp,8
  80e1b4:	f800283a 	ret

0080e1b8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80e1b8:	defffa04 	addi	sp,sp,-24
  80e1bc:	dfc00515 	stw	ra,20(sp)
  80e1c0:	df000415 	stw	fp,16(sp)
  80e1c4:	df000404 	addi	fp,sp,16
  80e1c8:	e13ffd15 	stw	r4,-12(fp)
  80e1cc:	e17ffe15 	stw	r5,-8(fp)
  80e1d0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e1d4:	e0bffd17 	ldw	r2,-12(fp)
  80e1d8:	00c00044 	movi	r3,1
  80e1dc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80e1e0:	e0bffd17 	ldw	r2,-12(fp)
  80e1e4:	10800017 	ldw	r2,0(r2)
  80e1e8:	10800104 	addi	r2,r2,4
  80e1ec:	1007883a 	mov	r3,r2
  80e1f0:	e0bffd17 	ldw	r2,-12(fp)
  80e1f4:	10800817 	ldw	r2,32(r2)
  80e1f8:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80e1fc:	e0bffe17 	ldw	r2,-8(fp)
  80e200:	e0ffff17 	ldw	r3,-4(fp)
  80e204:	d8000015 	stw	zero,0(sp)
  80e208:	e1fffd17 	ldw	r7,-12(fp)
  80e20c:	01802074 	movhi	r6,129
  80e210:	31b89e04 	addi	r6,r6,-7560
  80e214:	180b883a 	mov	r5,r3
  80e218:	1009883a 	mov	r4,r2
  80e21c:	080f7f80 	call	80f7f8 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80e220:	e0bffd17 	ldw	r2,-12(fp)
  80e224:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80e228:	e0bffd17 	ldw	r2,-12(fp)
  80e22c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80e230:	d0e70717 	ldw	r3,-25572(gp)
  80e234:	e1fffd17 	ldw	r7,-12(fp)
  80e238:	01802074 	movhi	r6,129
  80e23c:	31b92104 	addi	r6,r6,-7036
  80e240:	180b883a 	mov	r5,r3
  80e244:	1009883a 	mov	r4,r2
  80e248:	080f3940 	call	80f394 <alt_alarm_start>
  80e24c:	1000040e 	bge	r2,zero,80e260 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80e250:	e0fffd17 	ldw	r3,-12(fp)
  80e254:	00a00034 	movhi	r2,32768
  80e258:	10bfffc4 	addi	r2,r2,-1
  80e25c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80e260:	0001883a 	nop
  80e264:	e037883a 	mov	sp,fp
  80e268:	dfc00117 	ldw	ra,4(sp)
  80e26c:	df000017 	ldw	fp,0(sp)
  80e270:	dec00204 	addi	sp,sp,8
  80e274:	f800283a 	ret

0080e278 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80e278:	defff804 	addi	sp,sp,-32
  80e27c:	df000715 	stw	fp,28(sp)
  80e280:	df000704 	addi	fp,sp,28
  80e284:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80e288:	e0bfff17 	ldw	r2,-4(fp)
  80e28c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  80e290:	e0bffb17 	ldw	r2,-20(fp)
  80e294:	10800017 	ldw	r2,0(r2)
  80e298:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e29c:	e0bffc17 	ldw	r2,-16(fp)
  80e2a0:	10800104 	addi	r2,r2,4
  80e2a4:	10800037 	ldwio	r2,0(r2)
  80e2a8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80e2ac:	e0bffd17 	ldw	r2,-12(fp)
  80e2b0:	1080c00c 	andi	r2,r2,768
  80e2b4:	10006d26 	beq	r2,zero,80e46c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80e2b8:	e0bffd17 	ldw	r2,-12(fp)
  80e2bc:	1080400c 	andi	r2,r2,256
  80e2c0:	10003526 	beq	r2,zero,80e398 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80e2c4:	00800074 	movhi	r2,1
  80e2c8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e2cc:	e0bffb17 	ldw	r2,-20(fp)
  80e2d0:	10800a17 	ldw	r2,40(r2)
  80e2d4:	10800044 	addi	r2,r2,1
  80e2d8:	1081ffcc 	andi	r2,r2,2047
  80e2dc:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  80e2e0:	e0bffb17 	ldw	r2,-20(fp)
  80e2e4:	10c00b17 	ldw	r3,44(r2)
  80e2e8:	e0bffe17 	ldw	r2,-8(fp)
  80e2ec:	18801526 	beq	r3,r2,80e344 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80e2f0:	e0bffc17 	ldw	r2,-16(fp)
  80e2f4:	10800037 	ldwio	r2,0(r2)
  80e2f8:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80e2fc:	e0bff917 	ldw	r2,-28(fp)
  80e300:	10a0000c 	andi	r2,r2,32768
  80e304:	10001126 	beq	r2,zero,80e34c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80e308:	e0bffb17 	ldw	r2,-20(fp)
  80e30c:	10800a17 	ldw	r2,40(r2)
  80e310:	e0fff917 	ldw	r3,-28(fp)
  80e314:	1809883a 	mov	r4,r3
  80e318:	e0fffb17 	ldw	r3,-20(fp)
  80e31c:	1885883a 	add	r2,r3,r2
  80e320:	10800e04 	addi	r2,r2,56
  80e324:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e328:	e0bffb17 	ldw	r2,-20(fp)
  80e32c:	10800a17 	ldw	r2,40(r2)
  80e330:	10800044 	addi	r2,r2,1
  80e334:	10c1ffcc 	andi	r3,r2,2047
  80e338:	e0bffb17 	ldw	r2,-20(fp)
  80e33c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80e340:	003fe206 	br	80e2cc <__alt_mem_onchip_memory2+0xff7ee2cc>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  80e344:	0001883a 	nop
  80e348:	00000106 	br	80e350 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  80e34c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80e350:	e0bff917 	ldw	r2,-28(fp)
  80e354:	10bfffec 	andhi	r2,r2,65535
  80e358:	10000f26 	beq	r2,zero,80e398 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e35c:	e0bffb17 	ldw	r2,-20(fp)
  80e360:	10c00817 	ldw	r3,32(r2)
  80e364:	00bfff84 	movi	r2,-2
  80e368:	1886703a 	and	r3,r3,r2
  80e36c:	e0bffb17 	ldw	r2,-20(fp)
  80e370:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80e374:	e0bffc17 	ldw	r2,-16(fp)
  80e378:	10800104 	addi	r2,r2,4
  80e37c:	1007883a 	mov	r3,r2
  80e380:	e0bffb17 	ldw	r2,-20(fp)
  80e384:	10800817 	ldw	r2,32(r2)
  80e388:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e38c:	e0bffc17 	ldw	r2,-16(fp)
  80e390:	10800104 	addi	r2,r2,4
  80e394:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80e398:	e0bffd17 	ldw	r2,-12(fp)
  80e39c:	1080800c 	andi	r2,r2,512
  80e3a0:	103fbe26 	beq	r2,zero,80e29c <__alt_mem_onchip_memory2+0xff7ee29c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80e3a4:	e0bffd17 	ldw	r2,-12(fp)
  80e3a8:	1004d43a 	srli	r2,r2,16
  80e3ac:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80e3b0:	00001406 	br	80e404 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80e3b4:	e0bffc17 	ldw	r2,-16(fp)
  80e3b8:	e0fffb17 	ldw	r3,-20(fp)
  80e3bc:	18c00d17 	ldw	r3,52(r3)
  80e3c0:	e13ffb17 	ldw	r4,-20(fp)
  80e3c4:	20c7883a 	add	r3,r4,r3
  80e3c8:	18c20e04 	addi	r3,r3,2104
  80e3cc:	18c00003 	ldbu	r3,0(r3)
  80e3d0:	18c03fcc 	andi	r3,r3,255
  80e3d4:	18c0201c 	xori	r3,r3,128
  80e3d8:	18ffe004 	addi	r3,r3,-128
  80e3dc:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e3e0:	e0bffb17 	ldw	r2,-20(fp)
  80e3e4:	10800d17 	ldw	r2,52(r2)
  80e3e8:	10800044 	addi	r2,r2,1
  80e3ec:	10c1ffcc 	andi	r3,r2,2047
  80e3f0:	e0bffb17 	ldw	r2,-20(fp)
  80e3f4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80e3f8:	e0bffa17 	ldw	r2,-24(fp)
  80e3fc:	10bfffc4 	addi	r2,r2,-1
  80e400:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80e404:	e0bffa17 	ldw	r2,-24(fp)
  80e408:	10000526 	beq	r2,zero,80e420 <altera_avalon_jtag_uart_irq+0x1a8>
  80e40c:	e0bffb17 	ldw	r2,-20(fp)
  80e410:	10c00d17 	ldw	r3,52(r2)
  80e414:	e0bffb17 	ldw	r2,-20(fp)
  80e418:	10800c17 	ldw	r2,48(r2)
  80e41c:	18bfe51e 	bne	r3,r2,80e3b4 <__alt_mem_onchip_memory2+0xff7ee3b4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80e420:	e0bffa17 	ldw	r2,-24(fp)
  80e424:	103f9d26 	beq	r2,zero,80e29c <__alt_mem_onchip_memory2+0xff7ee29c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e428:	e0bffb17 	ldw	r2,-20(fp)
  80e42c:	10c00817 	ldw	r3,32(r2)
  80e430:	00bfff44 	movi	r2,-3
  80e434:	1886703a 	and	r3,r3,r2
  80e438:	e0bffb17 	ldw	r2,-20(fp)
  80e43c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e440:	e0bffb17 	ldw	r2,-20(fp)
  80e444:	10800017 	ldw	r2,0(r2)
  80e448:	10800104 	addi	r2,r2,4
  80e44c:	1007883a 	mov	r3,r2
  80e450:	e0bffb17 	ldw	r2,-20(fp)
  80e454:	10800817 	ldw	r2,32(r2)
  80e458:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e45c:	e0bffc17 	ldw	r2,-16(fp)
  80e460:	10800104 	addi	r2,r2,4
  80e464:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80e468:	003f8c06 	br	80e29c <__alt_mem_onchip_memory2+0xff7ee29c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  80e46c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  80e470:	0001883a 	nop
  80e474:	e037883a 	mov	sp,fp
  80e478:	df000017 	ldw	fp,0(sp)
  80e47c:	dec00104 	addi	sp,sp,4
  80e480:	f800283a 	ret

0080e484 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80e484:	defff804 	addi	sp,sp,-32
  80e488:	df000715 	stw	fp,28(sp)
  80e48c:	df000704 	addi	fp,sp,28
  80e490:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80e494:	e0bffb17 	ldw	r2,-20(fp)
  80e498:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80e49c:	e0bff917 	ldw	r2,-28(fp)
  80e4a0:	10800017 	ldw	r2,0(r2)
  80e4a4:	10800104 	addi	r2,r2,4
  80e4a8:	10800037 	ldwio	r2,0(r2)
  80e4ac:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80e4b0:	e0bffa17 	ldw	r2,-24(fp)
  80e4b4:	1081000c 	andi	r2,r2,1024
  80e4b8:	10000b26 	beq	r2,zero,80e4e8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80e4bc:	e0bff917 	ldw	r2,-28(fp)
  80e4c0:	10800017 	ldw	r2,0(r2)
  80e4c4:	10800104 	addi	r2,r2,4
  80e4c8:	1007883a 	mov	r3,r2
  80e4cc:	e0bff917 	ldw	r2,-28(fp)
  80e4d0:	10800817 	ldw	r2,32(r2)
  80e4d4:	10810014 	ori	r2,r2,1024
  80e4d8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80e4dc:	e0bff917 	ldw	r2,-28(fp)
  80e4e0:	10000915 	stw	zero,36(r2)
  80e4e4:	00000a06 	br	80e510 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80e4e8:	e0bff917 	ldw	r2,-28(fp)
  80e4ec:	10c00917 	ldw	r3,36(r2)
  80e4f0:	00a00034 	movhi	r2,32768
  80e4f4:	10bfff04 	addi	r2,r2,-4
  80e4f8:	10c00536 	bltu	r2,r3,80e510 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80e4fc:	e0bff917 	ldw	r2,-28(fp)
  80e500:	10800917 	ldw	r2,36(r2)
  80e504:	10c00044 	addi	r3,r2,1
  80e508:	e0bff917 	ldw	r2,-28(fp)
  80e50c:	10c00915 	stw	r3,36(r2)
  80e510:	d0a70717 	ldw	r2,-25572(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80e514:	e037883a 	mov	sp,fp
  80e518:	df000017 	ldw	fp,0(sp)
  80e51c:	dec00104 	addi	sp,sp,4
  80e520:	f800283a 	ret

0080e524 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80e524:	defffd04 	addi	sp,sp,-12
  80e528:	df000215 	stw	fp,8(sp)
  80e52c:	df000204 	addi	fp,sp,8
  80e530:	e13ffe15 	stw	r4,-8(fp)
  80e534:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e538:	00000506 	br	80e550 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80e53c:	e0bfff17 	ldw	r2,-4(fp)
  80e540:	1090000c 	andi	r2,r2,16384
  80e544:	10000226 	beq	r2,zero,80e550 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80e548:	00bffd44 	movi	r2,-11
  80e54c:	00000b06 	br	80e57c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e550:	e0bffe17 	ldw	r2,-8(fp)
  80e554:	10c00d17 	ldw	r3,52(r2)
  80e558:	e0bffe17 	ldw	r2,-8(fp)
  80e55c:	10800c17 	ldw	r2,48(r2)
  80e560:	18800526 	beq	r3,r2,80e578 <altera_avalon_jtag_uart_close+0x54>
  80e564:	e0bffe17 	ldw	r2,-8(fp)
  80e568:	10c00917 	ldw	r3,36(r2)
  80e56c:	e0bffe17 	ldw	r2,-8(fp)
  80e570:	10800117 	ldw	r2,4(r2)
  80e574:	18bff136 	bltu	r3,r2,80e53c <__alt_mem_onchip_memory2+0xff7ee53c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80e578:	0005883a 	mov	r2,zero
}
  80e57c:	e037883a 	mov	sp,fp
  80e580:	df000017 	ldw	fp,0(sp)
  80e584:	dec00104 	addi	sp,sp,4
  80e588:	f800283a 	ret

0080e58c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80e58c:	defffa04 	addi	sp,sp,-24
  80e590:	df000515 	stw	fp,20(sp)
  80e594:	df000504 	addi	fp,sp,20
  80e598:	e13ffd15 	stw	r4,-12(fp)
  80e59c:	e17ffe15 	stw	r5,-8(fp)
  80e5a0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  80e5a4:	00bff9c4 	movi	r2,-25
  80e5a8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  80e5ac:	e0bffe17 	ldw	r2,-8(fp)
  80e5b0:	10da8060 	cmpeqi	r3,r2,27137
  80e5b4:	1800031e 	bne	r3,zero,80e5c4 <altera_avalon_jtag_uart_ioctl+0x38>
  80e5b8:	109a80a0 	cmpeqi	r2,r2,27138
  80e5bc:	1000181e 	bne	r2,zero,80e620 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  80e5c0:	00002906 	br	80e668 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80e5c4:	e0bffd17 	ldw	r2,-12(fp)
  80e5c8:	10c00117 	ldw	r3,4(r2)
  80e5cc:	00a00034 	movhi	r2,32768
  80e5d0:	10bfffc4 	addi	r2,r2,-1
  80e5d4:	18802126 	beq	r3,r2,80e65c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  80e5d8:	e0bfff17 	ldw	r2,-4(fp)
  80e5dc:	10800017 	ldw	r2,0(r2)
  80e5e0:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80e5e4:	e0bffc17 	ldw	r2,-16(fp)
  80e5e8:	10800090 	cmplti	r2,r2,2
  80e5ec:	1000061e 	bne	r2,zero,80e608 <altera_avalon_jtag_uart_ioctl+0x7c>
  80e5f0:	e0fffc17 	ldw	r3,-16(fp)
  80e5f4:	00a00034 	movhi	r2,32768
  80e5f8:	10bfffc4 	addi	r2,r2,-1
  80e5fc:	18800226 	beq	r3,r2,80e608 <altera_avalon_jtag_uart_ioctl+0x7c>
  80e600:	e0bffc17 	ldw	r2,-16(fp)
  80e604:	00000206 	br	80e610 <altera_avalon_jtag_uart_ioctl+0x84>
  80e608:	00a00034 	movhi	r2,32768
  80e60c:	10bfff84 	addi	r2,r2,-2
  80e610:	e0fffd17 	ldw	r3,-12(fp)
  80e614:	18800115 	stw	r2,4(r3)
      rc = 0;
  80e618:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80e61c:	00000f06 	br	80e65c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80e620:	e0bffd17 	ldw	r2,-12(fp)
  80e624:	10c00117 	ldw	r3,4(r2)
  80e628:	00a00034 	movhi	r2,32768
  80e62c:	10bfffc4 	addi	r2,r2,-1
  80e630:	18800c26 	beq	r3,r2,80e664 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80e634:	e0bffd17 	ldw	r2,-12(fp)
  80e638:	10c00917 	ldw	r3,36(r2)
  80e63c:	e0bffd17 	ldw	r2,-12(fp)
  80e640:	10800117 	ldw	r2,4(r2)
  80e644:	1885803a 	cmpltu	r2,r3,r2
  80e648:	10c03fcc 	andi	r3,r2,255
  80e64c:	e0bfff17 	ldw	r2,-4(fp)
  80e650:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80e654:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80e658:	00000206 	br	80e664 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  80e65c:	0001883a 	nop
  80e660:	00000106 	br	80e668 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  80e664:	0001883a 	nop

  default:
    break;
  }

  return rc;
  80e668:	e0bffb17 	ldw	r2,-20(fp)
}
  80e66c:	e037883a 	mov	sp,fp
  80e670:	df000017 	ldw	fp,0(sp)
  80e674:	dec00104 	addi	sp,sp,4
  80e678:	f800283a 	ret

0080e67c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80e67c:	defff304 	addi	sp,sp,-52
  80e680:	dfc00c15 	stw	ra,48(sp)
  80e684:	df000b15 	stw	fp,44(sp)
  80e688:	df000b04 	addi	fp,sp,44
  80e68c:	e13ffc15 	stw	r4,-16(fp)
  80e690:	e17ffd15 	stw	r5,-12(fp)
  80e694:	e1bffe15 	stw	r6,-8(fp)
  80e698:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  80e69c:	e0bffd17 	ldw	r2,-12(fp)
  80e6a0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e6a4:	00004706 	br	80e7c4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80e6a8:	e0bffc17 	ldw	r2,-16(fp)
  80e6ac:	10800a17 	ldw	r2,40(r2)
  80e6b0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80e6b4:	e0bffc17 	ldw	r2,-16(fp)
  80e6b8:	10800b17 	ldw	r2,44(r2)
  80e6bc:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  80e6c0:	e0fff717 	ldw	r3,-36(fp)
  80e6c4:	e0bff817 	ldw	r2,-32(fp)
  80e6c8:	18800536 	bltu	r3,r2,80e6e0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80e6cc:	e0fff717 	ldw	r3,-36(fp)
  80e6d0:	e0bff817 	ldw	r2,-32(fp)
  80e6d4:	1885c83a 	sub	r2,r3,r2
  80e6d8:	e0bff615 	stw	r2,-40(fp)
  80e6dc:	00000406 	br	80e6f0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80e6e0:	00c20004 	movi	r3,2048
  80e6e4:	e0bff817 	ldw	r2,-32(fp)
  80e6e8:	1885c83a 	sub	r2,r3,r2
  80e6ec:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80e6f0:	e0bff617 	ldw	r2,-40(fp)
  80e6f4:	10001e26 	beq	r2,zero,80e770 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80e6f8:	e0fffe17 	ldw	r3,-8(fp)
  80e6fc:	e0bff617 	ldw	r2,-40(fp)
  80e700:	1880022e 	bgeu	r3,r2,80e70c <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80e704:	e0bffe17 	ldw	r2,-8(fp)
  80e708:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80e70c:	e0bffc17 	ldw	r2,-16(fp)
  80e710:	10c00e04 	addi	r3,r2,56
  80e714:	e0bff817 	ldw	r2,-32(fp)
  80e718:	1885883a 	add	r2,r3,r2
  80e71c:	e1bff617 	ldw	r6,-40(fp)
  80e720:	100b883a 	mov	r5,r2
  80e724:	e13ff517 	ldw	r4,-44(fp)
  80e728:	080607c0 	call	80607c <memcpy>
      ptr   += n;
  80e72c:	e0fff517 	ldw	r3,-44(fp)
  80e730:	e0bff617 	ldw	r2,-40(fp)
  80e734:	1885883a 	add	r2,r3,r2
  80e738:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  80e73c:	e0fffe17 	ldw	r3,-8(fp)
  80e740:	e0bff617 	ldw	r2,-40(fp)
  80e744:	1885c83a 	sub	r2,r3,r2
  80e748:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e74c:	e0fff817 	ldw	r3,-32(fp)
  80e750:	e0bff617 	ldw	r2,-40(fp)
  80e754:	1885883a 	add	r2,r3,r2
  80e758:	10c1ffcc 	andi	r3,r2,2047
  80e75c:	e0bffc17 	ldw	r2,-16(fp)
  80e760:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80e764:	e0bffe17 	ldw	r2,-8(fp)
  80e768:	00bfcf16 	blt	zero,r2,80e6a8 <__alt_mem_onchip_memory2+0xff7ee6a8>
  80e76c:	00000106 	br	80e774 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  80e770:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  80e774:	e0fff517 	ldw	r3,-44(fp)
  80e778:	e0bffd17 	ldw	r2,-12(fp)
  80e77c:	1880141e 	bne	r3,r2,80e7d0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80e780:	e0bfff17 	ldw	r2,-4(fp)
  80e784:	1090000c 	andi	r2,r2,16384
  80e788:	1000131e 	bne	r2,zero,80e7d8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80e78c:	0001883a 	nop
  80e790:	e0bffc17 	ldw	r2,-16(fp)
  80e794:	10c00a17 	ldw	r3,40(r2)
  80e798:	e0bff717 	ldw	r2,-36(fp)
  80e79c:	1880051e 	bne	r3,r2,80e7b4 <altera_avalon_jtag_uart_read+0x138>
  80e7a0:	e0bffc17 	ldw	r2,-16(fp)
  80e7a4:	10c00917 	ldw	r3,36(r2)
  80e7a8:	e0bffc17 	ldw	r2,-16(fp)
  80e7ac:	10800117 	ldw	r2,4(r2)
  80e7b0:	18bff736 	bltu	r3,r2,80e790 <__alt_mem_onchip_memory2+0xff7ee790>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80e7b4:	e0bffc17 	ldw	r2,-16(fp)
  80e7b8:	10c00a17 	ldw	r3,40(r2)
  80e7bc:	e0bff717 	ldw	r2,-36(fp)
  80e7c0:	18800726 	beq	r3,r2,80e7e0 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e7c4:	e0bffe17 	ldw	r2,-8(fp)
  80e7c8:	00bfb716 	blt	zero,r2,80e6a8 <__alt_mem_onchip_memory2+0xff7ee6a8>
  80e7cc:	00000506 	br	80e7e4 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  80e7d0:	0001883a 	nop
  80e7d4:	00000306 	br	80e7e4 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  80e7d8:	0001883a 	nop
  80e7dc:	00000106 	br	80e7e4 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  80e7e0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80e7e4:	e0fff517 	ldw	r3,-44(fp)
  80e7e8:	e0bffd17 	ldw	r2,-12(fp)
  80e7ec:	18801826 	beq	r3,r2,80e850 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e7f0:	0005303a 	rdctl	r2,status
  80e7f4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e7f8:	e0fffb17 	ldw	r3,-20(fp)
  80e7fc:	00bfff84 	movi	r2,-2
  80e800:	1884703a 	and	r2,r3,r2
  80e804:	1001703a 	wrctl	status,r2
  
  return context;
  80e808:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80e80c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e810:	e0bffc17 	ldw	r2,-16(fp)
  80e814:	10800817 	ldw	r2,32(r2)
  80e818:	10c00054 	ori	r3,r2,1
  80e81c:	e0bffc17 	ldw	r2,-16(fp)
  80e820:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e824:	e0bffc17 	ldw	r2,-16(fp)
  80e828:	10800017 	ldw	r2,0(r2)
  80e82c:	10800104 	addi	r2,r2,4
  80e830:	1007883a 	mov	r3,r2
  80e834:	e0bffc17 	ldw	r2,-16(fp)
  80e838:	10800817 	ldw	r2,32(r2)
  80e83c:	18800035 	stwio	r2,0(r3)
  80e840:	e0bffa17 	ldw	r2,-24(fp)
  80e844:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e848:	e0bff917 	ldw	r2,-28(fp)
  80e84c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80e850:	e0fff517 	ldw	r3,-44(fp)
  80e854:	e0bffd17 	ldw	r2,-12(fp)
  80e858:	18800426 	beq	r3,r2,80e86c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  80e85c:	e0fff517 	ldw	r3,-44(fp)
  80e860:	e0bffd17 	ldw	r2,-12(fp)
  80e864:	1885c83a 	sub	r2,r3,r2
  80e868:	00000606 	br	80e884 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  80e86c:	e0bfff17 	ldw	r2,-4(fp)
  80e870:	1090000c 	andi	r2,r2,16384
  80e874:	10000226 	beq	r2,zero,80e880 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80e878:	00bffd44 	movi	r2,-11
  80e87c:	00000106 	br	80e884 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  80e880:	00bffec4 	movi	r2,-5
}
  80e884:	e037883a 	mov	sp,fp
  80e888:	dfc00117 	ldw	ra,4(sp)
  80e88c:	df000017 	ldw	fp,0(sp)
  80e890:	dec00204 	addi	sp,sp,8
  80e894:	f800283a 	ret

0080e898 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80e898:	defff304 	addi	sp,sp,-52
  80e89c:	dfc00c15 	stw	ra,48(sp)
  80e8a0:	df000b15 	stw	fp,44(sp)
  80e8a4:	df000b04 	addi	fp,sp,44
  80e8a8:	e13ffc15 	stw	r4,-16(fp)
  80e8ac:	e17ffd15 	stw	r5,-12(fp)
  80e8b0:	e1bffe15 	stw	r6,-8(fp)
  80e8b4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80e8b8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80e8bc:	e0bffd17 	ldw	r2,-12(fp)
  80e8c0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e8c4:	00003706 	br	80e9a4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80e8c8:	e0bffc17 	ldw	r2,-16(fp)
  80e8cc:	10800c17 	ldw	r2,48(r2)
  80e8d0:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  80e8d4:	e0bffc17 	ldw	r2,-16(fp)
  80e8d8:	10800d17 	ldw	r2,52(r2)
  80e8dc:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  80e8e0:	e0fff917 	ldw	r3,-28(fp)
  80e8e4:	e0bff517 	ldw	r2,-44(fp)
  80e8e8:	1880062e 	bgeu	r3,r2,80e904 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80e8ec:	e0fff517 	ldw	r3,-44(fp)
  80e8f0:	e0bff917 	ldw	r2,-28(fp)
  80e8f4:	1885c83a 	sub	r2,r3,r2
  80e8f8:	10bfffc4 	addi	r2,r2,-1
  80e8fc:	e0bff615 	stw	r2,-40(fp)
  80e900:	00000b06 	br	80e930 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80e904:	e0bff517 	ldw	r2,-44(fp)
  80e908:	10000526 	beq	r2,zero,80e920 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80e90c:	00c20004 	movi	r3,2048
  80e910:	e0bff917 	ldw	r2,-28(fp)
  80e914:	1885c83a 	sub	r2,r3,r2
  80e918:	e0bff615 	stw	r2,-40(fp)
  80e91c:	00000406 	br	80e930 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80e920:	00c1ffc4 	movi	r3,2047
  80e924:	e0bff917 	ldw	r2,-28(fp)
  80e928:	1885c83a 	sub	r2,r3,r2
  80e92c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80e930:	e0bff617 	ldw	r2,-40(fp)
  80e934:	10001e26 	beq	r2,zero,80e9b0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80e938:	e0fffe17 	ldw	r3,-8(fp)
  80e93c:	e0bff617 	ldw	r2,-40(fp)
  80e940:	1880022e 	bgeu	r3,r2,80e94c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80e944:	e0bffe17 	ldw	r2,-8(fp)
  80e948:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80e94c:	e0bffc17 	ldw	r2,-16(fp)
  80e950:	10c20e04 	addi	r3,r2,2104
  80e954:	e0bff917 	ldw	r2,-28(fp)
  80e958:	1885883a 	add	r2,r3,r2
  80e95c:	e1bff617 	ldw	r6,-40(fp)
  80e960:	e17ffd17 	ldw	r5,-12(fp)
  80e964:	1009883a 	mov	r4,r2
  80e968:	080607c0 	call	80607c <memcpy>
      ptr   += n;
  80e96c:	e0fffd17 	ldw	r3,-12(fp)
  80e970:	e0bff617 	ldw	r2,-40(fp)
  80e974:	1885883a 	add	r2,r3,r2
  80e978:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  80e97c:	e0fffe17 	ldw	r3,-8(fp)
  80e980:	e0bff617 	ldw	r2,-40(fp)
  80e984:	1885c83a 	sub	r2,r3,r2
  80e988:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e98c:	e0fff917 	ldw	r3,-28(fp)
  80e990:	e0bff617 	ldw	r2,-40(fp)
  80e994:	1885883a 	add	r2,r3,r2
  80e998:	10c1ffcc 	andi	r3,r2,2047
  80e99c:	e0bffc17 	ldw	r2,-16(fp)
  80e9a0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e9a4:	e0bffe17 	ldw	r2,-8(fp)
  80e9a8:	00bfc716 	blt	zero,r2,80e8c8 <__alt_mem_onchip_memory2+0xff7ee8c8>
  80e9ac:	00000106 	br	80e9b4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  80e9b0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e9b4:	0005303a 	rdctl	r2,status
  80e9b8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e9bc:	e0fffb17 	ldw	r3,-20(fp)
  80e9c0:	00bfff84 	movi	r2,-2
  80e9c4:	1884703a 	and	r2,r3,r2
  80e9c8:	1001703a 	wrctl	status,r2
  
  return context;
  80e9cc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80e9d0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e9d4:	e0bffc17 	ldw	r2,-16(fp)
  80e9d8:	10800817 	ldw	r2,32(r2)
  80e9dc:	10c00094 	ori	r3,r2,2
  80e9e0:	e0bffc17 	ldw	r2,-16(fp)
  80e9e4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e9e8:	e0bffc17 	ldw	r2,-16(fp)
  80e9ec:	10800017 	ldw	r2,0(r2)
  80e9f0:	10800104 	addi	r2,r2,4
  80e9f4:	1007883a 	mov	r3,r2
  80e9f8:	e0bffc17 	ldw	r2,-16(fp)
  80e9fc:	10800817 	ldw	r2,32(r2)
  80ea00:	18800035 	stwio	r2,0(r3)
  80ea04:	e0bffa17 	ldw	r2,-24(fp)
  80ea08:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ea0c:	e0bff817 	ldw	r2,-32(fp)
  80ea10:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80ea14:	e0bffe17 	ldw	r2,-8(fp)
  80ea18:	0080100e 	bge	zero,r2,80ea5c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  80ea1c:	e0bfff17 	ldw	r2,-4(fp)
  80ea20:	1090000c 	andi	r2,r2,16384
  80ea24:	1000101e 	bne	r2,zero,80ea68 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80ea28:	0001883a 	nop
  80ea2c:	e0bffc17 	ldw	r2,-16(fp)
  80ea30:	10c00d17 	ldw	r3,52(r2)
  80ea34:	e0bff517 	ldw	r2,-44(fp)
  80ea38:	1880051e 	bne	r3,r2,80ea50 <altera_avalon_jtag_uart_write+0x1b8>
  80ea3c:	e0bffc17 	ldw	r2,-16(fp)
  80ea40:	10c00917 	ldw	r3,36(r2)
  80ea44:	e0bffc17 	ldw	r2,-16(fp)
  80ea48:	10800117 	ldw	r2,4(r2)
  80ea4c:	18bff736 	bltu	r3,r2,80ea2c <__alt_mem_onchip_memory2+0xff7eea2c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80ea50:	e0bffc17 	ldw	r2,-16(fp)
  80ea54:	10800917 	ldw	r2,36(r2)
  80ea58:	1000051e 	bne	r2,zero,80ea70 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  80ea5c:	e0bffe17 	ldw	r2,-8(fp)
  80ea60:	00bfd016 	blt	zero,r2,80e9a4 <__alt_mem_onchip_memory2+0xff7ee9a4>
  80ea64:	00000306 	br	80ea74 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  80ea68:	0001883a 	nop
  80ea6c:	00000106 	br	80ea74 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  80ea70:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80ea74:	e0fffd17 	ldw	r3,-12(fp)
  80ea78:	e0bff717 	ldw	r2,-36(fp)
  80ea7c:	18800426 	beq	r3,r2,80ea90 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  80ea80:	e0fffd17 	ldw	r3,-12(fp)
  80ea84:	e0bff717 	ldw	r2,-36(fp)
  80ea88:	1885c83a 	sub	r2,r3,r2
  80ea8c:	00000606 	br	80eaa8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  80ea90:	e0bfff17 	ldw	r2,-4(fp)
  80ea94:	1090000c 	andi	r2,r2,16384
  80ea98:	10000226 	beq	r2,zero,80eaa4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  80ea9c:	00bffd44 	movi	r2,-11
  80eaa0:	00000106 	br	80eaa8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80eaa4:	00bffec4 	movi	r2,-5
}
  80eaa8:	e037883a 	mov	sp,fp
  80eaac:	dfc00117 	ldw	ra,4(sp)
  80eab0:	df000017 	ldw	fp,0(sp)
  80eab4:	dec00204 	addi	sp,sp,8
  80eab8:	f800283a 	ret

0080eabc <altera_avalon_uart_read_fd>:
 *
 */

int 
altera_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80eabc:	defffa04 	addi	sp,sp,-24
  80eac0:	dfc00515 	stw	ra,20(sp)
  80eac4:	df000415 	stw	fp,16(sp)
  80eac8:	df000404 	addi	fp,sp,16
  80eacc:	e13ffd15 	stw	r4,-12(fp)
  80ead0:	e17ffe15 	stw	r5,-8(fp)
  80ead4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  80ead8:	e0bffd17 	ldw	r2,-12(fp)
  80eadc:	10800017 	ldw	r2,0(r2)
  80eae0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_read(&dev->state, buffer, space,
  80eae4:	e0bffc17 	ldw	r2,-16(fp)
  80eae8:	10c00a04 	addi	r3,r2,40
  80eaec:	e0bffd17 	ldw	r2,-12(fp)
  80eaf0:	10800217 	ldw	r2,8(r2)
  80eaf4:	100f883a 	mov	r7,r2
  80eaf8:	e1bfff17 	ldw	r6,-4(fp)
  80eafc:	e17ffe17 	ldw	r5,-8(fp)
  80eb00:	1809883a 	mov	r4,r3
  80eb04:	080efd00 	call	80efd0 <altera_avalon_uart_read>
      fd->fd_flags);
}
  80eb08:	e037883a 	mov	sp,fp
  80eb0c:	dfc00117 	ldw	ra,4(sp)
  80eb10:	df000017 	ldw	fp,0(sp)
  80eb14:	dec00204 	addi	sp,sp,8
  80eb18:	f800283a 	ret

0080eb1c <altera_avalon_uart_write_fd>:

int 
altera_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80eb1c:	defffa04 	addi	sp,sp,-24
  80eb20:	dfc00515 	stw	ra,20(sp)
  80eb24:	df000415 	stw	fp,16(sp)
  80eb28:	df000404 	addi	fp,sp,16
  80eb2c:	e13ffd15 	stw	r4,-12(fp)
  80eb30:	e17ffe15 	stw	r5,-8(fp)
  80eb34:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  80eb38:	e0bffd17 	ldw	r2,-12(fp)
  80eb3c:	10800017 	ldw	r2,0(r2)
  80eb40:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_write(&dev->state, buffer, space,
  80eb44:	e0bffc17 	ldw	r2,-16(fp)
  80eb48:	10c00a04 	addi	r3,r2,40
  80eb4c:	e0bffd17 	ldw	r2,-12(fp)
  80eb50:	10800217 	ldw	r2,8(r2)
  80eb54:	100f883a 	mov	r7,r2
  80eb58:	e1bfff17 	ldw	r6,-4(fp)
  80eb5c:	e17ffe17 	ldw	r5,-8(fp)
  80eb60:	1809883a 	mov	r4,r3
  80eb64:	080f1e80 	call	80f1e8 <altera_avalon_uart_write>
      fd->fd_flags);
}
  80eb68:	e037883a 	mov	sp,fp
  80eb6c:	dfc00117 	ldw	ra,4(sp)
  80eb70:	df000017 	ldw	fp,0(sp)
  80eb74:	dec00204 	addi	sp,sp,8
  80eb78:	f800283a 	ret

0080eb7c <altera_avalon_uart_close_fd>:

#endif /* ALTERA_AVALON_UART_USE_IOCTL */

int 
altera_avalon_uart_close_fd(alt_fd* fd)
{
  80eb7c:	defffc04 	addi	sp,sp,-16
  80eb80:	dfc00315 	stw	ra,12(sp)
  80eb84:	df000215 	stw	fp,8(sp)
  80eb88:	df000204 	addi	fp,sp,8
  80eb8c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  80eb90:	e0bfff17 	ldw	r2,-4(fp)
  80eb94:	10800017 	ldw	r2,0(r2)
  80eb98:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_uart_close(&dev->state, fd->fd_flags);
  80eb9c:	e0bffe17 	ldw	r2,-8(fp)
  80eba0:	10c00a04 	addi	r3,r2,40
  80eba4:	e0bfff17 	ldw	r2,-4(fp)
  80eba8:	10800217 	ldw	r2,8(r2)
  80ebac:	100b883a 	mov	r5,r2
  80ebb0:	1809883a 	mov	r4,r3
  80ebb4:	080ef400 	call	80ef40 <altera_avalon_uart_close>
}
  80ebb8:	e037883a 	mov	sp,fp
  80ebbc:	dfc00117 	ldw	ra,4(sp)
  80ebc0:	df000017 	ldw	fp,0(sp)
  80ebc4:	dec00204 	addi	sp,sp,8
  80ebc8:	f800283a 	ret

0080ebcc <altera_avalon_uart_init>:
  alt_u32 status);

void 
altera_avalon_uart_init(altera_avalon_uart_state* sp, 
  alt_u32 irq_controller_id,  alt_u32 irq)
{
  80ebcc:	defff804 	addi	sp,sp,-32
  80ebd0:	dfc00715 	stw	ra,28(sp)
  80ebd4:	df000615 	stw	fp,24(sp)
  80ebd8:	df000604 	addi	fp,sp,24
  80ebdc:	e13ffd15 	stw	r4,-12(fp)
  80ebe0:	e17ffe15 	stw	r5,-8(fp)
  80ebe4:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
  80ebe8:	e0bffd17 	ldw	r2,-12(fp)
  80ebec:	10800017 	ldw	r2,0(r2)
  80ebf0:	e0bffb15 	stw	r2,-20(fp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  80ebf4:	0005883a 	mov	r2,zero
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  80ebf8:	1000041e 	bne	r2,zero,80ec0c <altera_avalon_uart_init+0x40>
  80ebfc:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  80ec00:	1000021e 	bne	r2,zero,80ec0c <altera_avalon_uart_init+0x40>
  80ec04:	0005883a 	mov	r2,zero
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  80ec08:	10000226 	beq	r2,zero,80ec14 <altera_avalon_uart_init+0x48>
  80ec0c:	00800044 	movi	r2,1
  80ec10:	00000106 	br	80ec18 <altera_avalon_uart_init+0x4c>
  80ec14:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  80ec18:	e0bffc15 	stw	r2,-16(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
  80ec1c:	e0bffc17 	ldw	r2,-16(fp)
  80ec20:	10000f1e 	bne	r2,zero,80ec60 <altera_avalon_uart_init+0x94>
  {
    /* enable interrupts at the device */
    sp->ctrl = ALTERA_AVALON_UART_CONTROL_RTS_MSK  |
  80ec24:	e0bffd17 	ldw	r2,-12(fp)
  80ec28:	00c32004 	movi	r3,3200
  80ec2c:	10c00115 	stw	r3,4(r2)
                ALTERA_AVALON_UART_CONTROL_RRDY_MSK |
                ALTERA_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_ALTERA_AVALON_UART_CONTROL(base, sp->ctrl); 
  80ec30:	e0bffb17 	ldw	r2,-20(fp)
  80ec34:	10800304 	addi	r2,r2,12
  80ec38:	e0fffd17 	ldw	r3,-12(fp)
  80ec3c:	18c00117 	ldw	r3,4(r3)
  80ec40:	10c00035 	stwio	r3,0(r2)
  
    /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, altera_avalon_uart_irq, sp, 
  80ec44:	d8000015 	stw	zero,0(sp)
  80ec48:	e1fffd17 	ldw	r7,-12(fp)
  80ec4c:	01802074 	movhi	r6,129
  80ec50:	31bb1e04 	addi	r6,r6,-5000
  80ec54:	e17fff17 	ldw	r5,-4(fp)
  80ec58:	e13ffe17 	ldw	r4,-8(fp)
  80ec5c:	080f7f80 	call	80f7f8 <alt_ic_isr_register>
      0x0);
#else
    alt_irq_register (irq, sp, altera_avalon_uart_irq);
#endif  
  }
}
  80ec60:	0001883a 	nop
  80ec64:	e037883a 	mov	sp,fp
  80ec68:	dfc00117 	ldw	ra,4(sp)
  80ec6c:	df000017 	ldw	fp,0(sp)
  80ec70:	dec00204 	addi	sp,sp,8
  80ec74:	f800283a 	ret

0080ec78 <altera_avalon_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_uart_irq(void* context)
#else
static void altera_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
  80ec78:	defffa04 	addi	sp,sp,-24
  80ec7c:	dfc00515 	stw	ra,20(sp)
  80ec80:	df000415 	stw	fp,16(sp)
  80ec84:	df000404 	addi	fp,sp,16
  80ec88:	e13fff15 	stw	r4,-4(fp)
  alt_u32 status;

  altera_avalon_uart_state* sp = (altera_avalon_uart_state*) context;
  80ec8c:	e0bfff17 	ldw	r2,-4(fp)
  80ec90:	e0bffc15 	stw	r2,-16(fp)
  void* base               = sp->base;
  80ec94:	e0bffc17 	ldw	r2,-16(fp)
  80ec98:	10800017 	ldw	r2,0(r2)
  80ec9c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_ALTERA_AVALON_UART_STATUS(base);
  80eca0:	e0bffd17 	ldw	r2,-12(fp)
  80eca4:	10800204 	addi	r2,r2,8
  80eca8:	10800037 	ldwio	r2,0(r2)
  80ecac:	e0bffe15 	stw	r2,-8(fp)

  /* Clear any error flags set at the device */
  IOWR_ALTERA_AVALON_UART_STATUS(base, 0);
  80ecb0:	e0bffd17 	ldw	r2,-12(fp)
  80ecb4:	10800204 	addi	r2,r2,8
  80ecb8:	0007883a 	mov	r3,zero
  80ecbc:	10c00035 	stwio	r3,0(r2)

  /* Dummy read to ensure IRQ is negated before ISR returns */
  IORD_ALTERA_AVALON_UART_STATUS(base);
  80ecc0:	e0bffd17 	ldw	r2,-12(fp)
  80ecc4:	10800204 	addi	r2,r2,8
  80ecc8:	10800037 	ldwio	r2,0(r2)
  
  /* process a read irq */
  if (status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
  80eccc:	e0bffe17 	ldw	r2,-8(fp)
  80ecd0:	1080200c 	andi	r2,r2,128
  80ecd4:	10000326 	beq	r2,zero,80ece4 <altera_avalon_uart_irq+0x6c>
  {
    altera_avalon_uart_rxirq(sp, status);
  80ecd8:	e17ffe17 	ldw	r5,-8(fp)
  80ecdc:	e13ffc17 	ldw	r4,-16(fp)
  80ece0:	080ed140 	call	80ed14 <altera_avalon_uart_rxirq>
  }

  /* process a write irq */
  if (status & (ALTERA_AVALON_UART_STATUS_TRDY_MSK | 
  80ece4:	e0bffe17 	ldw	r2,-8(fp)
  80ece8:	1081100c 	andi	r2,r2,1088
  80ecec:	10000326 	beq	r2,zero,80ecfc <altera_avalon_uart_irq+0x84>
                  ALTERA_AVALON_UART_STATUS_DCTS_MSK))
  {
    altera_avalon_uart_txirq(sp, status);
  80ecf0:	e17ffe17 	ldw	r5,-8(fp)
  80ecf4:	e13ffc17 	ldw	r4,-16(fp)
  80ecf8:	080edf80 	call	80edf8 <altera_avalon_uart_txirq>
  }
  

}
  80ecfc:	0001883a 	nop
  80ed00:	e037883a 	mov	sp,fp
  80ed04:	dfc00117 	ldw	ra,4(sp)
  80ed08:	df000017 	ldw	fp,0(sp)
  80ed0c:	dec00204 	addi	sp,sp,8
  80ed10:	f800283a 	ret

0080ed14 <altera_avalon_uart_rxirq>:
 * the receive circular buffer, and sets the apropriate flags to indicate 
 * that there is data ready to be processed.
 */
static void 
altera_avalon_uart_rxirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  80ed14:	defffc04 	addi	sp,sp,-16
  80ed18:	df000315 	stw	fp,12(sp)
  80ed1c:	df000304 	addi	fp,sp,12
  80ed20:	e13ffe15 	stw	r4,-8(fp)
  80ed24:	e17fff15 	stw	r5,-4(fp)
  alt_u32 next;
  
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
  80ed28:	e0bfff17 	ldw	r2,-4(fp)
  80ed2c:	108000cc 	andi	r2,r2,3
  80ed30:	10002c1e 	bne	r2,zero,80ede4 <altera_avalon_uart_rxirq+0xd0>
   * In a multi-threaded environment, set the read event flag to indicate
   * that there is data ready. This is only done if the circular buffer was
   * previously empty.
   */

  if (sp->rx_end == sp->rx_start)
  80ed34:	e0bffe17 	ldw	r2,-8(fp)
  80ed38:	10800317 	ldw	r2,12(r2)
  80ed3c:	e0bffe17 	ldw	r2,-8(fp)
  80ed40:	10800217 	ldw	r2,8(r2)
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  80ed44:	e0bffe17 	ldw	r2,-8(fp)
  80ed48:	10800317 	ldw	r2,12(r2)
  80ed4c:	10800044 	addi	r2,r2,1
  80ed50:	10800fcc 	andi	r2,r2,63
  80ed54:	e0bffd15 	stw	r2,-12(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_ALTERA_AVALON_UART_RXDATA(sp->base);
  80ed58:	e0bffe17 	ldw	r2,-8(fp)
  80ed5c:	10800317 	ldw	r2,12(r2)
  80ed60:	e0fffe17 	ldw	r3,-8(fp)
  80ed64:	18c00017 	ldw	r3,0(r3)
  80ed68:	18c00037 	ldwio	r3,0(r3)
  80ed6c:	1809883a 	mov	r4,r3
  80ed70:	e0fffe17 	ldw	r3,-8(fp)
  80ed74:	1885883a 	add	r2,r3,r2
  80ed78:	10800704 	addi	r2,r2,28
  80ed7c:	11000005 	stb	r4,0(r2)

  sp->rx_end = next;
  80ed80:	e0bffe17 	ldw	r2,-8(fp)
  80ed84:	e0fffd17 	ldw	r3,-12(fp)
  80ed88:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  80ed8c:	e0bffe17 	ldw	r2,-8(fp)
  80ed90:	10800317 	ldw	r2,12(r2)
  80ed94:	10800044 	addi	r2,r2,1
  80ed98:	10800fcc 	andi	r2,r2,63
  80ed9c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
  80eda0:	e0bffe17 	ldw	r2,-8(fp)
  80eda4:	10c00217 	ldw	r3,8(r2)
  80eda8:	e0bffd17 	ldw	r2,-12(fp)
  80edac:	18800e1e 	bne	r3,r2,80ede8 <altera_avalon_uart_rxirq+0xd4>
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  80edb0:	e0bffe17 	ldw	r2,-8(fp)
  80edb4:	10c00117 	ldw	r3,4(r2)
  80edb8:	00bfdfc4 	movi	r2,-129
  80edbc:	1886703a 	and	r3,r3,r2
  80edc0:	e0bffe17 	ldw	r2,-8(fp)
  80edc4:	10c00115 	stw	r3,4(r2)
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  80edc8:	e0bffe17 	ldw	r2,-8(fp)
  80edcc:	10800017 	ldw	r2,0(r2)
  80edd0:	10800304 	addi	r2,r2,12
  80edd4:	e0fffe17 	ldw	r3,-8(fp)
  80edd8:	18c00117 	ldw	r3,4(r3)
  80eddc:	10c00035 	stwio	r3,0(r2)
  80ede0:	00000106 	br	80ede8 <altera_avalon_uart_rxirq+0xd4>
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
                  ALTERA_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  80ede4:	0001883a 	nop
  if (next == sp->rx_start)
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  }   
}
  80ede8:	e037883a 	mov	sp,fp
  80edec:	df000017 	ldw	fp,0(sp)
  80edf0:	dec00104 	addi	sp,sp,4
  80edf4:	f800283a 	ret

0080edf8 <altera_avalon_uart_txirq>:
 * buffer to the device, and sets the apropriate flags to indicate that 
 * there is data ready to be processed.
 */
static void 
altera_avalon_uart_txirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  80edf8:	defffb04 	addi	sp,sp,-20
  80edfc:	df000415 	stw	fp,16(sp)
  80ee00:	df000404 	addi	fp,sp,16
  80ee04:	e13ffc15 	stw	r4,-16(fp)
  80ee08:	e17ffd15 	stw	r5,-12(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
  80ee0c:	e0bffc17 	ldw	r2,-16(fp)
  80ee10:	10c00417 	ldw	r3,16(r2)
  80ee14:	e0bffc17 	ldw	r2,-16(fp)
  80ee18:	10800517 	ldw	r2,20(r2)
  80ee1c:	18803226 	beq	r3,r2,80eee8 <altera_avalon_uart_txirq+0xf0>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  80ee20:	e0bffc17 	ldw	r2,-16(fp)
  80ee24:	10800617 	ldw	r2,24(r2)
  80ee28:	1080008c 	andi	r2,r2,2
  80ee2c:	10000326 	beq	r2,zero,80ee3c <altera_avalon_uart_txirq+0x44>
      (status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  80ee30:	e0bffd17 	ldw	r2,-12(fp)
  80ee34:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  80ee38:	10001d26 	beq	r2,zero,80eeb0 <altera_avalon_uart_txirq+0xb8>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK))
  80ee3c:	e0bffc17 	ldw	r2,-16(fp)
  80ee40:	10800417 	ldw	r2,16(r2)
  80ee44:	e0bffc17 	ldw	r2,-16(fp)
  80ee48:	10800517 	ldw	r2,20(r2)
                       OS_FLAG_SET);
      }

      /* Write the data to the device */

      IOWR_ALTERA_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
  80ee4c:	e0bffc17 	ldw	r2,-16(fp)
  80ee50:	10800017 	ldw	r2,0(r2)
  80ee54:	10800104 	addi	r2,r2,4
  80ee58:	e0fffc17 	ldw	r3,-16(fp)
  80ee5c:	18c00417 	ldw	r3,16(r3)
  80ee60:	e13ffc17 	ldw	r4,-16(fp)
  80ee64:	20c7883a 	add	r3,r4,r3
  80ee68:	18c01704 	addi	r3,r3,92
  80ee6c:	18c00003 	ldbu	r3,0(r3)
  80ee70:	18c03fcc 	andi	r3,r3,255
  80ee74:	10c00035 	stwio	r3,0(r2)

      sp->tx_start = (++sp->tx_start) & ALT_AVALON_UART_BUF_MSK;
  80ee78:	e0bffc17 	ldw	r2,-16(fp)
  80ee7c:	10800417 	ldw	r2,16(r2)
  80ee80:	10800044 	addi	r2,r2,1
  80ee84:	e0fffc17 	ldw	r3,-16(fp)
  80ee88:	18800415 	stw	r2,16(r3)
  80ee8c:	10c00fcc 	andi	r3,r2,63
  80ee90:	e0bffc17 	ldw	r2,-16(fp)
  80ee94:	10c00415 	stw	r3,16(r2)
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  80ee98:	e0bffc17 	ldw	r2,-16(fp)
  80ee9c:	10800117 	ldw	r2,4(r2)
  80eea0:	10c01014 	ori	r3,r2,64
  80eea4:	e0bffc17 	ldw	r2,-16(fp)
  80eea8:	10c00115 	stw	r3,4(r2)
  80eeac:	00000e06 	br	80eee8 <altera_avalon_uart_txirq+0xf0>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_ALTERA_AVALON_UART_STATUS(sp->base); 
  80eeb0:	e0bffc17 	ldw	r2,-16(fp)
  80eeb4:	10800017 	ldw	r2,0(r2)
  80eeb8:	10800204 	addi	r2,r2,8
  80eebc:	10800037 	ldwio	r2,0(r2)
  80eec0:	e0bffd15 	stw	r2,-12(fp)

      if (!(status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  80eec4:	e0bffd17 	ldw	r2,-12(fp)
  80eec8:	1082000c 	andi	r2,r2,2048
  80eecc:	1000061e 	bne	r2,zero,80eee8 <altera_avalon_uart_txirq+0xf0>
      {
        sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  80eed0:	e0bffc17 	ldw	r2,-16(fp)
  80eed4:	10c00117 	ldw	r3,4(r2)
  80eed8:	00bfefc4 	movi	r2,-65
  80eedc:	1886703a 	and	r3,r3,r2
  80eee0:	e0bffc17 	ldw	r2,-16(fp)
  80eee4:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
  80eee8:	e0bffc17 	ldw	r2,-16(fp)
  80eeec:	10c00417 	ldw	r3,16(r2)
  80eef0:	e0bffc17 	ldw	r2,-16(fp)
  80eef4:	10800517 	ldw	r2,20(r2)
  80eef8:	1880061e 	bne	r3,r2,80ef14 <altera_avalon_uart_txirq+0x11c>
  {
    sp->ctrl &= ~(ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  80eefc:	e0bffc17 	ldw	r2,-16(fp)
  80ef00:	10c00117 	ldw	r3,4(r2)
  80ef04:	00beefc4 	movi	r2,-1089
  80ef08:	1886703a 	and	r3,r3,r2
  80ef0c:	e0bffc17 	ldw	r2,-16(fp)
  80ef10:	10c00115 	stw	r3,4(r2)
                    ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  80ef14:	e0bffc17 	ldw	r2,-16(fp)
  80ef18:	10800017 	ldw	r2,0(r2)
  80ef1c:	10800304 	addi	r2,r2,12
  80ef20:	e0fffc17 	ldw	r3,-16(fp)
  80ef24:	18c00117 	ldw	r3,4(r3)
  80ef28:	10c00035 	stwio	r3,0(r2)
}
  80ef2c:	0001883a 	nop
  80ef30:	e037883a 	mov	sp,fp
  80ef34:	df000017 	ldw	fp,0(sp)
  80ef38:	dec00104 	addi	sp,sp,4
  80ef3c:	f800283a 	ret

0080ef40 <altera_avalon_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  80ef40:	defffd04 	addi	sp,sp,-12
  80ef44:	df000215 	stw	fp,8(sp)
  80ef48:	df000204 	addi	fp,sp,8
  80ef4c:	e13ffe15 	stw	r4,-8(fp)
  80ef50:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  80ef54:	00000506 	br	80ef6c <altera_avalon_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80ef58:	e0bfff17 	ldw	r2,-4(fp)
  80ef5c:	1090000c 	andi	r2,r2,16384
  80ef60:	10000226 	beq	r2,zero,80ef6c <altera_avalon_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80ef64:	00bffd44 	movi	r2,-11
  80ef68:	00000606 	br	80ef84 <altera_avalon_uart_close+0x44>
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  80ef6c:	e0bffe17 	ldw	r2,-8(fp)
  80ef70:	10c00417 	ldw	r3,16(r2)
  80ef74:	e0bffe17 	ldw	r2,-8(fp)
  80ef78:	10800517 	ldw	r2,20(r2)
  80ef7c:	18bff61e 	bne	r3,r2,80ef58 <__alt_mem_onchip_memory2+0xff7eef58>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80ef80:	0005883a 	mov	r2,zero
}
  80ef84:	e037883a 	mov	sp,fp
  80ef88:	df000017 	ldw	fp,0(sp)
  80ef8c:	dec00104 	addi	sp,sp,4
  80ef90:	f800283a 	ret

0080ef94 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ef94:	defffe04 	addi	sp,sp,-8
  80ef98:	dfc00115 	stw	ra,4(sp)
  80ef9c:	df000015 	stw	fp,0(sp)
  80efa0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80efa4:	d0a00b17 	ldw	r2,-32724(gp)
  80efa8:	10000326 	beq	r2,zero,80efb8 <alt_get_errno+0x24>
  80efac:	d0a00b17 	ldw	r2,-32724(gp)
  80efb0:	103ee83a 	callr	r2
  80efb4:	00000106 	br	80efbc <alt_get_errno+0x28>
  80efb8:	d0a70204 	addi	r2,gp,-25592
}
  80efbc:	e037883a 	mov	sp,fp
  80efc0:	dfc00117 	ldw	ra,4(sp)
  80efc4:	df000017 	ldw	fp,0(sp)
  80efc8:	dec00204 	addi	sp,sp,8
  80efcc:	f800283a 	ret

0080efd0 <altera_avalon_uart_read>:
 */

int 
altera_avalon_uart_read(altera_avalon_uart_state* sp, char* ptr, int len,
  int flags)
{
  80efd0:	defff204 	addi	sp,sp,-56
  80efd4:	dfc00d15 	stw	ra,52(sp)
  80efd8:	df000c15 	stw	fp,48(sp)
  80efdc:	df000c04 	addi	fp,sp,48
  80efe0:	e13ffc15 	stw	r4,-16(fp)
  80efe4:	e17ffd15 	stw	r5,-12(fp)
  80efe8:	e1bffe15 	stw	r6,-8(fp)
  80efec:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
  alt_u8          read_would_block = 0;
  80eff0:	e03ff405 	stb	zero,-48(fp)
  int             count = 0;
  80eff4:	e03ff515 	stw	zero,-44(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
  80eff8:	e0bfff17 	ldw	r2,-4(fp)
  80effc:	1090000c 	andi	r2,r2,16384
  80f000:	1005003a 	cmpeq	r2,r2,zero
  80f004:	10803fcc 	andi	r2,r2,255
  80f008:	e0bff615 	stw	r2,-40(fp)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  80f00c:	00001306 	br	80f05c <altera_avalon_uart_read+0x8c>
    {
      count++;
  80f010:	e0bff517 	ldw	r2,-44(fp)
  80f014:	10800044 	addi	r2,r2,1
  80f018:	e0bff515 	stw	r2,-44(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
  80f01c:	e0bffd17 	ldw	r2,-12(fp)
  80f020:	10c00044 	addi	r3,r2,1
  80f024:	e0fffd15 	stw	r3,-12(fp)
  80f028:	e0fffc17 	ldw	r3,-16(fp)
  80f02c:	18c00217 	ldw	r3,8(r3)
  80f030:	e13ffc17 	ldw	r4,-16(fp)
  80f034:	20c7883a 	add	r3,r4,r3
  80f038:	18c00704 	addi	r3,r3,28
  80f03c:	18c00003 	ldbu	r3,0(r3)
  80f040:	10c00005 	stb	r3,0(r2)
      
      sp->rx_start = (sp->rx_start+1) & ALT_AVALON_UART_BUF_MSK;
  80f044:	e0bffc17 	ldw	r2,-16(fp)
  80f048:	10800217 	ldw	r2,8(r2)
  80f04c:	10800044 	addi	r2,r2,1
  80f050:	10c00fcc 	andi	r3,r2,63
  80f054:	e0bffc17 	ldw	r2,-16(fp)
  80f058:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  80f05c:	e0fff517 	ldw	r3,-44(fp)
  80f060:	e0bffe17 	ldw	r2,-8(fp)
  80f064:	1880050e 	bge	r3,r2,80f07c <altera_avalon_uart_read+0xac>
  80f068:	e0bffc17 	ldw	r2,-16(fp)
  80f06c:	10c00217 	ldw	r3,8(r2)
  80f070:	e0bffc17 	ldw	r2,-16(fp)
  80f074:	10800317 	ldw	r2,12(r2)
  80f078:	18bfe51e 	bne	r3,r2,80f010 <__alt_mem_onchip_memory2+0xff7ef010>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
  80f07c:	e0bff517 	ldw	r2,-44(fp)
  80f080:	1000251e 	bne	r2,zero,80f118 <altera_avalon_uart_read+0x148>
  80f084:	e0bffc17 	ldw	r2,-16(fp)
  80f088:	10c00217 	ldw	r3,8(r2)
  80f08c:	e0bffc17 	ldw	r2,-16(fp)
  80f090:	10800317 	ldw	r2,12(r2)
  80f094:	1880201e 	bne	r3,r2,80f118 <altera_avalon_uart_read+0x148>
    {
      if (!block)
  80f098:	e0bff617 	ldw	r2,-40(fp)
  80f09c:	1000071e 	bne	r2,zero,80f0bc <altera_avalon_uart_read+0xec>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
  80f0a0:	080ef940 	call	80ef94 <alt_get_errno>
  80f0a4:	1007883a 	mov	r3,r2
  80f0a8:	008002c4 	movi	r2,11
  80f0ac:	18800015 	stw	r2,0(r3)
        read_would_block = 1;
  80f0b0:	00800044 	movi	r2,1
  80f0b4:	e0bff405 	stb	r2,-48(fp)
        break;
  80f0b8:	00001b06 	br	80f128 <altera_avalon_uart_read+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f0bc:	0005303a 	rdctl	r2,status
  80f0c0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f0c4:	e0fff917 	ldw	r3,-28(fp)
  80f0c8:	00bfff84 	movi	r2,-2
  80f0cc:	1884703a 	and	r2,r3,r2
  80f0d0:	1001703a 	wrctl	status,r2
  
  return context;
  80f0d4:	e0bff917 	ldw	r2,-28(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
  80f0d8:	e0bff815 	stw	r2,-32(fp)
       sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  80f0dc:	e0bffc17 	ldw	r2,-16(fp)
  80f0e0:	10800117 	ldw	r2,4(r2)
  80f0e4:	10c02014 	ori	r3,r2,128
  80f0e8:	e0bffc17 	ldw	r2,-16(fp)
  80f0ec:	10c00115 	stw	r3,4(r2)
       IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  80f0f0:	e0bffc17 	ldw	r2,-16(fp)
  80f0f4:	10800017 	ldw	r2,0(r2)
  80f0f8:	10800304 	addi	r2,r2,12
  80f0fc:	e0fffc17 	ldw	r3,-16(fp)
  80f100:	18c00117 	ldw	r3,4(r3)
  80f104:	10c00035 	stwio	r3,0(r2)
  80f108:	e0bff817 	ldw	r2,-32(fp)
  80f10c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f110:	e0bffa17 	ldw	r2,-24(fp)
  80f114:	1001703a 	wrctl	status,r2
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
  80f118:	e0bff517 	ldw	r2,-44(fp)
  80f11c:	1000021e 	bne	r2,zero,80f128 <altera_avalon_uart_read+0x158>
  80f120:	e0bffe17 	ldw	r2,-8(fp)
  80f124:	103fcd1e 	bne	r2,zero,80f05c <__alt_mem_onchip_memory2+0xff7ef05c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f128:	0005303a 	rdctl	r2,status
  80f12c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f130:	e0fffb17 	ldw	r3,-20(fp)
  80f134:	00bfff84 	movi	r2,-2
  80f138:	1884703a 	and	r2,r3,r2
  80f13c:	1001703a 	wrctl	status,r2
  
  return context;
  80f140:	e0bffb17 	ldw	r2,-20(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
  80f144:	e0bff815 	stw	r2,-32(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  80f148:	e0bffc17 	ldw	r2,-16(fp)
  80f14c:	10800117 	ldw	r2,4(r2)
  80f150:	10c02014 	ori	r3,r2,128
  80f154:	e0bffc17 	ldw	r2,-16(fp)
  80f158:	10c00115 	stw	r3,4(r2)
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  80f15c:	e0bffc17 	ldw	r2,-16(fp)
  80f160:	10800017 	ldw	r2,0(r2)
  80f164:	10800304 	addi	r2,r2,12
  80f168:	e0fffc17 	ldw	r3,-16(fp)
  80f16c:	18c00117 	ldw	r3,4(r3)
  80f170:	10c00035 	stwio	r3,0(r2)
  80f174:	e0bff817 	ldw	r2,-32(fp)
  80f178:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f17c:	e0bff717 	ldw	r2,-36(fp)
  80f180:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */
  if(read_would_block) {
  80f184:	e0bff403 	ldbu	r2,-48(fp)
  80f188:	10000226 	beq	r2,zero,80f194 <altera_avalon_uart_read+0x1c4>
    return -EWOULDBLOCK;
  80f18c:	00bffd44 	movi	r2,-11
  80f190:	00000106 	br	80f198 <altera_avalon_uart_read+0x1c8>
  }
  else {
    return count;
  80f194:	e0bff517 	ldw	r2,-44(fp)
  }
}
  80f198:	e037883a 	mov	sp,fp
  80f19c:	dfc00117 	ldw	ra,4(sp)
  80f1a0:	df000017 	ldw	fp,0(sp)
  80f1a4:	dec00204 	addi	sp,sp,8
  80f1a8:	f800283a 	ret

0080f1ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f1ac:	defffe04 	addi	sp,sp,-8
  80f1b0:	dfc00115 	stw	ra,4(sp)
  80f1b4:	df000015 	stw	fp,0(sp)
  80f1b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f1bc:	d0a00b17 	ldw	r2,-32724(gp)
  80f1c0:	10000326 	beq	r2,zero,80f1d0 <alt_get_errno+0x24>
  80f1c4:	d0a00b17 	ldw	r2,-32724(gp)
  80f1c8:	103ee83a 	callr	r2
  80f1cc:	00000106 	br	80f1d4 <alt_get_errno+0x28>
  80f1d0:	d0a70204 	addi	r2,gp,-25592
}
  80f1d4:	e037883a 	mov	sp,fp
  80f1d8:	dfc00117 	ldw	ra,4(sp)
  80f1dc:	df000017 	ldw	fp,0(sp)
  80f1e0:	dec00204 	addi	sp,sp,8
  80f1e4:	f800283a 	ret

0080f1e8 <altera_avalon_uart_write>:
 */

int
altera_avalon_uart_write(altera_avalon_uart_state* sp, const char* ptr, int len,
  int flags)
{
  80f1e8:	defff204 	addi	sp,sp,-56
  80f1ec:	dfc00d15 	stw	ra,52(sp)
  80f1f0:	df000c15 	stw	fp,48(sp)
  80f1f4:	df000c04 	addi	fp,sp,48
  80f1f8:	e13ffc15 	stw	r4,-16(fp)
  80f1fc:	e17ffd15 	stw	r5,-12(fp)
  80f200:	e1bffe15 	stw	r6,-8(fp)
  80f204:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int             count = len;
  80f208:	e0bffe17 	ldw	r2,-8(fp)
  80f20c:	e0bff415 	stw	r2,-48(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
  80f210:	e0bfff17 	ldw	r2,-4(fp)
  80f214:	1090000c 	andi	r2,r2,16384
  80f218:	e0bff515 	stw	r2,-44(fp)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  80f21c:	00003c06 	br	80f310 <altera_avalon_uart_write+0x128>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  80f220:	e0bffc17 	ldw	r2,-16(fp)
  80f224:	10800517 	ldw	r2,20(r2)
  80f228:	10800044 	addi	r2,r2,1
  80f22c:	10800fcc 	andi	r2,r2,63
  80f230:	e0bff715 	stw	r2,-36(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
  80f234:	e0bffc17 	ldw	r2,-16(fp)
  80f238:	10c00417 	ldw	r3,16(r2)
  80f23c:	e0bff717 	ldw	r2,-36(fp)
  80f240:	1880221e 	bne	r3,r2,80f2cc <altera_avalon_uart_write+0xe4>
    {
      if (no_block)
  80f244:	e0bff517 	ldw	r2,-44(fp)
  80f248:	10000526 	beq	r2,zero,80f260 <altera_avalon_uart_write+0x78>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
  80f24c:	080f1ac0 	call	80f1ac <alt_get_errno>
  80f250:	1007883a 	mov	r3,r2
  80f254:	008002c4 	movi	r2,11
  80f258:	18800015 	stw	r2,0(r3)
        break;
  80f25c:	00002e06 	br	80f318 <altera_avalon_uart_write+0x130>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f260:	0005303a 	rdctl	r2,status
  80f264:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f268:	e0fff917 	ldw	r3,-28(fp)
  80f26c:	00bfff84 	movi	r2,-2
  80f270:	1884703a 	and	r2,r3,r2
  80f274:	1001703a 	wrctl	status,r2
  
  return context;
  80f278:	e0bff917 	ldw	r2,-28(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
  80f27c:	e0bff815 	stw	r2,-32(fp)
        sp->ctrl |= (ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  80f280:	e0bffc17 	ldw	r2,-16(fp)
  80f284:	10800117 	ldw	r2,4(r2)
  80f288:	10c11014 	ori	r3,r2,1088
  80f28c:	e0bffc17 	ldw	r2,-16(fp)
  80f290:	10c00115 	stw	r3,4(r2)
                        ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  80f294:	e0bffc17 	ldw	r2,-16(fp)
  80f298:	10800017 	ldw	r2,0(r2)
  80f29c:	10800304 	addi	r2,r2,12
  80f2a0:	e0fffc17 	ldw	r3,-16(fp)
  80f2a4:	18c00117 	ldw	r3,4(r3)
  80f2a8:	10c00035 	stwio	r3,0(r2)
  80f2ac:	e0bff817 	ldw	r2,-32(fp)
  80f2b0:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f2b4:	e0bff617 	ldw	r2,-40(fp)
  80f2b8:	1001703a 	wrctl	status,r2
          ALT_FLAG_PEND (sp->events, 
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
  80f2bc:	e0bffc17 	ldw	r2,-16(fp)
  80f2c0:	10c00417 	ldw	r3,16(r2)
  80f2c4:	e0bff717 	ldw	r2,-36(fp)
  80f2c8:	18bffc26 	beq	r3,r2,80f2bc <__alt_mem_onchip_memory2+0xff7ef2bc>
      }
    }

    count--;
  80f2cc:	e0bff417 	ldw	r2,-48(fp)
  80f2d0:	10bfffc4 	addi	r2,r2,-1
  80f2d4:	e0bff415 	stw	r2,-48(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
  80f2d8:	e0bffc17 	ldw	r2,-16(fp)
  80f2dc:	10c00517 	ldw	r3,20(r2)
  80f2e0:	e0bffd17 	ldw	r2,-12(fp)
  80f2e4:	11000044 	addi	r4,r2,1
  80f2e8:	e13ffd15 	stw	r4,-12(fp)
  80f2ec:	10800003 	ldbu	r2,0(r2)
  80f2f0:	1009883a 	mov	r4,r2
  80f2f4:	e0bffc17 	ldw	r2,-16(fp)
  80f2f8:	10c5883a 	add	r2,r2,r3
  80f2fc:	10801704 	addi	r2,r2,92
  80f300:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
  80f304:	e0bffc17 	ldw	r2,-16(fp)
  80f308:	e0fff717 	ldw	r3,-36(fp)
  80f30c:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  80f310:	e0bff417 	ldw	r2,-48(fp)
  80f314:	103fc21e 	bne	r2,zero,80f220 <__alt_mem_onchip_memory2+0xff7ef220>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f318:	0005303a 	rdctl	r2,status
  80f31c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f320:	e0fffb17 	ldw	r3,-20(fp)
  80f324:	00bfff84 	movi	r2,-2
  80f328:	1884703a 	and	r2,r3,r2
  80f32c:	1001703a 	wrctl	status,r2
  
  return context;
  80f330:	e0bffb17 	ldw	r2,-20(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
  80f334:	e0bff815 	stw	r2,-32(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  80f338:	e0bffc17 	ldw	r2,-16(fp)
  80f33c:	10800117 	ldw	r2,4(r2)
  80f340:	10c11014 	ori	r3,r2,1088
  80f344:	e0bffc17 	ldw	r2,-16(fp)
  80f348:	10c00115 	stw	r3,4(r2)
                 ALTERA_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  80f34c:	e0bffc17 	ldw	r2,-16(fp)
  80f350:	10800017 	ldw	r2,0(r2)
  80f354:	10800304 	addi	r2,r2,12
  80f358:	e0fffc17 	ldw	r3,-16(fp)
  80f35c:	18c00117 	ldw	r3,4(r3)
  80f360:	10c00035 	stwio	r3,0(r2)
  80f364:	e0bff817 	ldw	r2,-32(fp)
  80f368:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f36c:	e0bffa17 	ldw	r2,-24(fp)
  80f370:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
  80f374:	e0fffe17 	ldw	r3,-8(fp)
  80f378:	e0bff417 	ldw	r2,-48(fp)
  80f37c:	1885c83a 	sub	r2,r3,r2
}
  80f380:	e037883a 	mov	sp,fp
  80f384:	dfc00117 	ldw	ra,4(sp)
  80f388:	df000017 	ldw	fp,0(sp)
  80f38c:	dec00204 	addi	sp,sp,8
  80f390:	f800283a 	ret

0080f394 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80f394:	defff504 	addi	sp,sp,-44
  80f398:	df000a15 	stw	fp,40(sp)
  80f39c:	df000a04 	addi	fp,sp,40
  80f3a0:	e13ffc15 	stw	r4,-16(fp)
  80f3a4:	e17ffd15 	stw	r5,-12(fp)
  80f3a8:	e1bffe15 	stw	r6,-8(fp)
  80f3ac:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80f3b0:	e03ff615 	stw	zero,-40(fp)
  80f3b4:	d0a70717 	ldw	r2,-25572(gp)
  
  if (alt_ticks_per_second ())
  80f3b8:	10003c26 	beq	r2,zero,80f4ac <alt_alarm_start+0x118>
  {
    if (alarm)
  80f3bc:	e0bffc17 	ldw	r2,-16(fp)
  80f3c0:	10003826 	beq	r2,zero,80f4a4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  80f3c4:	e0bffc17 	ldw	r2,-16(fp)
  80f3c8:	e0fffe17 	ldw	r3,-8(fp)
  80f3cc:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80f3d0:	e0bffc17 	ldw	r2,-16(fp)
  80f3d4:	e0ffff17 	ldw	r3,-4(fp)
  80f3d8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f3dc:	0005303a 	rdctl	r2,status
  80f3e0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f3e4:	e0fff917 	ldw	r3,-28(fp)
  80f3e8:	00bfff84 	movi	r2,-2
  80f3ec:	1884703a 	and	r2,r3,r2
  80f3f0:	1001703a 	wrctl	status,r2
  
  return context;
  80f3f4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  80f3f8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80f3fc:	d0a70817 	ldw	r2,-25568(gp)
      
      current_nticks = alt_nticks();
  80f400:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80f404:	e0fffd17 	ldw	r3,-12(fp)
  80f408:	e0bff617 	ldw	r2,-40(fp)
  80f40c:	1885883a 	add	r2,r3,r2
  80f410:	10c00044 	addi	r3,r2,1
  80f414:	e0bffc17 	ldw	r2,-16(fp)
  80f418:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80f41c:	e0bffc17 	ldw	r2,-16(fp)
  80f420:	10c00217 	ldw	r3,8(r2)
  80f424:	e0bff617 	ldw	r2,-40(fp)
  80f428:	1880042e 	bgeu	r3,r2,80f43c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80f42c:	e0bffc17 	ldw	r2,-16(fp)
  80f430:	00c00044 	movi	r3,1
  80f434:	10c00405 	stb	r3,16(r2)
  80f438:	00000206 	br	80f444 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80f43c:	e0bffc17 	ldw	r2,-16(fp)
  80f440:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80f444:	e0bffc17 	ldw	r2,-16(fp)
  80f448:	d0e00e04 	addi	r3,gp,-32712
  80f44c:	e0fffa15 	stw	r3,-24(fp)
  80f450:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80f454:	e0bffb17 	ldw	r2,-20(fp)
  80f458:	e0fffa17 	ldw	r3,-24(fp)
  80f45c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80f460:	e0bffa17 	ldw	r2,-24(fp)
  80f464:	10c00017 	ldw	r3,0(r2)
  80f468:	e0bffb17 	ldw	r2,-20(fp)
  80f46c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80f470:	e0bffa17 	ldw	r2,-24(fp)
  80f474:	10800017 	ldw	r2,0(r2)
  80f478:	e0fffb17 	ldw	r3,-20(fp)
  80f47c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80f480:	e0bffa17 	ldw	r2,-24(fp)
  80f484:	e0fffb17 	ldw	r3,-20(fp)
  80f488:	10c00015 	stw	r3,0(r2)
  80f48c:	e0bff817 	ldw	r2,-32(fp)
  80f490:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f494:	e0bff717 	ldw	r2,-36(fp)
  80f498:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80f49c:	0005883a 	mov	r2,zero
  80f4a0:	00000306 	br	80f4b0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  80f4a4:	00bffa84 	movi	r2,-22
  80f4a8:	00000106 	br	80f4b0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  80f4ac:	00bfde84 	movi	r2,-134
  }
}
  80f4b0:	e037883a 	mov	sp,fp
  80f4b4:	df000017 	ldw	fp,0(sp)
  80f4b8:	dec00104 	addi	sp,sp,4
  80f4bc:	f800283a 	ret

0080f4c0 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
  80f4c0:	defffa04 	addi	sp,sp,-24
  80f4c4:	dfc00515 	stw	ra,20(sp)
  80f4c8:	df000415 	stw	fp,16(sp)
  80f4cc:	df000404 	addi	fp,sp,16
  80f4d0:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
  80f4d4:	00800244 	movi	r2,9
  80f4d8:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
  80f4dc:	014003f4 	movhi	r5,15
  80f4e0:	29509004 	addi	r5,r5,16960
  80f4e4:	e13ffd17 	ldw	r4,-12(fp)
  80f4e8:	080acec0 	call	80acec <__mulsi3>
  80f4ec:	100b883a 	mov	r5,r2
  80f4f0:	0100bef4 	movhi	r4,763
  80f4f4:	213c2004 	addi	r4,r4,-3968
  80f4f8:	080ac300 	call	80ac30 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  80f4fc:	100b883a 	mov	r5,r2
  80f500:	01200034 	movhi	r4,32768
  80f504:	213fffc4 	addi	r4,r4,-1
  80f508:	080ac300 	call	80ac30 <__udivsi3>
  80f50c:	100b883a 	mov	r5,r2
  80f510:	e13fff17 	ldw	r4,-4(fp)
  80f514:	080ac300 	call	80ac30 <__udivsi3>
  80f518:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  80f51c:	e0bffe17 	ldw	r2,-8(fp)
  80f520:	10002a26 	beq	r2,zero,80f5cc <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
  80f524:	e03ffc15 	stw	zero,-16(fp)
  80f528:	00001706 	br	80f588 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
  80f52c:	00a00034 	movhi	r2,32768
  80f530:	10bfffc4 	addi	r2,r2,-1
  80f534:	10bfffc4 	addi	r2,r2,-1
  80f538:	103ffe1e 	bne	r2,zero,80f534 <__alt_mem_onchip_memory2+0xff7ef534>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
  80f53c:	014003f4 	movhi	r5,15
  80f540:	29509004 	addi	r5,r5,16960
  80f544:	e13ffd17 	ldw	r4,-12(fp)
  80f548:	080acec0 	call	80acec <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
  80f54c:	100b883a 	mov	r5,r2
  80f550:	0100bef4 	movhi	r4,763
  80f554:	213c2004 	addi	r4,r4,-3968
  80f558:	080ac300 	call	80ac30 <__udivsi3>
  80f55c:	100b883a 	mov	r5,r2
  80f560:	01200034 	movhi	r4,32768
  80f564:	213fffc4 	addi	r4,r4,-1
  80f568:	080ac300 	call	80ac30 <__udivsi3>
  80f56c:	1007883a 	mov	r3,r2
  80f570:	e0bfff17 	ldw	r2,-4(fp)
  80f574:	10c5c83a 	sub	r2,r2,r3
  80f578:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
  80f57c:	e0bffc17 	ldw	r2,-16(fp)
  80f580:	10800044 	addi	r2,r2,1
  80f584:	e0bffc15 	stw	r2,-16(fp)
  80f588:	e0fffc17 	ldw	r3,-16(fp)
  80f58c:	e0bffe17 	ldw	r2,-8(fp)
  80f590:	18bfe616 	blt	r3,r2,80f52c <__alt_mem_onchip_memory2+0xff7ef52c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  80f594:	014003f4 	movhi	r5,15
  80f598:	29509004 	addi	r5,r5,16960
  80f59c:	e13ffd17 	ldw	r4,-12(fp)
  80f5a0:	080acec0 	call	80acec <__mulsi3>
  80f5a4:	100b883a 	mov	r5,r2
  80f5a8:	0100bef4 	movhi	r4,763
  80f5ac:	213c2004 	addi	r4,r4,-3968
  80f5b0:	080ac300 	call	80ac30 <__udivsi3>
  80f5b4:	e17fff17 	ldw	r5,-4(fp)
  80f5b8:	1009883a 	mov	r4,r2
  80f5bc:	080acec0 	call	80acec <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  80f5c0:	10bfffc4 	addi	r2,r2,-1
  80f5c4:	103ffe1e 	bne	r2,zero,80f5c0 <__alt_mem_onchip_memory2+0xff7ef5c0>
  80f5c8:	00000d06 	br	80f600 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  80f5cc:	014003f4 	movhi	r5,15
  80f5d0:	29509004 	addi	r5,r5,16960
  80f5d4:	e13ffd17 	ldw	r4,-12(fp)
  80f5d8:	080acec0 	call	80acec <__mulsi3>
  80f5dc:	100b883a 	mov	r5,r2
  80f5e0:	0100bef4 	movhi	r4,763
  80f5e4:	213c2004 	addi	r4,r4,-3968
  80f5e8:	080ac300 	call	80ac30 <__udivsi3>
  80f5ec:	e17fff17 	ldw	r5,-4(fp)
  80f5f0:	1009883a 	mov	r4,r2
  80f5f4:	080acec0 	call	80acec <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  80f5f8:	10bfffc4 	addi	r2,r2,-1
  80f5fc:	00bffe16 	blt	zero,r2,80f5f8 <__alt_mem_onchip_memory2+0xff7ef5f8>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
  80f600:	0005883a 	mov	r2,zero
}
  80f604:	e037883a 	mov	sp,fp
  80f608:	dfc00117 	ldw	ra,4(sp)
  80f60c:	df000017 	ldw	fp,0(sp)
  80f610:	dec00204 	addi	sp,sp,8
  80f614:	f800283a 	ret

0080f618 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80f618:	deffff04 	addi	sp,sp,-4
  80f61c:	df000015 	stw	fp,0(sp)
  80f620:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80f624:	0001883a 	nop
  80f628:	e037883a 	mov	sp,fp
  80f62c:	df000017 	ldw	fp,0(sp)
  80f630:	dec00104 	addi	sp,sp,4
  80f634:	f800283a 	ret

0080f638 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f638:	defffe04 	addi	sp,sp,-8
  80f63c:	dfc00115 	stw	ra,4(sp)
  80f640:	df000015 	stw	fp,0(sp)
  80f644:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f648:	d0a00b17 	ldw	r2,-32724(gp)
  80f64c:	10000326 	beq	r2,zero,80f65c <alt_get_errno+0x24>
  80f650:	d0a00b17 	ldw	r2,-32724(gp)
  80f654:	103ee83a 	callr	r2
  80f658:	00000106 	br	80f660 <alt_get_errno+0x28>
  80f65c:	d0a70204 	addi	r2,gp,-25592
}
  80f660:	e037883a 	mov	sp,fp
  80f664:	dfc00117 	ldw	ra,4(sp)
  80f668:	df000017 	ldw	fp,0(sp)
  80f66c:	dec00204 	addi	sp,sp,8
  80f670:	f800283a 	ret

0080f674 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80f674:	defffa04 	addi	sp,sp,-24
  80f678:	dfc00515 	stw	ra,20(sp)
  80f67c:	df000415 	stw	fp,16(sp)
  80f680:	df000404 	addi	fp,sp,16
  80f684:	e13ffe15 	stw	r4,-8(fp)
  80f688:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80f68c:	e0bffe17 	ldw	r2,-8(fp)
  80f690:	10000326 	beq	r2,zero,80f6a0 <alt_dev_llist_insert+0x2c>
  80f694:	e0bffe17 	ldw	r2,-8(fp)
  80f698:	10800217 	ldw	r2,8(r2)
  80f69c:	1000061e 	bne	r2,zero,80f6b8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80f6a0:	080f6380 	call	80f638 <alt_get_errno>
  80f6a4:	1007883a 	mov	r3,r2
  80f6a8:	00800584 	movi	r2,22
  80f6ac:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80f6b0:	00bffa84 	movi	r2,-22
  80f6b4:	00001306 	br	80f704 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80f6b8:	e0bffe17 	ldw	r2,-8(fp)
  80f6bc:	e0ffff17 	ldw	r3,-4(fp)
  80f6c0:	e0fffc15 	stw	r3,-16(fp)
  80f6c4:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80f6c8:	e0bffd17 	ldw	r2,-12(fp)
  80f6cc:	e0fffc17 	ldw	r3,-16(fp)
  80f6d0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80f6d4:	e0bffc17 	ldw	r2,-16(fp)
  80f6d8:	10c00017 	ldw	r3,0(r2)
  80f6dc:	e0bffd17 	ldw	r2,-12(fp)
  80f6e0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80f6e4:	e0bffc17 	ldw	r2,-16(fp)
  80f6e8:	10800017 	ldw	r2,0(r2)
  80f6ec:	e0fffd17 	ldw	r3,-12(fp)
  80f6f0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80f6f4:	e0bffc17 	ldw	r2,-16(fp)
  80f6f8:	e0fffd17 	ldw	r3,-12(fp)
  80f6fc:	10c00015 	stw	r3,0(r2)

  return 0;  
  80f700:	0005883a 	mov	r2,zero
}
  80f704:	e037883a 	mov	sp,fp
  80f708:	dfc00117 	ldw	ra,4(sp)
  80f70c:	df000017 	ldw	fp,0(sp)
  80f710:	dec00204 	addi	sp,sp,8
  80f714:	f800283a 	ret

0080f718 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80f718:	defffd04 	addi	sp,sp,-12
  80f71c:	dfc00215 	stw	ra,8(sp)
  80f720:	df000115 	stw	fp,4(sp)
  80f724:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80f728:	00802074 	movhi	r2,129
  80f72c:	1081b304 	addi	r2,r2,1740
  80f730:	e0bfff15 	stw	r2,-4(fp)
  80f734:	00000606 	br	80f750 <_do_ctors+0x38>
        (*ctor) (); 
  80f738:	e0bfff17 	ldw	r2,-4(fp)
  80f73c:	10800017 	ldw	r2,0(r2)
  80f740:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80f744:	e0bfff17 	ldw	r2,-4(fp)
  80f748:	10bfff04 	addi	r2,r2,-4
  80f74c:	e0bfff15 	stw	r2,-4(fp)
  80f750:	e0ffff17 	ldw	r3,-4(fp)
  80f754:	00802074 	movhi	r2,129
  80f758:	1081b404 	addi	r2,r2,1744
  80f75c:	18bff62e 	bgeu	r3,r2,80f738 <__alt_mem_onchip_memory2+0xff7ef738>
        (*ctor) (); 
}
  80f760:	0001883a 	nop
  80f764:	e037883a 	mov	sp,fp
  80f768:	dfc00117 	ldw	ra,4(sp)
  80f76c:	df000017 	ldw	fp,0(sp)
  80f770:	dec00204 	addi	sp,sp,8
  80f774:	f800283a 	ret

0080f778 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80f778:	defffd04 	addi	sp,sp,-12
  80f77c:	dfc00215 	stw	ra,8(sp)
  80f780:	df000115 	stw	fp,4(sp)
  80f784:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80f788:	00802074 	movhi	r2,129
  80f78c:	1081b304 	addi	r2,r2,1740
  80f790:	e0bfff15 	stw	r2,-4(fp)
  80f794:	00000606 	br	80f7b0 <_do_dtors+0x38>
        (*dtor) (); 
  80f798:	e0bfff17 	ldw	r2,-4(fp)
  80f79c:	10800017 	ldw	r2,0(r2)
  80f7a0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80f7a4:	e0bfff17 	ldw	r2,-4(fp)
  80f7a8:	10bfff04 	addi	r2,r2,-4
  80f7ac:	e0bfff15 	stw	r2,-4(fp)
  80f7b0:	e0ffff17 	ldw	r3,-4(fp)
  80f7b4:	00802074 	movhi	r2,129
  80f7b8:	1081b404 	addi	r2,r2,1744
  80f7bc:	18bff62e 	bgeu	r3,r2,80f798 <__alt_mem_onchip_memory2+0xff7ef798>
        (*dtor) (); 
}
  80f7c0:	0001883a 	nop
  80f7c4:	e037883a 	mov	sp,fp
  80f7c8:	dfc00117 	ldw	ra,4(sp)
  80f7cc:	df000017 	ldw	fp,0(sp)
  80f7d0:	dec00204 	addi	sp,sp,8
  80f7d4:	f800283a 	ret

0080f7d8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80f7d8:	deffff04 	addi	sp,sp,-4
  80f7dc:	df000015 	stw	fp,0(sp)
  80f7e0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
  80f7e4:	0001883a 	nop
  80f7e8:	e037883a 	mov	sp,fp
  80f7ec:	df000017 	ldw	fp,0(sp)
  80f7f0:	dec00104 	addi	sp,sp,4
  80f7f4:	f800283a 	ret

0080f7f8 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80f7f8:	defff904 	addi	sp,sp,-28
  80f7fc:	dfc00615 	stw	ra,24(sp)
  80f800:	df000515 	stw	fp,20(sp)
  80f804:	df000504 	addi	fp,sp,20
  80f808:	e13ffc15 	stw	r4,-16(fp)
  80f80c:	e17ffd15 	stw	r5,-12(fp)
  80f810:	e1bffe15 	stw	r6,-8(fp)
  80f814:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80f818:	e0800217 	ldw	r2,8(fp)
  80f81c:	d8800015 	stw	r2,0(sp)
  80f820:	e1ffff17 	ldw	r7,-4(fp)
  80f824:	e1bffe17 	ldw	r6,-8(fp)
  80f828:	e17ffd17 	ldw	r5,-12(fp)
  80f82c:	e13ffc17 	ldw	r4,-16(fp)
  80f830:	080f9a80 	call	80f9a8 <alt_iic_isr_register>
}  
  80f834:	e037883a 	mov	sp,fp
  80f838:	dfc00117 	ldw	ra,4(sp)
  80f83c:	df000017 	ldw	fp,0(sp)
  80f840:	dec00204 	addi	sp,sp,8
  80f844:	f800283a 	ret

0080f848 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80f848:	defff904 	addi	sp,sp,-28
  80f84c:	df000615 	stw	fp,24(sp)
  80f850:	df000604 	addi	fp,sp,24
  80f854:	e13ffe15 	stw	r4,-8(fp)
  80f858:	e17fff15 	stw	r5,-4(fp)
  80f85c:	e0bfff17 	ldw	r2,-4(fp)
  80f860:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f864:	0005303a 	rdctl	r2,status
  80f868:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f86c:	e0fffb17 	ldw	r3,-20(fp)
  80f870:	00bfff84 	movi	r2,-2
  80f874:	1884703a 	and	r2,r3,r2
  80f878:	1001703a 	wrctl	status,r2
  
  return context;
  80f87c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80f880:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  80f884:	00c00044 	movi	r3,1
  80f888:	e0bffa17 	ldw	r2,-24(fp)
  80f88c:	1884983a 	sll	r2,r3,r2
  80f890:	1007883a 	mov	r3,r2
  80f894:	d0a70617 	ldw	r2,-25576(gp)
  80f898:	1884b03a 	or	r2,r3,r2
  80f89c:	d0a70615 	stw	r2,-25576(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80f8a0:	d0a70617 	ldw	r2,-25576(gp)
  80f8a4:	100170fa 	wrctl	ienable,r2
  80f8a8:	e0bffc17 	ldw	r2,-16(fp)
  80f8ac:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f8b0:	e0bffd17 	ldw	r2,-12(fp)
  80f8b4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80f8b8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  80f8bc:	0001883a 	nop
}
  80f8c0:	e037883a 	mov	sp,fp
  80f8c4:	df000017 	ldw	fp,0(sp)
  80f8c8:	dec00104 	addi	sp,sp,4
  80f8cc:	f800283a 	ret

0080f8d0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80f8d0:	defff904 	addi	sp,sp,-28
  80f8d4:	df000615 	stw	fp,24(sp)
  80f8d8:	df000604 	addi	fp,sp,24
  80f8dc:	e13ffe15 	stw	r4,-8(fp)
  80f8e0:	e17fff15 	stw	r5,-4(fp)
  80f8e4:	e0bfff17 	ldw	r2,-4(fp)
  80f8e8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f8ec:	0005303a 	rdctl	r2,status
  80f8f0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f8f4:	e0fffb17 	ldw	r3,-20(fp)
  80f8f8:	00bfff84 	movi	r2,-2
  80f8fc:	1884703a 	and	r2,r3,r2
  80f900:	1001703a 	wrctl	status,r2
  
  return context;
  80f904:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80f908:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  80f90c:	00c00044 	movi	r3,1
  80f910:	e0bffa17 	ldw	r2,-24(fp)
  80f914:	1884983a 	sll	r2,r3,r2
  80f918:	0084303a 	nor	r2,zero,r2
  80f91c:	1007883a 	mov	r3,r2
  80f920:	d0a70617 	ldw	r2,-25576(gp)
  80f924:	1884703a 	and	r2,r3,r2
  80f928:	d0a70615 	stw	r2,-25576(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80f92c:	d0a70617 	ldw	r2,-25576(gp)
  80f930:	100170fa 	wrctl	ienable,r2
  80f934:	e0bffc17 	ldw	r2,-16(fp)
  80f938:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f93c:	e0bffd17 	ldw	r2,-12(fp)
  80f940:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80f944:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  80f948:	0001883a 	nop
}
  80f94c:	e037883a 	mov	sp,fp
  80f950:	df000017 	ldw	fp,0(sp)
  80f954:	dec00104 	addi	sp,sp,4
  80f958:	f800283a 	ret

0080f95c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80f95c:	defffc04 	addi	sp,sp,-16
  80f960:	df000315 	stw	fp,12(sp)
  80f964:	df000304 	addi	fp,sp,12
  80f968:	e13ffe15 	stw	r4,-8(fp)
  80f96c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80f970:	000530fa 	rdctl	r2,ienable
  80f974:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80f978:	00c00044 	movi	r3,1
  80f97c:	e0bfff17 	ldw	r2,-4(fp)
  80f980:	1884983a 	sll	r2,r3,r2
  80f984:	1007883a 	mov	r3,r2
  80f988:	e0bffd17 	ldw	r2,-12(fp)
  80f98c:	1884703a 	and	r2,r3,r2
  80f990:	1004c03a 	cmpne	r2,r2,zero
  80f994:	10803fcc 	andi	r2,r2,255
}
  80f998:	e037883a 	mov	sp,fp
  80f99c:	df000017 	ldw	fp,0(sp)
  80f9a0:	dec00104 	addi	sp,sp,4
  80f9a4:	f800283a 	ret

0080f9a8 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80f9a8:	defff504 	addi	sp,sp,-44
  80f9ac:	dfc00a15 	stw	ra,40(sp)
  80f9b0:	df000915 	stw	fp,36(sp)
  80f9b4:	df000904 	addi	fp,sp,36
  80f9b8:	e13ffc15 	stw	r4,-16(fp)
  80f9bc:	e17ffd15 	stw	r5,-12(fp)
  80f9c0:	e1bffe15 	stw	r6,-8(fp)
  80f9c4:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  80f9c8:	00bffa84 	movi	r2,-22
  80f9cc:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80f9d0:	e0bffd17 	ldw	r2,-12(fp)
  80f9d4:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80f9d8:	e0bff817 	ldw	r2,-32(fp)
  80f9dc:	10800808 	cmpgei	r2,r2,32
  80f9e0:	1000271e 	bne	r2,zero,80fa80 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f9e4:	0005303a 	rdctl	r2,status
  80f9e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f9ec:	e0fffb17 	ldw	r3,-20(fp)
  80f9f0:	00bfff84 	movi	r2,-2
  80f9f4:	1884703a 	and	r2,r3,r2
  80f9f8:	1001703a 	wrctl	status,r2
  
  return context;
  80f9fc:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80fa00:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  80fa04:	00802074 	movhi	r2,129
  80fa08:	10907104 	addi	r2,r2,16836
  80fa0c:	e0fff817 	ldw	r3,-32(fp)
  80fa10:	180690fa 	slli	r3,r3,3
  80fa14:	10c5883a 	add	r2,r2,r3
  80fa18:	e0fffe17 	ldw	r3,-8(fp)
  80fa1c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  80fa20:	00802074 	movhi	r2,129
  80fa24:	10907104 	addi	r2,r2,16836
  80fa28:	e0fff817 	ldw	r3,-32(fp)
  80fa2c:	180690fa 	slli	r3,r3,3
  80fa30:	10c5883a 	add	r2,r2,r3
  80fa34:	10800104 	addi	r2,r2,4
  80fa38:	e0ffff17 	ldw	r3,-4(fp)
  80fa3c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80fa40:	e0bffe17 	ldw	r2,-8(fp)
  80fa44:	10000526 	beq	r2,zero,80fa5c <alt_iic_isr_register+0xb4>
  80fa48:	e0bff817 	ldw	r2,-32(fp)
  80fa4c:	100b883a 	mov	r5,r2
  80fa50:	e13ffc17 	ldw	r4,-16(fp)
  80fa54:	080f8480 	call	80f848 <alt_ic_irq_enable>
  80fa58:	00000406 	br	80fa6c <alt_iic_isr_register+0xc4>
  80fa5c:	e0bff817 	ldw	r2,-32(fp)
  80fa60:	100b883a 	mov	r5,r2
  80fa64:	e13ffc17 	ldw	r4,-16(fp)
  80fa68:	080f8d00 	call	80f8d0 <alt_ic_irq_disable>
  80fa6c:	e0bff715 	stw	r2,-36(fp)
  80fa70:	e0bffa17 	ldw	r2,-24(fp)
  80fa74:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80fa78:	e0bff917 	ldw	r2,-28(fp)
  80fa7c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80fa80:	e0bff717 	ldw	r2,-36(fp)
}
  80fa84:	e037883a 	mov	sp,fp
  80fa88:	dfc00117 	ldw	ra,4(sp)
  80fa8c:	df000017 	ldw	fp,0(sp)
  80fa90:	dec00204 	addi	sp,sp,8
  80fa94:	f800283a 	ret

0080fa98 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80fa98:	defff804 	addi	sp,sp,-32
  80fa9c:	dfc00715 	stw	ra,28(sp)
  80faa0:	df000615 	stw	fp,24(sp)
  80faa4:	dc000515 	stw	r16,20(sp)
  80faa8:	df000604 	addi	fp,sp,24
  80faac:	e13ffb15 	stw	r4,-20(fp)
  80fab0:	e17ffc15 	stw	r5,-16(fp)
  80fab4:	e1bffd15 	stw	r6,-12(fp)
  80fab8:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
  80fabc:	e1bffe17 	ldw	r6,-8(fp)
  80fac0:	e17ffd17 	ldw	r5,-12(fp)
  80fac4:	e13ffc17 	ldw	r4,-16(fp)
  80fac8:	080fd200 	call	80fd20 <open>
  80facc:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
  80fad0:	e0bffa17 	ldw	r2,-24(fp)
  80fad4:	10002216 	blt	r2,zero,80fb60 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
  80fad8:	04002074 	movhi	r16,129
  80fadc:	8404b404 	addi	r16,r16,4816
  80fae0:	e0bffa17 	ldw	r2,-24(fp)
  80fae4:	01400304 	movi	r5,12
  80fae8:	1009883a 	mov	r4,r2
  80faec:	080acec0 	call	80acec <__mulsi3>
  80faf0:	8085883a 	add	r2,r16,r2
  80faf4:	10c00017 	ldw	r3,0(r2)
  80faf8:	e0bffb17 	ldw	r2,-20(fp)
  80fafc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80fb00:	04002074 	movhi	r16,129
  80fb04:	8404b404 	addi	r16,r16,4816
  80fb08:	e0bffa17 	ldw	r2,-24(fp)
  80fb0c:	01400304 	movi	r5,12
  80fb10:	1009883a 	mov	r4,r2
  80fb14:	080acec0 	call	80acec <__mulsi3>
  80fb18:	8085883a 	add	r2,r16,r2
  80fb1c:	10800104 	addi	r2,r2,4
  80fb20:	10c00017 	ldw	r3,0(r2)
  80fb24:	e0bffb17 	ldw	r2,-20(fp)
  80fb28:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80fb2c:	04002074 	movhi	r16,129
  80fb30:	8404b404 	addi	r16,r16,4816
  80fb34:	e0bffa17 	ldw	r2,-24(fp)
  80fb38:	01400304 	movi	r5,12
  80fb3c:	1009883a 	mov	r4,r2
  80fb40:	080acec0 	call	80acec <__mulsi3>
  80fb44:	8085883a 	add	r2,r16,r2
  80fb48:	10800204 	addi	r2,r2,8
  80fb4c:	10c00017 	ldw	r3,0(r2)
  80fb50:	e0bffb17 	ldw	r2,-20(fp)
  80fb54:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80fb58:	e13ffa17 	ldw	r4,-24(fp)
  80fb5c:	080dcdc0 	call	80dcdc <alt_release_fd>
  }
} 
  80fb60:	0001883a 	nop
  80fb64:	e6ffff04 	addi	sp,fp,-4
  80fb68:	dfc00217 	ldw	ra,8(sp)
  80fb6c:	df000117 	ldw	fp,4(sp)
  80fb70:	dc000017 	ldw	r16,0(sp)
  80fb74:	dec00304 	addi	sp,sp,12
  80fb78:	f800283a 	ret

0080fb7c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80fb7c:	defffb04 	addi	sp,sp,-20
  80fb80:	dfc00415 	stw	ra,16(sp)
  80fb84:	df000315 	stw	fp,12(sp)
  80fb88:	df000304 	addi	fp,sp,12
  80fb8c:	e13ffd15 	stw	r4,-12(fp)
  80fb90:	e17ffe15 	stw	r5,-8(fp)
  80fb94:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80fb98:	01c07fc4 	movi	r7,511
  80fb9c:	01800044 	movi	r6,1
  80fba0:	e17ffd17 	ldw	r5,-12(fp)
  80fba4:	01002074 	movhi	r4,129
  80fba8:	2104b704 	addi	r4,r4,4828
  80fbac:	080fa980 	call	80fa98 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80fbb0:	01c07fc4 	movi	r7,511
  80fbb4:	000d883a 	mov	r6,zero
  80fbb8:	e17ffe17 	ldw	r5,-8(fp)
  80fbbc:	01002074 	movhi	r4,129
  80fbc0:	2104b404 	addi	r4,r4,4816
  80fbc4:	080fa980 	call	80fa98 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80fbc8:	01c07fc4 	movi	r7,511
  80fbcc:	01800044 	movi	r6,1
  80fbd0:	e17fff17 	ldw	r5,-4(fp)
  80fbd4:	01002074 	movhi	r4,129
  80fbd8:	2104ba04 	addi	r4,r4,4840
  80fbdc:	080fa980 	call	80fa98 <alt_open_fd>
}  
  80fbe0:	0001883a 	nop
  80fbe4:	e037883a 	mov	sp,fp
  80fbe8:	dfc00117 	ldw	ra,4(sp)
  80fbec:	df000017 	ldw	fp,0(sp)
  80fbf0:	dec00204 	addi	sp,sp,8
  80fbf4:	f800283a 	ret

0080fbf8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80fbf8:	defffe04 	addi	sp,sp,-8
  80fbfc:	dfc00115 	stw	ra,4(sp)
  80fc00:	df000015 	stw	fp,0(sp)
  80fc04:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fc08:	d0a00b17 	ldw	r2,-32724(gp)
  80fc0c:	10000326 	beq	r2,zero,80fc1c <alt_get_errno+0x24>
  80fc10:	d0a00b17 	ldw	r2,-32724(gp)
  80fc14:	103ee83a 	callr	r2
  80fc18:	00000106 	br	80fc20 <alt_get_errno+0x28>
  80fc1c:	d0a70204 	addi	r2,gp,-25592
}
  80fc20:	e037883a 	mov	sp,fp
  80fc24:	dfc00117 	ldw	ra,4(sp)
  80fc28:	df000017 	ldw	fp,0(sp)
  80fc2c:	dec00204 	addi	sp,sp,8
  80fc30:	f800283a 	ret

0080fc34 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80fc34:	defffb04 	addi	sp,sp,-20
  80fc38:	dfc00415 	stw	ra,16(sp)
  80fc3c:	df000315 	stw	fp,12(sp)
  80fc40:	dc000215 	stw	r16,8(sp)
  80fc44:	df000304 	addi	fp,sp,12
  80fc48:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80fc4c:	e0bffe17 	ldw	r2,-8(fp)
  80fc50:	10800217 	ldw	r2,8(r2)
  80fc54:	10d00034 	orhi	r3,r2,16384
  80fc58:	e0bffe17 	ldw	r2,-8(fp)
  80fc5c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80fc60:	e03ffd15 	stw	zero,-12(fp)
  80fc64:	00002306 	br	80fcf4 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80fc68:	04002074 	movhi	r16,129
  80fc6c:	8404b404 	addi	r16,r16,4816
  80fc70:	e0bffd17 	ldw	r2,-12(fp)
  80fc74:	01400304 	movi	r5,12
  80fc78:	1009883a 	mov	r4,r2
  80fc7c:	080acec0 	call	80acec <__mulsi3>
  80fc80:	8085883a 	add	r2,r16,r2
  80fc84:	10c00017 	ldw	r3,0(r2)
  80fc88:	e0bffe17 	ldw	r2,-8(fp)
  80fc8c:	10800017 	ldw	r2,0(r2)
  80fc90:	1880151e 	bne	r3,r2,80fce8 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80fc94:	04002074 	movhi	r16,129
  80fc98:	8404b404 	addi	r16,r16,4816
  80fc9c:	e0bffd17 	ldw	r2,-12(fp)
  80fca0:	01400304 	movi	r5,12
  80fca4:	1009883a 	mov	r4,r2
  80fca8:	080acec0 	call	80acec <__mulsi3>
  80fcac:	8085883a 	add	r2,r16,r2
  80fcb0:	10800204 	addi	r2,r2,8
  80fcb4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80fcb8:	10000b0e 	bge	r2,zero,80fce8 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  80fcbc:	01400304 	movi	r5,12
  80fcc0:	e13ffd17 	ldw	r4,-12(fp)
  80fcc4:	080acec0 	call	80acec <__mulsi3>
  80fcc8:	1007883a 	mov	r3,r2
  80fccc:	00802074 	movhi	r2,129
  80fcd0:	1084b404 	addi	r2,r2,4816
  80fcd4:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80fcd8:	e0bffe17 	ldw	r2,-8(fp)
  80fcdc:	18800226 	beq	r3,r2,80fce8 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  80fce0:	00bffcc4 	movi	r2,-13
  80fce4:	00000806 	br	80fd08 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80fce8:	e0bffd17 	ldw	r2,-12(fp)
  80fcec:	10800044 	addi	r2,r2,1
  80fcf0:	e0bffd15 	stw	r2,-12(fp)
  80fcf4:	d0a00a17 	ldw	r2,-32728(gp)
  80fcf8:	1007883a 	mov	r3,r2
  80fcfc:	e0bffd17 	ldw	r2,-12(fp)
  80fd00:	18bfd92e 	bgeu	r3,r2,80fc68 <__alt_mem_onchip_memory2+0xff7efc68>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80fd04:	0005883a 	mov	r2,zero
}
  80fd08:	e6ffff04 	addi	sp,fp,-4
  80fd0c:	dfc00217 	ldw	ra,8(sp)
  80fd10:	df000117 	ldw	fp,4(sp)
  80fd14:	dc000017 	ldw	r16,0(sp)
  80fd18:	dec00304 	addi	sp,sp,12
  80fd1c:	f800283a 	ret

0080fd20 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80fd20:	defff604 	addi	sp,sp,-40
  80fd24:	dfc00915 	stw	ra,36(sp)
  80fd28:	df000815 	stw	fp,32(sp)
  80fd2c:	df000804 	addi	fp,sp,32
  80fd30:	e13ffd15 	stw	r4,-12(fp)
  80fd34:	e17ffe15 	stw	r5,-8(fp)
  80fd38:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80fd3c:	00bfffc4 	movi	r2,-1
  80fd40:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  80fd44:	00bffb44 	movi	r2,-19
  80fd48:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  80fd4c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80fd50:	d1600804 	addi	r5,gp,-32736
  80fd54:	e13ffd17 	ldw	r4,-12(fp)
  80fd58:	08100440 	call	810044 <alt_find_dev>
  80fd5c:	e0bff815 	stw	r2,-32(fp)
  80fd60:	e0bff817 	ldw	r2,-32(fp)
  80fd64:	1000051e 	bne	r2,zero,80fd7c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80fd68:	e13ffd17 	ldw	r4,-12(fp)
  80fd6c:	08100d40 	call	8100d4 <alt_find_file>
  80fd70:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  80fd74:	00800044 	movi	r2,1
  80fd78:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80fd7c:	e0bff817 	ldw	r2,-32(fp)
  80fd80:	10002b26 	beq	r2,zero,80fe30 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80fd84:	e13ff817 	ldw	r4,-32(fp)
  80fd88:	08101dc0 	call	8101dc <alt_get_fd>
  80fd8c:	e0bff915 	stw	r2,-28(fp)
  80fd90:	e0bff917 	ldw	r2,-28(fp)
  80fd94:	1000030e 	bge	r2,zero,80fda4 <open+0x84>
    {
      status = index;
  80fd98:	e0bff917 	ldw	r2,-28(fp)
  80fd9c:	e0bffa15 	stw	r2,-24(fp)
  80fda0:	00002506 	br	80fe38 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
  80fda4:	01400304 	movi	r5,12
  80fda8:	e13ff917 	ldw	r4,-28(fp)
  80fdac:	080acec0 	call	80acec <__mulsi3>
  80fdb0:	1007883a 	mov	r3,r2
  80fdb4:	00802074 	movhi	r2,129
  80fdb8:	1084b404 	addi	r2,r2,4816
  80fdbc:	1885883a 	add	r2,r3,r2
  80fdc0:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80fdc4:	e0fffe17 	ldw	r3,-8(fp)
  80fdc8:	00900034 	movhi	r2,16384
  80fdcc:	10bfffc4 	addi	r2,r2,-1
  80fdd0:	1886703a 	and	r3,r3,r2
  80fdd4:	e0bffc17 	ldw	r2,-16(fp)
  80fdd8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80fddc:	e0bffb17 	ldw	r2,-20(fp)
  80fde0:	1000051e 	bne	r2,zero,80fdf8 <open+0xd8>
  80fde4:	e13ffc17 	ldw	r4,-16(fp)
  80fde8:	080fc340 	call	80fc34 <alt_file_locked>
  80fdec:	e0bffa15 	stw	r2,-24(fp)
  80fdf0:	e0bffa17 	ldw	r2,-24(fp)
  80fdf4:	10001016 	blt	r2,zero,80fe38 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80fdf8:	e0bff817 	ldw	r2,-32(fp)
  80fdfc:	10800317 	ldw	r2,12(r2)
  80fe00:	10000826 	beq	r2,zero,80fe24 <open+0x104>
  80fe04:	e0bff817 	ldw	r2,-32(fp)
  80fe08:	10800317 	ldw	r2,12(r2)
  80fe0c:	e1ffff17 	ldw	r7,-4(fp)
  80fe10:	e1bffe17 	ldw	r6,-8(fp)
  80fe14:	e17ffd17 	ldw	r5,-12(fp)
  80fe18:	e13ffc17 	ldw	r4,-16(fp)
  80fe1c:	103ee83a 	callr	r2
  80fe20:	00000106 	br	80fe28 <open+0x108>
  80fe24:	0005883a 	mov	r2,zero
  80fe28:	e0bffa15 	stw	r2,-24(fp)
  80fe2c:	00000206 	br	80fe38 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80fe30:	00bffb44 	movi	r2,-19
  80fe34:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80fe38:	e0bffa17 	ldw	r2,-24(fp)
  80fe3c:	1000090e 	bge	r2,zero,80fe64 <open+0x144>
  {
    alt_release_fd (index);  
  80fe40:	e13ff917 	ldw	r4,-28(fp)
  80fe44:	080dcdc0 	call	80dcdc <alt_release_fd>
    ALT_ERRNO = -status;
  80fe48:	080fbf80 	call	80fbf8 <alt_get_errno>
  80fe4c:	1007883a 	mov	r3,r2
  80fe50:	e0bffa17 	ldw	r2,-24(fp)
  80fe54:	0085c83a 	sub	r2,zero,r2
  80fe58:	18800015 	stw	r2,0(r3)
    return -1;
  80fe5c:	00bfffc4 	movi	r2,-1
  80fe60:	00000106 	br	80fe68 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
  80fe64:	e0bff917 	ldw	r2,-28(fp)
}
  80fe68:	e037883a 	mov	sp,fp
  80fe6c:	dfc00117 	ldw	ra,4(sp)
  80fe70:	df000017 	ldw	fp,0(sp)
  80fe74:	dec00204 	addi	sp,sp,8
  80fe78:	f800283a 	ret

0080fe7c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80fe7c:	defffa04 	addi	sp,sp,-24
  80fe80:	df000515 	stw	fp,20(sp)
  80fe84:	df000504 	addi	fp,sp,20
  80fe88:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80fe8c:	0005303a 	rdctl	r2,status
  80fe90:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fe94:	e0fffc17 	ldw	r3,-16(fp)
  80fe98:	00bfff84 	movi	r2,-2
  80fe9c:	1884703a 	and	r2,r3,r2
  80fea0:	1001703a 	wrctl	status,r2
  
  return context;
  80fea4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80fea8:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  80feac:	e0bfff17 	ldw	r2,-4(fp)
  80feb0:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80feb4:	e0bffd17 	ldw	r2,-12(fp)
  80feb8:	10800017 	ldw	r2,0(r2)
  80febc:	e0fffd17 	ldw	r3,-12(fp)
  80fec0:	18c00117 	ldw	r3,4(r3)
  80fec4:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80fec8:	e0bffd17 	ldw	r2,-12(fp)
  80fecc:	10800117 	ldw	r2,4(r2)
  80fed0:	e0fffd17 	ldw	r3,-12(fp)
  80fed4:	18c00017 	ldw	r3,0(r3)
  80fed8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80fedc:	e0bffd17 	ldw	r2,-12(fp)
  80fee0:	e0fffd17 	ldw	r3,-12(fp)
  80fee4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80fee8:	e0bffd17 	ldw	r2,-12(fp)
  80feec:	e0fffd17 	ldw	r3,-12(fp)
  80fef0:	10c00015 	stw	r3,0(r2)
  80fef4:	e0bffb17 	ldw	r2,-20(fp)
  80fef8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80fefc:	e0bffe17 	ldw	r2,-8(fp)
  80ff00:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  80ff04:	0001883a 	nop
  80ff08:	e037883a 	mov	sp,fp
  80ff0c:	df000017 	ldw	fp,0(sp)
  80ff10:	dec00104 	addi	sp,sp,4
  80ff14:	f800283a 	ret

0080ff18 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80ff18:	defffb04 	addi	sp,sp,-20
  80ff1c:	dfc00415 	stw	ra,16(sp)
  80ff20:	df000315 	stw	fp,12(sp)
  80ff24:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80ff28:	d0a00e17 	ldw	r2,-32712(gp)
  80ff2c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80ff30:	d0a70817 	ldw	r2,-25568(gp)
  80ff34:	10800044 	addi	r2,r2,1
  80ff38:	d0a70815 	stw	r2,-25568(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80ff3c:	00002e06 	br	80fff8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80ff40:	e0bffd17 	ldw	r2,-12(fp)
  80ff44:	10800017 	ldw	r2,0(r2)
  80ff48:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80ff4c:	e0bffd17 	ldw	r2,-12(fp)
  80ff50:	10800403 	ldbu	r2,16(r2)
  80ff54:	10803fcc 	andi	r2,r2,255
  80ff58:	10000426 	beq	r2,zero,80ff6c <alt_tick+0x54>
  80ff5c:	d0a70817 	ldw	r2,-25568(gp)
  80ff60:	1000021e 	bne	r2,zero,80ff6c <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80ff64:	e0bffd17 	ldw	r2,-12(fp)
  80ff68:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80ff6c:	e0bffd17 	ldw	r2,-12(fp)
  80ff70:	10800217 	ldw	r2,8(r2)
  80ff74:	d0e70817 	ldw	r3,-25568(gp)
  80ff78:	18801d36 	bltu	r3,r2,80fff0 <alt_tick+0xd8>
  80ff7c:	e0bffd17 	ldw	r2,-12(fp)
  80ff80:	10800403 	ldbu	r2,16(r2)
  80ff84:	10803fcc 	andi	r2,r2,255
  80ff88:	1000191e 	bne	r2,zero,80fff0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80ff8c:	e0bffd17 	ldw	r2,-12(fp)
  80ff90:	10800317 	ldw	r2,12(r2)
  80ff94:	e0fffd17 	ldw	r3,-12(fp)
  80ff98:	18c00517 	ldw	r3,20(r3)
  80ff9c:	1809883a 	mov	r4,r3
  80ffa0:	103ee83a 	callr	r2
  80ffa4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80ffa8:	e0bfff17 	ldw	r2,-4(fp)
  80ffac:	1000031e 	bne	r2,zero,80ffbc <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80ffb0:	e13ffd17 	ldw	r4,-12(fp)
  80ffb4:	080fe7c0 	call	80fe7c <alt_alarm_stop>
  80ffb8:	00000d06 	br	80fff0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80ffbc:	e0bffd17 	ldw	r2,-12(fp)
  80ffc0:	10c00217 	ldw	r3,8(r2)
  80ffc4:	e0bfff17 	ldw	r2,-4(fp)
  80ffc8:	1887883a 	add	r3,r3,r2
  80ffcc:	e0bffd17 	ldw	r2,-12(fp)
  80ffd0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80ffd4:	e0bffd17 	ldw	r2,-12(fp)
  80ffd8:	10c00217 	ldw	r3,8(r2)
  80ffdc:	d0a70817 	ldw	r2,-25568(gp)
  80ffe0:	1880032e 	bgeu	r3,r2,80fff0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80ffe4:	e0bffd17 	ldw	r2,-12(fp)
  80ffe8:	00c00044 	movi	r3,1
  80ffec:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80fff0:	e0bffe17 	ldw	r2,-8(fp)
  80fff4:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80fff8:	e0fffd17 	ldw	r3,-12(fp)
  80fffc:	d0a00e04 	addi	r2,gp,-32712
  810000:	18bfcf1e 	bne	r3,r2,80ff40 <__alt_mem_onchip_memory2+0xff7eff40>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  810004:	0001883a 	nop
}
  810008:	0001883a 	nop
  81000c:	e037883a 	mov	sp,fp
  810010:	dfc00117 	ldw	ra,4(sp)
  810014:	df000017 	ldw	fp,0(sp)
  810018:	dec00204 	addi	sp,sp,8
  81001c:	f800283a 	ret

00810020 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  810020:	deffff04 	addi	sp,sp,-4
  810024:	df000015 	stw	fp,0(sp)
  810028:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  81002c:	000170fa 	wrctl	ienable,zero
}
  810030:	0001883a 	nop
  810034:	e037883a 	mov	sp,fp
  810038:	df000017 	ldw	fp,0(sp)
  81003c:	dec00104 	addi	sp,sp,4
  810040:	f800283a 	ret

00810044 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  810044:	defffa04 	addi	sp,sp,-24
  810048:	dfc00515 	stw	ra,20(sp)
  81004c:	df000415 	stw	fp,16(sp)
  810050:	df000404 	addi	fp,sp,16
  810054:	e13ffe15 	stw	r4,-8(fp)
  810058:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  81005c:	e0bfff17 	ldw	r2,-4(fp)
  810060:	10800017 	ldw	r2,0(r2)
  810064:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  810068:	e13ffe17 	ldw	r4,-8(fp)
  81006c:	08005c80 	call	8005c8 <strlen>
  810070:	10800044 	addi	r2,r2,1
  810074:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  810078:	00000d06 	br	8100b0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  81007c:	e0bffc17 	ldw	r2,-16(fp)
  810080:	10800217 	ldw	r2,8(r2)
  810084:	e0fffd17 	ldw	r3,-12(fp)
  810088:	180d883a 	mov	r6,r3
  81008c:	e17ffe17 	ldw	r5,-8(fp)
  810090:	1009883a 	mov	r4,r2
  810094:	08103880 	call	810388 <memcmp>
  810098:	1000021e 	bne	r2,zero,8100a4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  81009c:	e0bffc17 	ldw	r2,-16(fp)
  8100a0:	00000706 	br	8100c0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  8100a4:	e0bffc17 	ldw	r2,-16(fp)
  8100a8:	10800017 	ldw	r2,0(r2)
  8100ac:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  8100b0:	e0fffc17 	ldw	r3,-16(fp)
  8100b4:	e0bfff17 	ldw	r2,-4(fp)
  8100b8:	18bff01e 	bne	r3,r2,81007c <__alt_mem_onchip_memory2+0xff7f007c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  8100bc:	0005883a 	mov	r2,zero
}
  8100c0:	e037883a 	mov	sp,fp
  8100c4:	dfc00117 	ldw	ra,4(sp)
  8100c8:	df000017 	ldw	fp,0(sp)
  8100cc:	dec00204 	addi	sp,sp,8
  8100d0:	f800283a 	ret

008100d4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  8100d4:	defffb04 	addi	sp,sp,-20
  8100d8:	dfc00415 	stw	ra,16(sp)
  8100dc:	df000315 	stw	fp,12(sp)
  8100e0:	df000304 	addi	fp,sp,12
  8100e4:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  8100e8:	d0a00617 	ldw	r2,-32744(gp)
  8100ec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  8100f0:	00003106 	br	8101b8 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  8100f4:	e0bffd17 	ldw	r2,-12(fp)
  8100f8:	10800217 	ldw	r2,8(r2)
  8100fc:	1009883a 	mov	r4,r2
  810100:	08005c80 	call	8005c8 <strlen>
  810104:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  810108:	e0bffd17 	ldw	r2,-12(fp)
  81010c:	10c00217 	ldw	r3,8(r2)
  810110:	e0bffe17 	ldw	r2,-8(fp)
  810114:	10bfffc4 	addi	r2,r2,-1
  810118:	1885883a 	add	r2,r3,r2
  81011c:	10800003 	ldbu	r2,0(r2)
  810120:	10803fcc 	andi	r2,r2,255
  810124:	1080201c 	xori	r2,r2,128
  810128:	10bfe004 	addi	r2,r2,-128
  81012c:	10800bd8 	cmpnei	r2,r2,47
  810130:	1000031e 	bne	r2,zero,810140 <alt_find_file+0x6c>
    {
      len -= 1;
  810134:	e0bffe17 	ldw	r2,-8(fp)
  810138:	10bfffc4 	addi	r2,r2,-1
  81013c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  810140:	e0bffe17 	ldw	r2,-8(fp)
  810144:	e0ffff17 	ldw	r3,-4(fp)
  810148:	1885883a 	add	r2,r3,r2
  81014c:	10800003 	ldbu	r2,0(r2)
  810150:	10803fcc 	andi	r2,r2,255
  810154:	1080201c 	xori	r2,r2,128
  810158:	10bfe004 	addi	r2,r2,-128
  81015c:	10800be0 	cmpeqi	r2,r2,47
  810160:	1000081e 	bne	r2,zero,810184 <alt_find_file+0xb0>
  810164:	e0bffe17 	ldw	r2,-8(fp)
  810168:	e0ffff17 	ldw	r3,-4(fp)
  81016c:	1885883a 	add	r2,r3,r2
  810170:	10800003 	ldbu	r2,0(r2)
  810174:	10803fcc 	andi	r2,r2,255
  810178:	1080201c 	xori	r2,r2,128
  81017c:	10bfe004 	addi	r2,r2,-128
  810180:	10000a1e 	bne	r2,zero,8101ac <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  810184:	e0bffd17 	ldw	r2,-12(fp)
  810188:	10800217 	ldw	r2,8(r2)
  81018c:	e0fffe17 	ldw	r3,-8(fp)
  810190:	180d883a 	mov	r6,r3
  810194:	e17fff17 	ldw	r5,-4(fp)
  810198:	1009883a 	mov	r4,r2
  81019c:	08103880 	call	810388 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  8101a0:	1000021e 	bne	r2,zero,8101ac <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  8101a4:	e0bffd17 	ldw	r2,-12(fp)
  8101a8:	00000706 	br	8101c8 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  8101ac:	e0bffd17 	ldw	r2,-12(fp)
  8101b0:	10800017 	ldw	r2,0(r2)
  8101b4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  8101b8:	e0fffd17 	ldw	r3,-12(fp)
  8101bc:	d0a00604 	addi	r2,gp,-32744
  8101c0:	18bfcc1e 	bne	r3,r2,8100f4 <__alt_mem_onchip_memory2+0xff7f00f4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  8101c4:	0005883a 	mov	r2,zero
}
  8101c8:	e037883a 	mov	sp,fp
  8101cc:	dfc00117 	ldw	ra,4(sp)
  8101d0:	df000017 	ldw	fp,0(sp)
  8101d4:	dec00204 	addi	sp,sp,8
  8101d8:	f800283a 	ret

008101dc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  8101dc:	defffa04 	addi	sp,sp,-24
  8101e0:	dfc00515 	stw	ra,20(sp)
  8101e4:	df000415 	stw	fp,16(sp)
  8101e8:	dc000315 	stw	r16,12(sp)
  8101ec:	df000404 	addi	fp,sp,16
  8101f0:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
  8101f4:	00bffa04 	movi	r2,-24
  8101f8:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  8101fc:	e03ffc15 	stw	zero,-16(fp)
  810200:	00001d06 	br	810278 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
  810204:	04002074 	movhi	r16,129
  810208:	8404b404 	addi	r16,r16,4816
  81020c:	e0bffc17 	ldw	r2,-16(fp)
  810210:	01400304 	movi	r5,12
  810214:	1009883a 	mov	r4,r2
  810218:	080acec0 	call	80acec <__mulsi3>
  81021c:	8085883a 	add	r2,r16,r2
  810220:	10800017 	ldw	r2,0(r2)
  810224:	1000111e 	bne	r2,zero,81026c <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
  810228:	04002074 	movhi	r16,129
  81022c:	8404b404 	addi	r16,r16,4816
  810230:	e0bffc17 	ldw	r2,-16(fp)
  810234:	01400304 	movi	r5,12
  810238:	1009883a 	mov	r4,r2
  81023c:	080acec0 	call	80acec <__mulsi3>
  810240:	8085883a 	add	r2,r16,r2
  810244:	e0fffe17 	ldw	r3,-8(fp)
  810248:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  81024c:	d0e00a17 	ldw	r3,-32728(gp)
  810250:	e0bffc17 	ldw	r2,-16(fp)
  810254:	1880020e 	bge	r3,r2,810260 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
  810258:	e0bffc17 	ldw	r2,-16(fp)
  81025c:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  810260:	e0bffc17 	ldw	r2,-16(fp)
  810264:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
  810268:	00000606 	br	810284 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81026c:	e0bffc17 	ldw	r2,-16(fp)
  810270:	10800044 	addi	r2,r2,1
  810274:	e0bffc15 	stw	r2,-16(fp)
  810278:	e0bffc17 	ldw	r2,-16(fp)
  81027c:	10800810 	cmplti	r2,r2,32
  810280:	103fe01e 	bne	r2,zero,810204 <__alt_mem_onchip_memory2+0xff7f0204>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  810284:	e0bffd17 	ldw	r2,-12(fp)
}
  810288:	e6ffff04 	addi	sp,fp,-4
  81028c:	dfc00217 	ldw	ra,8(sp)
  810290:	df000117 	ldw	fp,4(sp)
  810294:	dc000017 	ldw	r16,0(sp)
  810298:	dec00304 	addi	sp,sp,12
  81029c:	f800283a 	ret

008102a0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  8102a0:	defffe04 	addi	sp,sp,-8
  8102a4:	df000115 	stw	fp,4(sp)
  8102a8:	df000104 	addi	fp,sp,4
  8102ac:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  8102b0:	e0bfff17 	ldw	r2,-4(fp)
  8102b4:	10bffe84 	addi	r2,r2,-6
  8102b8:	10c00428 	cmpgeui	r3,r2,16
  8102bc:	18001a1e 	bne	r3,zero,810328 <alt_exception_cause_generated_bad_addr+0x88>
  8102c0:	100690ba 	slli	r3,r2,2
  8102c4:	00802074 	movhi	r2,129
  8102c8:	1080b604 	addi	r2,r2,728
  8102cc:	1885883a 	add	r2,r3,r2
  8102d0:	10800017 	ldw	r2,0(r2)
  8102d4:	1000683a 	jmp	r2
  8102d8:	00810318 	cmpnei	r2,zero,1036
  8102dc:	00810318 	cmpnei	r2,zero,1036
  8102e0:	00810328 	cmpgeui	r2,zero,1036
  8102e4:	00810328 	cmpgeui	r2,zero,1036
  8102e8:	00810328 	cmpgeui	r2,zero,1036
  8102ec:	00810318 	cmpnei	r2,zero,1036
  8102f0:	00810320 	cmpeqi	r2,zero,1036
  8102f4:	00810328 	cmpgeui	r2,zero,1036
  8102f8:	00810318 	cmpnei	r2,zero,1036
  8102fc:	00810318 	cmpnei	r2,zero,1036
  810300:	00810328 	cmpgeui	r2,zero,1036
  810304:	00810318 	cmpnei	r2,zero,1036
  810308:	00810320 	cmpeqi	r2,zero,1036
  81030c:	00810328 	cmpgeui	r2,zero,1036
  810310:	00810328 	cmpgeui	r2,zero,1036
  810314:	00810318 	cmpnei	r2,zero,1036
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  810318:	00800044 	movi	r2,1
  81031c:	00000306 	br	81032c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  810320:	0005883a 	mov	r2,zero
  810324:	00000106 	br	81032c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  810328:	0005883a 	mov	r2,zero
  }
}
  81032c:	e037883a 	mov	sp,fp
  810330:	df000017 	ldw	fp,0(sp)
  810334:	dec00104 	addi	sp,sp,4
  810338:	f800283a 	ret

0081033c <atexit>:
  81033c:	200b883a 	mov	r5,r4
  810340:	000f883a 	mov	r7,zero
  810344:	000d883a 	mov	r6,zero
  810348:	0009883a 	mov	r4,zero
  81034c:	08104041 	jmpi	810404 <__register_exitproc>

00810350 <exit>:
  810350:	defffe04 	addi	sp,sp,-8
  810354:	000b883a 	mov	r5,zero
  810358:	dc000015 	stw	r16,0(sp)
  81035c:	dfc00115 	stw	ra,4(sp)
  810360:	2021883a 	mov	r16,r4
  810364:	081051c0 	call	81051c <__call_exitprocs>
  810368:	00802074 	movhi	r2,129
  81036c:	10895d04 	addi	r2,r2,9588
  810370:	11000017 	ldw	r4,0(r2)
  810374:	20800f17 	ldw	r2,60(r4)
  810378:	10000126 	beq	r2,zero,810380 <exit+0x30>
  81037c:	103ee83a 	callr	r2
  810380:	8009883a 	mov	r4,r16
  810384:	081069c0 	call	81069c <_exit>

00810388 <memcmp>:
  810388:	01c000c4 	movi	r7,3
  81038c:	3980192e 	bgeu	r7,r6,8103f4 <memcmp+0x6c>
  810390:	2144b03a 	or	r2,r4,r5
  810394:	11c4703a 	and	r2,r2,r7
  810398:	10000f26 	beq	r2,zero,8103d8 <memcmp+0x50>
  81039c:	20800003 	ldbu	r2,0(r4)
  8103a0:	28c00003 	ldbu	r3,0(r5)
  8103a4:	10c0151e 	bne	r2,r3,8103fc <memcmp+0x74>
  8103a8:	31bfff84 	addi	r6,r6,-2
  8103ac:	01ffffc4 	movi	r7,-1
  8103b0:	00000406 	br	8103c4 <memcmp+0x3c>
  8103b4:	20800003 	ldbu	r2,0(r4)
  8103b8:	28c00003 	ldbu	r3,0(r5)
  8103bc:	31bfffc4 	addi	r6,r6,-1
  8103c0:	10c00e1e 	bne	r2,r3,8103fc <memcmp+0x74>
  8103c4:	21000044 	addi	r4,r4,1
  8103c8:	29400044 	addi	r5,r5,1
  8103cc:	31fff91e 	bne	r6,r7,8103b4 <__alt_mem_onchip_memory2+0xff7f03b4>
  8103d0:	0005883a 	mov	r2,zero
  8103d4:	f800283a 	ret
  8103d8:	20c00017 	ldw	r3,0(r4)
  8103dc:	28800017 	ldw	r2,0(r5)
  8103e0:	18bfee1e 	bne	r3,r2,81039c <__alt_mem_onchip_memory2+0xff7f039c>
  8103e4:	31bfff04 	addi	r6,r6,-4
  8103e8:	21000104 	addi	r4,r4,4
  8103ec:	29400104 	addi	r5,r5,4
  8103f0:	39bff936 	bltu	r7,r6,8103d8 <__alt_mem_onchip_memory2+0xff7f03d8>
  8103f4:	303fe91e 	bne	r6,zero,81039c <__alt_mem_onchip_memory2+0xff7f039c>
  8103f8:	003ff506 	br	8103d0 <__alt_mem_onchip_memory2+0xff7f03d0>
  8103fc:	10c5c83a 	sub	r2,r2,r3
  810400:	f800283a 	ret

00810404 <__register_exitproc>:
  810404:	defffa04 	addi	sp,sp,-24
  810408:	dc000315 	stw	r16,12(sp)
  81040c:	04002074 	movhi	r16,129
  810410:	84095d04 	addi	r16,r16,9588
  810414:	80c00017 	ldw	r3,0(r16)
  810418:	dc400415 	stw	r17,16(sp)
  81041c:	dfc00515 	stw	ra,20(sp)
  810420:	18805217 	ldw	r2,328(r3)
  810424:	2023883a 	mov	r17,r4
  810428:	10003726 	beq	r2,zero,810508 <__register_exitproc+0x104>
  81042c:	10c00117 	ldw	r3,4(r2)
  810430:	010007c4 	movi	r4,31
  810434:	20c00e16 	blt	r4,r3,810470 <__register_exitproc+0x6c>
  810438:	1a000044 	addi	r8,r3,1
  81043c:	8800221e 	bne	r17,zero,8104c8 <__register_exitproc+0xc4>
  810440:	18c00084 	addi	r3,r3,2
  810444:	18c7883a 	add	r3,r3,r3
  810448:	18c7883a 	add	r3,r3,r3
  81044c:	12000115 	stw	r8,4(r2)
  810450:	10c7883a 	add	r3,r2,r3
  810454:	19400015 	stw	r5,0(r3)
  810458:	0005883a 	mov	r2,zero
  81045c:	dfc00517 	ldw	ra,20(sp)
  810460:	dc400417 	ldw	r17,16(sp)
  810464:	dc000317 	ldw	r16,12(sp)
  810468:	dec00604 	addi	sp,sp,24
  81046c:	f800283a 	ret
  810470:	00800034 	movhi	r2,0
  810474:	10800004 	addi	r2,r2,0
  810478:	10002626 	beq	r2,zero,810514 <__register_exitproc+0x110>
  81047c:	01006404 	movi	r4,400
  810480:	d9400015 	stw	r5,0(sp)
  810484:	d9800115 	stw	r6,4(sp)
  810488:	d9c00215 	stw	r7,8(sp)
  81048c:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  810490:	d9400017 	ldw	r5,0(sp)
  810494:	d9800117 	ldw	r6,4(sp)
  810498:	d9c00217 	ldw	r7,8(sp)
  81049c:	10001d26 	beq	r2,zero,810514 <__register_exitproc+0x110>
  8104a0:	81000017 	ldw	r4,0(r16)
  8104a4:	10000115 	stw	zero,4(r2)
  8104a8:	02000044 	movi	r8,1
  8104ac:	22405217 	ldw	r9,328(r4)
  8104b0:	0007883a 	mov	r3,zero
  8104b4:	12400015 	stw	r9,0(r2)
  8104b8:	20805215 	stw	r2,328(r4)
  8104bc:	10006215 	stw	zero,392(r2)
  8104c0:	10006315 	stw	zero,396(r2)
  8104c4:	883fde26 	beq	r17,zero,810440 <__alt_mem_onchip_memory2+0xff7f0440>
  8104c8:	18c9883a 	add	r4,r3,r3
  8104cc:	2109883a 	add	r4,r4,r4
  8104d0:	1109883a 	add	r4,r2,r4
  8104d4:	21802215 	stw	r6,136(r4)
  8104d8:	01800044 	movi	r6,1
  8104dc:	12406217 	ldw	r9,392(r2)
  8104e0:	30cc983a 	sll	r6,r6,r3
  8104e4:	4992b03a 	or	r9,r9,r6
  8104e8:	12406215 	stw	r9,392(r2)
  8104ec:	21c04215 	stw	r7,264(r4)
  8104f0:	01000084 	movi	r4,2
  8104f4:	893fd21e 	bne	r17,r4,810440 <__alt_mem_onchip_memory2+0xff7f0440>
  8104f8:	11006317 	ldw	r4,396(r2)
  8104fc:	218cb03a 	or	r6,r4,r6
  810500:	11806315 	stw	r6,396(r2)
  810504:	003fce06 	br	810440 <__alt_mem_onchip_memory2+0xff7f0440>
  810508:	18805304 	addi	r2,r3,332
  81050c:	18805215 	stw	r2,328(r3)
  810510:	003fc606 	br	81042c <__alt_mem_onchip_memory2+0xff7f042c>
  810514:	00bfffc4 	movi	r2,-1
  810518:	003fd006 	br	81045c <__alt_mem_onchip_memory2+0xff7f045c>

0081051c <__call_exitprocs>:
  81051c:	defff504 	addi	sp,sp,-44
  810520:	df000915 	stw	fp,36(sp)
  810524:	dd400615 	stw	r21,24(sp)
  810528:	dc800315 	stw	r18,12(sp)
  81052c:	dfc00a15 	stw	ra,40(sp)
  810530:	ddc00815 	stw	r23,32(sp)
  810534:	dd800715 	stw	r22,28(sp)
  810538:	dd000515 	stw	r20,20(sp)
  81053c:	dcc00415 	stw	r19,16(sp)
  810540:	dc400215 	stw	r17,8(sp)
  810544:	dc000115 	stw	r16,4(sp)
  810548:	d9000015 	stw	r4,0(sp)
  81054c:	2839883a 	mov	fp,r5
  810550:	04800044 	movi	r18,1
  810554:	057fffc4 	movi	r21,-1
  810558:	00802074 	movhi	r2,129
  81055c:	10895d04 	addi	r2,r2,9588
  810560:	12000017 	ldw	r8,0(r2)
  810564:	45005217 	ldw	r20,328(r8)
  810568:	44c05204 	addi	r19,r8,328
  81056c:	a0001c26 	beq	r20,zero,8105e0 <__call_exitprocs+0xc4>
  810570:	a0800117 	ldw	r2,4(r20)
  810574:	15ffffc4 	addi	r23,r2,-1
  810578:	b8000d16 	blt	r23,zero,8105b0 <__call_exitprocs+0x94>
  81057c:	14000044 	addi	r16,r2,1
  810580:	8421883a 	add	r16,r16,r16
  810584:	8421883a 	add	r16,r16,r16
  810588:	84402004 	addi	r17,r16,128
  81058c:	a463883a 	add	r17,r20,r17
  810590:	a421883a 	add	r16,r20,r16
  810594:	e0001e26 	beq	fp,zero,810610 <__call_exitprocs+0xf4>
  810598:	80804017 	ldw	r2,256(r16)
  81059c:	e0801c26 	beq	fp,r2,810610 <__call_exitprocs+0xf4>
  8105a0:	bdffffc4 	addi	r23,r23,-1
  8105a4:	843fff04 	addi	r16,r16,-4
  8105a8:	8c7fff04 	addi	r17,r17,-4
  8105ac:	bd7ff91e 	bne	r23,r21,810594 <__alt_mem_onchip_memory2+0xff7f0594>
  8105b0:	00800034 	movhi	r2,0
  8105b4:	10800004 	addi	r2,r2,0
  8105b8:	10000926 	beq	r2,zero,8105e0 <__call_exitprocs+0xc4>
  8105bc:	a0800117 	ldw	r2,4(r20)
  8105c0:	1000301e 	bne	r2,zero,810684 <__call_exitprocs+0x168>
  8105c4:	a0800017 	ldw	r2,0(r20)
  8105c8:	10003226 	beq	r2,zero,810694 <__call_exitprocs+0x178>
  8105cc:	a009883a 	mov	r4,r20
  8105d0:	98800015 	stw	r2,0(r19)
  8105d4:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  8105d8:	9d000017 	ldw	r20,0(r19)
  8105dc:	a03fe41e 	bne	r20,zero,810570 <__alt_mem_onchip_memory2+0xff7f0570>
  8105e0:	dfc00a17 	ldw	ra,40(sp)
  8105e4:	df000917 	ldw	fp,36(sp)
  8105e8:	ddc00817 	ldw	r23,32(sp)
  8105ec:	dd800717 	ldw	r22,28(sp)
  8105f0:	dd400617 	ldw	r21,24(sp)
  8105f4:	dd000517 	ldw	r20,20(sp)
  8105f8:	dcc00417 	ldw	r19,16(sp)
  8105fc:	dc800317 	ldw	r18,12(sp)
  810600:	dc400217 	ldw	r17,8(sp)
  810604:	dc000117 	ldw	r16,4(sp)
  810608:	dec00b04 	addi	sp,sp,44
  81060c:	f800283a 	ret
  810610:	a0800117 	ldw	r2,4(r20)
  810614:	80c00017 	ldw	r3,0(r16)
  810618:	10bfffc4 	addi	r2,r2,-1
  81061c:	15c01426 	beq	r2,r23,810670 <__call_exitprocs+0x154>
  810620:	80000015 	stw	zero,0(r16)
  810624:	183fde26 	beq	r3,zero,8105a0 <__alt_mem_onchip_memory2+0xff7f05a0>
  810628:	95c8983a 	sll	r4,r18,r23
  81062c:	a0806217 	ldw	r2,392(r20)
  810630:	a5800117 	ldw	r22,4(r20)
  810634:	2084703a 	and	r2,r4,r2
  810638:	10000b26 	beq	r2,zero,810668 <__call_exitprocs+0x14c>
  81063c:	a0806317 	ldw	r2,396(r20)
  810640:	2088703a 	and	r4,r4,r2
  810644:	20000c1e 	bne	r4,zero,810678 <__call_exitprocs+0x15c>
  810648:	89400017 	ldw	r5,0(r17)
  81064c:	d9000017 	ldw	r4,0(sp)
  810650:	183ee83a 	callr	r3
  810654:	a0800117 	ldw	r2,4(r20)
  810658:	15bfbf1e 	bne	r2,r22,810558 <__alt_mem_onchip_memory2+0xff7f0558>
  81065c:	98800017 	ldw	r2,0(r19)
  810660:	153fcf26 	beq	r2,r20,8105a0 <__alt_mem_onchip_memory2+0xff7f05a0>
  810664:	003fbc06 	br	810558 <__alt_mem_onchip_memory2+0xff7f0558>
  810668:	183ee83a 	callr	r3
  81066c:	003ff906 	br	810654 <__alt_mem_onchip_memory2+0xff7f0654>
  810670:	a5c00115 	stw	r23,4(r20)
  810674:	003feb06 	br	810624 <__alt_mem_onchip_memory2+0xff7f0624>
  810678:	89000017 	ldw	r4,0(r17)
  81067c:	183ee83a 	callr	r3
  810680:	003ff406 	br	810654 <__alt_mem_onchip_memory2+0xff7f0654>
  810684:	a0800017 	ldw	r2,0(r20)
  810688:	a027883a 	mov	r19,r20
  81068c:	1029883a 	mov	r20,r2
  810690:	003fb606 	br	81056c <__alt_mem_onchip_memory2+0xff7f056c>
  810694:	0005883a 	mov	r2,zero
  810698:	003ffb06 	br	810688 <__alt_mem_onchip_memory2+0xff7f0688>

0081069c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  81069c:	defffd04 	addi	sp,sp,-12
  8106a0:	df000215 	stw	fp,8(sp)
  8106a4:	df000204 	addi	fp,sp,8
  8106a8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  8106ac:	0001883a 	nop
  8106b0:	e0bfff17 	ldw	r2,-4(fp)
  8106b4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  8106b8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  8106bc:	10000226 	beq	r2,zero,8106c8 <_exit+0x2c>
    ALT_SIM_FAIL();
  8106c0:	002af070 	cmpltui	zero,zero,43969
  8106c4:	00000106 	br	8106cc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  8106c8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  8106cc:	003fff06 	br	8106cc <__alt_mem_onchip_memory2+0xff7f06cc>
